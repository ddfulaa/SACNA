(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    211528,       3989]
NotebookOptionsPosition[    207356,       3915]
NotebookOutlinePosition[    207801,       3932]
CellTagsIndexPosition[    207758,       3929]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Using the SACNA package - reverse APED model", "Title",
 CellChangeTimes->{{3.8427089804948845`*^9, 3.8427090295265875`*^9}, {
  3.8427124704454412`*^9, 3.8427124835003734`*^9}, {3.8427125201800275`*^9, 
  3.842712524604207*^9}, {3.842712584012227*^9, 3.842712587756327*^9}, {
  3.842716609057553*^9, 3.842716609523698*^9}, {3.8427187218899508`*^9, 
  3.842718726104165*^9}},ExpressionUUID->"f14da9e3-cd3b-4f0b-a9f0-\
2cf4c418e796"],

Cell["\<\
The purpose of this document is to give a short tutorial for the SACNA \
package. 
Let\[CloseCurlyQuote]s start by bringing the package functions to this \
notebook. \
\>", "Text",
 CellChangeTimes->{{3.8427090940384088`*^9, 3.842709143198292*^9}, {
  3.84270917461474*^9, 3.842709175014347*^9}, {3.842709234782617*^9, 
  3.8427092854783845`*^9}, {3.842709323126561*^9, 3.8427094019120207`*^9}, {
  3.8427097349980364`*^9, 
  3.8427097355261126`*^9}},ExpressionUUID->"602b73d6-e6b7-4f08-864c-\
6a109a3d117e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Quiet", "[", 
   RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{" ", 
  RowBox[{
   RowBox[{"Quiet", "[", 
    RowBox[{"Remove", "[", "\"\<Global`*\>\"", "]"}], "]"}], 
   ";"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SetDirectory", "[", 
    RowBox[{"NotebookDirectory", "[", "]"}], "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Quiet", "[", 
  RowBox[{"Get", "[", "\"\<../SACNA.wl\>\"", "]"}], "]"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.829920780934763*^9, 3.829920833287795*^9}, {
   3.8299208636854086`*^9, 3.829920876961373*^9}, {3.829922063595199*^9, 
   3.8299220699542017`*^9}, {3.8299228854502554`*^9, 3.8299228919647746`*^9}, 
   3.8299231995739794`*^9, {3.8299232541125665`*^9, 3.8299232669128857`*^9}, {
   3.829925391036563*^9, 3.829925396478142*^9}, {3.8299255175481253`*^9, 
   3.829925518116885*^9}, {3.82992555759075*^9, 3.829925560670066*^9}, {
   3.840724447360667*^9, 3.8407244479747877`*^9}, {3.8427065329074345`*^9, 
   3.842706566196204*^9}, 3.842709417793969*^9, {3.8427096240014725`*^9, 
   3.8427096706682377`*^9}, 3.8427097141447287`*^9, {3.842709938742461*^9, 
   3.8427099438321295`*^9}, 3.8427166654771967`*^9},
 CellLabel->
  "In[348]:=",ExpressionUUID->"7de15c4f-cdca-4f45-a8e1-cc488242b23f"],

Cell["\<\
Now let\[CloseCurlyQuote]s input the reactions and rates lists of this model. \
If we input the rates list as an empty list, SACNA will assign rates by \
default in the order of the list (the first reaction has constant k1 and so \
on). Reactions must be in terms of D-species, L-species, Z-species (achiral \
species), and the empty specie N1.\
\>", "Text",
 CellChangeTimes->{{3.8427097456059995`*^9, 3.842709857877953*^9}, {
  3.8427112324453096`*^9, 3.842711321629273*^9}, {3.8427169233629885`*^9, 
  3.842716953402181*^9}},ExpressionUUID->"b017b4c6-5f91-434b-9965-\
0c6a9a34a1ec"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"reactions", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
    "\"\<L1->L2\>\"", ",", "\"\<L2->L1\>\"", ",", "\"\<L2+L1->L3\>\"", ",", 
     "\"\<L3->L2+L1\>\"", ",", "\"\<D2+L1->D4\>\"", ",", "\"\<D4->D2+L1\>\"", 
     ",", "\"\<L3->2L1\>\"", ",", "\"\<2L1->L3\>\"", ",", "\"\<L4->L1+D1\>\"",
      ",", "\"\<L1+D1->L4\>\"", ",", "\"\<L4->D3\>\"", ",", 
     "\"\<D3->L4\>\""}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rates", "=", 
   RowBox[{"{", "}"}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.8299802087543697`*^9, 3.829980210527068*^9}, {
   3.8299802452946463`*^9, 3.8299802475258884`*^9}, 3.8300323485873623`*^9, {
   3.8300323930454693`*^9, 3.8300323975875793`*^9}, {3.8300324350051165`*^9, 
   3.8300324418441353`*^9}, {3.8323369366694775`*^9, 
   3.8323370468387628`*^9}, {3.8323370881981716`*^9, 
   3.8323371093764877`*^9}, {3.832338190731743*^9, 3.8323382153086376`*^9}, {
   3.832338285147352*^9, 3.8323383224186974`*^9}, {3.832338491223477*^9, 
   3.832338515498742*^9}, {3.83233856647456*^9, 3.832338629236281*^9}, {
   3.8323541640908356`*^9, 3.8323541744500914`*^9}, {3.8427098616239605`*^9, 
   3.842709885111328*^9}, {3.842712544794824*^9, 3.842712551332883*^9}, {
   3.84271665057981*^9, 3.842716653138283*^9}, 3.8427187878116703`*^9},
 CellLabel->
  "In[352]:=",ExpressionUUID->"4aff2120-9760-4b40-93b4-726cb68aaa90"],

Cell[TextData[{
 "Note that we are not writing all the reactions, only it is left the dual \
reactions. If we use the function ",
 Cell[BoxData[
 "ClausuraDual"], "MCode",ExpressionUUID->
  "b4dff757-df7a-44cb-a684-eb7efcc4d351"],
 ", we can get all the reactions. This is done by default in the ",
 Cell[BoxData[
 "RunSemiAlgebraicAnalysis"], "MCode",ExpressionUUID->
  "2dac29e8-a853-402c-b326-7a84ee84b6b2"],
 " function."
}], "Text",
 CellChangeTimes->{{3.8427166832815638`*^9, 3.8427167267783475`*^9}, {
  3.842716772884984*^9, 
  3.8427168751690893`*^9}},ExpressionUUID->"7e36ca04-46f8-4458-8f62-\
d4bab08a03a8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Quiet", "[", 
  RowBox[{"ClausuraDual", "[", "reactions", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.842716789803565*^9, 3.8427167944176445`*^9}},
 CellLabel->
  "In[327]:=",ExpressionUUID->"2d30350e-b7ae-47af-b723-c307350c9d0f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"L1->L2\"\>", ",", "\<\"L2->L1\"\>", ",", "\<\"L1+L2->L3\"\>", 
   ",", "\<\"L3->L1+L2\"\>", ",", "\<\"D2+L1->D4\"\>", 
   ",", "\<\"D4->D2+L1\"\>", ",", "\<\"L3->2L1\"\>", ",", "\<\"2L1->L3\"\>", 
   ",", "\<\"L4->D1+L1\"\>", ",", "\<\"D1+L1->L4\"\>", ",", "\<\"L4->D3\"\>", 
   ",", "\<\"D3->L4\"\>", ",", "\<\"D1->D2\"\>", ",", "\<\"D2->D1\"\>", 
   ",", "\<\"D1+D2->D3\"\>", ",", "\<\"D3->D1+D2\"\>", 
   ",", "\<\"D1+L2->L4\"\>", ",", "\<\"L4->D1+L2\"\>", ",", "\<\"D3->2D1\"\>",
    ",", "\<\"2D1->D3\"\>", ",", "\<\"D4->D1+L1\"\>", 
   ",", "\<\"D1+L1->D4\"\>", ",", "\<\"D4->L3\"\>", ",", "\<\"L3->D4\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.8427167960094633`*^9, 3.842717829715605*^9, 
  3.8427179242428904`*^9, 3.8427188004367743`*^9},
 CellLabel->
  "Out[327]=",ExpressionUUID->"26a11d3e-fdff-4293-9735-0372c7db5e8c"]
}, Open  ]],

Cell[TextData[{
 "Now we can run the semialgebraic analysis of the model by using the ",
 Cell[BoxData[
 "RunSemiAlgebraicAnalysis"], "MCode",ExpressionUUID->
  "44b0ebc9-ae61-49d8-8504-00883738b73a"],
 " function. The first parameter corresponds to the reactions\
\[CloseCurlyQuote] list, the second parameter corresponds to the rates\
\[CloseCurlyQuote] list, and the last parameter corresponds to time in \
seconds (the Collins\[CloseCurlyQuote] algorithm may take so much time to \
find a solution). The function will ask for the Routh-Hurwitz condition \
number. Considering the first and last numbers will be faster, because this \
conditions are shorter than the others.  This example give us 4 Routh-Hurwitz \
conditions. Let\[CloseCurlyQuote]s begin with the first condition."
}], "Text",
 CellChangeTimes->{{3.8427099676939907`*^9, 3.8427100059258976`*^9}, {
  3.8427101192537117`*^9, 3.8427102665183506`*^9}, {3.8427103005748997`*^9, 
  3.842710465061907*^9}, {3.8427171235625453`*^9, 
  3.84271715327422*^9}},ExpressionUUID->"185a94e5-ebf5-42dc-b449-\
2866cefbf384"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"time", "=", "60"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"cadSolutions", "=", 
  RowBox[{"RunSemiAlgebraicAnalysis", "[", 
   RowBox[{"reactions", ",", "rates", ",", "time"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.829924896228572*^9, 3.829924948156794*^9}, 
   3.8299251270983305`*^9, {3.8299251806157093`*^9, 3.8299252075494227`*^9}, {
   3.829925634381386*^9, 3.829925641493581*^9}, 3.8299257355361433`*^9, 
   3.8299262231689196`*^9, {3.8299263467902403`*^9, 3.8299263509659896`*^9}, {
   3.829926596348615*^9, 3.8299266009083385`*^9}, {3.829926747692322*^9, 
   3.8299267633781567`*^9}, {3.8299274292024574`*^9, 3.829927434721895*^9}, {
   3.8299275674929686`*^9, 3.829927568186384*^9}, {3.8299276038419466`*^9, 
   3.829927607041765*^9}, {3.8299314273027153`*^9, 3.82993143282679*^9}, {
   3.829931467432212*^9, 3.8299314820846653`*^9}, {3.829931535315168*^9, 
   3.829931599571806*^9}, 3.829932117315387*^9, 3.8299321652901945`*^9, 
   3.829941723804149*^9, {3.829980164454916*^9, 3.8299801667501907`*^9}, {
   3.8300323678168736`*^9, 3.8300323745906825`*^9}, 3.830032468888297*^9, 
   3.840724473751862*^9, 3.842707793002324*^9, {3.84270987565723*^9, 
   3.842709889782691*^9}, {3.8427179310990334`*^9, 3.842717932330598*^9}},
 CellLabel->
  "In[332]:=",ExpressionUUID->"a3c6f401-14c6-4ff2-942f-f481510d0a40"],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{
  3.8427077961327925`*^9, 3.842708026619934*^9, 3.8427082554088497`*^9, {
   3.842710271946938*^9, 3.842710322124141*^9}, 3.8427104715523586`*^9, {
   3.8427169766207647`*^9, 3.8427169821673446`*^9}, 3.842717457446833*^9, 
   3.8427178345496826`*^9, {3.84271791587529*^9, 3.842717929348466*^9}, 
   3.8427188140166163`*^9, 3.8427189400057187`*^9, 3.8427191414207087`*^9},
 CellLabel->
  "Out[333]=",ExpressionUUID->"bc129e4d-3e38-42e6-a03e-074cf8064a38"]
}, Open  ]],

Cell["\<\
The first condition cannot be satisfied. As mentioned before, let\
\[CloseCurlyQuote]s try with the last condition (in this case, the fourth \
one).\
\>", "Text",
 CellChangeTimes->{{3.842717940953575*^9, 
  3.8427180265282917`*^9}},ExpressionUUID->"46ae1494-6492-48c7-9c93-\
daef48011d4a"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"time", "=", "600"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"cadSolutions", "=", 
  RowBox[{"RunSemiAlgebraicAnalysis", "[", 
   RowBox[{"reactions", ",", "rates", ",", "time"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.8427178394512043`*^9, 3.842717862101259*^9}, {
   3.842718031860697*^9, 3.8427180370576963`*^9}, 
   3.842719291269517*^9},ExpressionUUID->"c74a82c3-c997-417f-a626-\
6c6c339d8135"],

Cell[CellGroupData[{

Cell[BoxData["\<\"Intento de buscar un ejemplo sin CAD\"\>"], "Print",
 CellChangeTimes->{3.8427192693090734`*^9},
 CellLabel->
  "Durante la evaluaci\[OAcute]n de \
In[334]:=",ExpressionUUID->"79e89d25-4219-42c6-9f89-adf1c5c00682"],

Cell[BoxData["\<\"Se alcanz\[OAcute] el tiempo impuesto sin llegar a una \
soluci\[OAcute]n\"\>"], "Print",
 CellChangeTimes->{3.842719269316579*^9},
 CellLabel->
  "Durante la evaluaci\[OAcute]n de \
In[334]:=",ExpressionUUID->"764bdc66-0ec0-46b8-8db9-0860457d7b4f"]
}, Open  ]],

Cell[BoxData["\<\"Se alcanz\[OAcute] el tiempo impuesto sin llegar a una \
soluci\[OAcute]n\"\>"], "Output",
 CellChangeTimes->{{3.8427178533385897`*^9, 3.8427178642055984`*^9}, 
   3.84271804232607*^9, 3.8427192693265867`*^9},
 CellLabel->
  "Out[335]=",ExpressionUUID->"488fcb88-1edf-4673-a78f-5fd301a4da25"]
}, Open  ]],

Cell["\<\
In this case, the algorithm may take so much time finding the solution (if it \
exists).  For these cases, SACNA provides the function \
RunSemiAlgebraicAnalysisWithInitialValues. We can input values for some \
parameters, in order to speed up the computations.\
\>", "Text",
 CellChangeTimes->{{3.842710645653183*^9, 3.8427107090373435`*^9}, {
  3.8427108227193108`*^9, 3.842710841829531*^9}, {3.842710892917077*^9, 
  3.8427109526453695`*^9}, {3.8427193034475965`*^9, 
  3.8427194834799585`*^9}},ExpressionUUID->"9027ee9e-8e30-48cb-9f7d-\
a99d8dfffa5b"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"time", "=", "60"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"initialValues", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"D1", "\[Rule]", "1"}], ",", 
     RowBox[{"D2", "\[Rule]", "1"}], ",", 
     RowBox[{"k1", "\[Rule]", "1"}], ",", 
     RowBox[{"k2", "\[Rule]", " ", "1"}], ",", 
     RowBox[{"k3", "\[Rule]", "1"}], ",", 
     RowBox[{"k4", "\[Rule]", 
      FractionBox["30761", "1401"]}], ",", " ", 
     RowBox[{"k9", "\[Rule]", "1"}], ",", 
     RowBox[{"k10", "\[Rule]", "1"}], ",", 
     RowBox[{"k11", "\[Rule]", "1"}], ",", 
     RowBox[{"k12", "\[Rule]", 
      RowBox[{"3", "/", "2"}]}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"cadSolutions", "=", 
  RowBox[{"RunSemiAlgebraicAnalysisWithInitialValues", "[", 
   RowBox[{"reactions", ",", "rates", ",", "time", ",", "initialValues"}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.8427195172347984`*^9, 3.8427195732196207`*^9}, {
  3.842719706852108*^9, 3.8427197083450227`*^9}},
 CellLabel->
  "In[354]:=",ExpressionUUID->"410f564c-3f2d-4485-8bbd-b70d94b614f0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{"0", "<", "D3", "<", 
     FractionBox["137054226", "4319775625"]}], "&&", 
    RowBox[{"D4", "\[Equal]", 
     FractionBox[
      RowBox[{"65725", " ", "D3"}], "5604"]}], "&&", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         FractionBox[
          RowBox[{
           RowBox[{
            RowBox[{"-", "8406"}], " ", "D3"}], "-", 
           RowBox[{"12609", " ", 
            SuperscriptBox["D3", "2"]}], "+", 
           RowBox[{"8406", " ", "D3", " ", "D4"}]}], 
          RowBox[{
           RowBox[{"8406", " ", "D3"}], "-", 
           RowBox[{"5604", " ", "D4"}], "+", 
           RowBox[{"139856", " ", "D3", " ", "D4"}], "-", 
           RowBox[{"5604", " ", 
            SuperscriptBox["D4", "2"]}]}]], "<", "k5", "<", 
         FractionBox[
          RowBox[{
           RowBox[{
            RowBox[{"-", "8406"}], " ", "D3"}], "-", 
           RowBox[{"12609", " ", 
            SuperscriptBox["D3", "2"]}], "+", 
           RowBox[{"8406", " ", "D3", " ", "D4"}]}], 
          RowBox[{
           RowBox[{"8406", " ", "D3"}], "-", 
           RowBox[{"2802", " ", "D4"}], "+", 
           RowBox[{"65725", " ", "D3", " ", "D4"}]}]]}], "&&", 
        RowBox[{"k6", "\[Equal]", 
         FractionBox[
          RowBox[{"2", "+", 
           RowBox[{"3", " ", "D3"}], "-", 
           RowBox[{"4", " ", "D4"}], "+", 
           RowBox[{"2", " ", "k5"}]}], 
          RowBox[{"2", " ", "D4"}]]}], "&&", 
        RowBox[{
         FractionBox[
          RowBox[{"2802", "-", 
           RowBox[{"65725", " ", "D3"}], "+", 
           RowBox[{"2802", " ", "D4"}]}], 
          RowBox[{"2802", " ", "D3"}]], "<", "k7", "<", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"11776806", "-", 
            RowBox[{"552484350", " ", "D3"}], "+", 
            RowBox[{"23553612", " ", "D4"}], "+", 
            RowBox[{"172384644", " ", "k5"}], "-", 
            RowBox[{"4319775625", " ", "D3", " ", "k5"}], "+", 
            RowBox[{"184161450", " ", "D4", " ", "k5"}], "+", 
            RowBox[{"11776806", " ", "k6"}], "-", 
            RowBox[{"552484350", " ", "D3", " ", "k6"}], "+", 
            RowBox[{"23553612", " ", "D4", " ", "k6"}]}], ")"}], "/", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"23553612", " ", "D3"}], "-", 
            RowBox[{"7851204", " ", "k5"}], "+", 
            RowBox[{"184161450", " ", "D3", " ", "k5"}], "+", 
            RowBox[{"23553612", " ", "D3", " ", "k6"}]}], ")"}]}]}], "&&", 
        RowBox[{"k8", "\[Equal]", 
         FractionBox[
          RowBox[{
           RowBox[{"-", "2802"}], "+", 
           RowBox[{"65725", " ", "D3"}], "-", 
           RowBox[{"2802", " ", "D4"}], "+", 
           RowBox[{"2802", " ", "D3", " ", "k7"}]}], "2802"]}]}], ")"}], "||", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"k5", "\[GreaterEqual]", 
         FractionBox[
          RowBox[{
           RowBox[{
            RowBox[{"-", "8406"}], " ", "D3"}], "-", 
           RowBox[{"12609", " ", 
            SuperscriptBox["D3", "2"]}], "+", 
           RowBox[{"8406", " ", "D3", " ", "D4"}]}], 
          RowBox[{
           RowBox[{"8406", " ", "D3"}], "-", 
           RowBox[{"2802", " ", "D4"}], "+", 
           RowBox[{"65725", " ", "D3", " ", "D4"}]}]]}], "&&", 
        RowBox[{"k6", "\[Equal]", 
         FractionBox[
          RowBox[{"2", "+", 
           RowBox[{"3", " ", "D3"}], "-", 
           RowBox[{"4", " ", "D4"}], "+", 
           RowBox[{"2", " ", "k5"}]}], 
          RowBox[{"2", " ", "D4"}]]}], "&&", 
        RowBox[{"k7", ">", 
         FractionBox[
          RowBox[{"2802", "-", 
           RowBox[{"65725", " ", "D3"}], "+", 
           RowBox[{"2802", " ", "D4"}]}], 
          RowBox[{"2802", " ", "D3"}]]}], "&&", 
        RowBox[{"k8", "\[Equal]", 
         FractionBox[
          RowBox[{
           RowBox[{"-", "2802"}], "+", 
           RowBox[{"65725", " ", "D3"}], "-", 
           RowBox[{"2802", " ", "D4"}], "+", 
           RowBox[{"2802", " ", "D3", " ", "k7"}]}], "2802"]}]}], ")"}]}], 
     ")"}]}], ")"}], "||", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     FractionBox["137054226", "4319775625"], "\[LessEqual]", "D3", "<", 
     FractionBox["321215676", "4872259975"]}], "&&", 
    RowBox[{"D4", "\[Equal]", 
     FractionBox[
      RowBox[{"65725", " ", "D3"}], "5604"]}], "&&", 
    RowBox[{"k5", ">", 
     FractionBox[
      RowBox[{
       RowBox[{
        RowBox[{"-", "8406"}], " ", "D3"}], "-", 
       RowBox[{"12609", " ", 
        SuperscriptBox["D3", "2"]}], "+", 
       RowBox[{"8406", " ", "D3", " ", "D4"}]}], 
      RowBox[{
       RowBox[{"8406", " ", "D3"}], "-", 
       RowBox[{"5604", " ", "D4"}], "+", 
       RowBox[{"139856", " ", "D3", " ", "D4"}], "-", 
       RowBox[{"5604", " ", 
        SuperscriptBox["D4", "2"]}]}]]}], "&&", 
    RowBox[{"k6", "\[Equal]", 
     FractionBox[
      RowBox[{"2", "+", 
       RowBox[{"3", " ", "D3"}], "-", 
       RowBox[{"4", " ", "D4"}], "+", 
       RowBox[{"2", " ", "k5"}]}], 
      RowBox[{"2", " ", "D4"}]]}], "&&", 
    RowBox[{
     FractionBox[
      RowBox[{"2802", "-", 
       RowBox[{"65725", " ", "D3"}], "+", 
       RowBox[{"2802", " ", "D4"}]}], 
      RowBox[{"2802", " ", "D3"}]], "<", "k7", "<", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"11776806", "-", 
        RowBox[{"552484350", " ", "D3"}], "+", 
        RowBox[{"23553612", " ", "D4"}], "+", 
        RowBox[{"172384644", " ", "k5"}], "-", 
        RowBox[{"4319775625", " ", "D3", " ", "k5"}], "+", 
        RowBox[{"184161450", " ", "D4", " ", "k5"}], "+", 
        RowBox[{"11776806", " ", "k6"}], "-", 
        RowBox[{"552484350", " ", "D3", " ", "k6"}], "+", 
        RowBox[{"23553612", " ", "D4", " ", "k6"}]}], ")"}], "/", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"23553612", " ", "D3"}], "-", 
        RowBox[{"7851204", " ", "k5"}], "+", 
        RowBox[{"184161450", " ", "D3", " ", "k5"}], "+", 
        RowBox[{"23553612", " ", "D3", " ", "k6"}]}], ")"}]}]}], "&&", 
    RowBox[{"k8", "\[Equal]", 
     FractionBox[
      RowBox[{
       RowBox[{"-", "2802"}], "+", 
       RowBox[{"65725", " ", "D3"}], "-", 
       RowBox[{"2802", " ", "D4"}], "+", 
       RowBox[{"2802", " ", "D3", " ", "k7"}]}], "2802"]}]}], 
   ")"}]}]], "Output",
 CellChangeTimes->{
  3.8427195835858555`*^9, {3.8427196973916006`*^9, 3.8427197128874903`*^9}, 
   3.842719743041953*^9},
 CellLabel->
  "Out[356]=",ExpressionUUID->"403943e2-da74-4206-89e7-aa10a49d7086"]
}, Open  ]],

Cell[TextData[{
 "The algorithm found a solution. This is a particular solution of the \
system, but it is better than nothing. There is not an specific way of \
choosing the parameters and their initial values, that\[CloseCurlyQuote]s why \
this sould be done as a last resource. \nLet\[CloseCurlyQuote]s find some \
particular solutions by using the ",
 Cell[BoxData[
 "FindInstance"], "MCode",ExpressionUUID->
  "7e6ae78c-9c09-4df3-9cce-73a7c04e8bb5"],
 " command.  Note that the solution doesn\[CloseCurlyQuote]t contain an \
expression for the L-species. It\[CloseCurlyQuote]s because we are assuming \
the racemic condition."
}], "Text",
 CellChangeTimes->{{3.8427161753633194`*^9, 3.8427161873538485`*^9}, {
   3.842719824659221*^9, 3.8427199997276525`*^9}, 
   3.84272017544174*^9},ExpressionUUID->"9979bc9c-ff2e-45b9-b0ab-\
e64c2b90c771"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"numberOfSamples", "=", "10"}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{"feel", " ", "free", " ", "to", " ", "change"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"samplesList", "=", 
   RowBox[{"FindInstance", "[", 
    RowBox[{"cadSolutions", ",", 
     RowBox[{"DeleteCases", "[", 
      RowBox[{
       RowBox[{"DeleteDuplicates", "@", 
        RowBox[{"Cases", "[", 
         RowBox[{"cadSolutions", ",", "_Symbol", ",", "Infinity"}], "]"}]}], 
       ",", " ", 
       RowBox[{"Alternatives", "@@", 
        RowBox[{"{", 
         RowBox[{
         "GreaterEqual", ",", "Greater", ",", "Less", ",", "LessEqual"}], 
         "}"}]}]}], "]"}], ",", "numberOfSamples"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"sampleNumber", "=", "8"}], ";"}], "   ", 
  RowBox[{"(*", 
   RowBox[{"feel", " ", "free", " ", "to", " ", "change"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"samplesList", "[", 
  RowBox[{"[", "sampleNumber", "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.840724507394494*^9, 3.84072455111475*^9}, {
   3.8407250398693333`*^9, 3.8407250403346524`*^9}, {3.8407250768225856`*^9, 
   3.840725207479194*^9}, {3.840725662333973*^9, 3.8407256625833783`*^9}, {
   3.840725704152712*^9, 3.8407257062224274`*^9}, 3.842708082251777*^9, {
   3.8427082119922514`*^9, 3.842708226144125*^9}, {3.8427082669463587`*^9, 
   3.842708276002417*^9}, {3.8427105181855545`*^9, 3.8427106209749403`*^9}, {
   3.8427107252626486`*^9, 3.8427108124470725`*^9}, {3.8427108741740217`*^9, 
   3.842710884001808*^9}, {3.842711087729061*^9, 3.8427110881659307`*^9}},
 CellLabel->
  "In[357]:=",ExpressionUUID->"4f55b2f8-f8ac-442a-8467-2f344bd413af"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"D3", "\[Rule]", 
    FractionBox["1343", "29269"]}], ",", 
   RowBox[{"D4", "\[Rule]", 
    FractionBox["88268675", "164023476"]}], ",", 
   RowBox[{"k5", "\[Rule]", "101"}], ",", 
   RowBox[{"k6", "\[Rule]", 
    FractionBox["194884076", "1038455"]}], ",", 
   RowBox[{"k7", "\[Rule]", 
    FractionBox["41", "3"]}], ",", 
   RowBox[{"k8", "\[Rule]", 
    FractionBox["27102883", "164023476"]}]}], "}"}]], "Output",
 CellChangeTimes->{3.84271088748347*^9, 3.8427180528305826`*^9, 
  3.8427200038313*^9},
 CellLabel->
  "Out[360]=",ExpressionUUID->"654cb216-53cb-428b-b70a-9eaf23128cfb"]
}, Open  ]],

Cell[TextData[{
 "Now we are ready to using the SACNA\[CloseCurlyQuote]s system simulator \
with the  ",
 Cell[BoxData[
 "ReactionSystemSimulator"], "MCode",ExpressionUUID->
  "82254784-73a1-403a-a01d-ca05aaac2eb3"],
 " function. The simulation time depends on the sample. The user has to set \
it up."
}], "Text",
 CellChangeTimes->{{3.842710988453456*^9, 3.842711072565322*^9}, {
  3.8427180694664383`*^9, 
  3.8427181369383316`*^9}},ExpressionUUID->"783a2c8e-d5ba-45de-9e16-\
1889345b6d79"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"simulationTimeMin", "=", "0"}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"simulationTimeMax", "=", "500"}], ";", " ", 
  RowBox[{"(*", 
   RowBox[{"feel", " ", "free", " ", "to", " ", "change"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"graficss", "=", 
   RowBox[{"ReactionSystemSimulator", "[", 
    RowBox[{"reactions", ",", "rates", ",", " ", 
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{"samplesList", "[", 
        RowBox[{"[", "sampleNumber", "]"}], "]"}], ",", "initialValues"}], 
      "]"}], ",", "0.000001", ",", "t", ",", "simulationTimeMin", ",", 
     "simulationTimeMax"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{
  3.8427108316645966`*^9, {3.8427110916691713`*^9, 3.8427110950940933`*^9}, {
   3.842711472086096*^9, 3.842711472181134*^9}, {3.84271814167794*^9, 
   3.8427181833152056`*^9}, {3.842720087504771*^9, 3.8427201269464645`*^9}},
 CellLabel->
  "In[369]:=",ExpressionUUID->"05a70f9b-cd41-46dd-931f-3e0ccf159a7f"],

Cell[CellGroupData[{

Cell[BoxData["\<\"Species Concentrations Graphic\"\>"], "Print",
 CellChangeTimes->{{3.842708230399178*^9, 3.8427082780593*^9}, 
   3.8427111089564266`*^9, 3.8427114743046613`*^9, 3.84271805668147*^9, {
   3.842718143452933*^9, 3.8427181853721924`*^9}, 3.842720008112118*^9, {
   3.8427201171508074`*^9, 3.8427201285705814`*^9}},
 CellLabel->
  "Durante la evaluaci\[OAcute]n de \
In[369]:=",ExpressionUUID->"d108a3e0-3a15-4f63-a685-6ead5b7b8f78"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0], 
          Thickness[Large]], 
         LineBox[CompressedData["
1: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
          "]]}, Annotation[#, "Charting`Private`Tag$55583#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1], 
          Thickness[Large]], 
         LineBox[CompressedData["
1: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
          "]]}, Annotation[#, "Charting`Private`Tag$55583#2"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {Automatic, Automatic}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0.2838666150290739}, 
     BaseStyle -> {FontFamily -> "Arial"}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox["\"Concentrations\"", TraditionalForm], None}, {
        FormBox["\"Time\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> Directive[
       GrayLevel[0], Bold, Medium], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {All, All}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{Automatic, Automatic}, {
       Automatic, Automatic}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"L1\"", "\"D1\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Arial", 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Arial", 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Arial", 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Arial", 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          Directive[
           GrayLevel[0], Bold, Medium], FontFamily -> "Arial"}, Background -> 
         Automatic, StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontFamily", "\[Rule]", "\"Arial\""}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontFamily", "\[Rule]", "\"Arial\""}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                   BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False], ",", 
                 "Bold", ",", "Medium"}], "]"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Print",
 CellChangeTimes->{{3.842708230399178*^9, 3.8427082780593*^9}, 
   3.8427111089564266`*^9, 3.8427114743046613`*^9, 3.84271805668147*^9, {
   3.842718143452933*^9, 3.8427181853721924`*^9}, 3.842720008112118*^9, {
   3.8427201171508074`*^9, 3.8427201290064106`*^9}},
 CellLabel->
  "Durante la evaluaci\[OAcute]n de \
In[369]:=",ExpressionUUID->"2c893a9a-ad2f-438e-a349-29213baa8f91"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0], 
          Thickness[Large]], 
         LineBox[CompressedData["
1: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
          "]]}, Annotation[#, "Charting`Private`Tag$55648#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1], 
          Thickness[Large]], 
         LineBox[CompressedData["
1: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
o+kPw9uP5j7PQ/2NZcR64oA/kLUd77TnoP3Z3yDSxtEfPD+OJvRkThNFGqua
pE/6g9gmem9ICjpvr+/7EJ3oD+YNMua2yei+Nl7W15nsD2OfX7JonpsmtK54
z5zN8odajhPrfieh+XK+EPl5zx+MXaXX2sSj+2ZHrN/LLn8oXKzYciwKxfu+
E2nLJ3/YwpZurBo5TbxPVI6MGPaHUxfmdEcjUD1qDyUrTqP5f5alGtDR+rym
W3GBIwB4vPXZekgoP+Esq3z/CwBrvVWHXXzRfUog+irnqQAg3zvVkmA6Tex7
H1V1MCkA9Kg5N1qMp4mH5yLbTqcEQNsVDtMNRtPEFa4INp7sAODrDWw7p4/q
+y/Fk+9+AOxV/VturjNN7B4LkBTpCgCBnRqG87tQ/7nhv9exPwA2Z+pM/1RA
9wcfP6vszwHwYU6z/PvOaYJ3wDtWbCoA2PJWgpnb0X3wo9vQVvZAsLpDVfWX
QP3/me1VOcVAiCicP3yWd5rYeNymKlA5EKYk/srs4Ub7h5Z12x2NQAiv3KTX
v3qaiHhkwbZrfyAwtUf0N7FPEzZ3TTyV7QOB9bDloOHCFMGdpSu5LyYQsq7+
tzF2eIqghyleNf0YCA23n26dKZ8ieFf/jFDpDgRh3fWbWEuniPy8akvRT4FQ
NjpO5i6ZIpqaTFhHRwMhW2t43ZrbU4SYTKB73DIav/gBlOVNEc+7rktUSQWB
625us/K4KcIuLGQ+XzYIJDMfgc2JKWKcU705QTEIZk/4XB6PmiIEVV8es9UI
ggkDGVt22hThl/y597txECT7felr90PzObA1Zwc5CJ6vr8+ZMULz6Rohr6Oj
3395TY/PYIpQC7tv/DMyCEST7A9I758iXPN0Fp+fCgLmm7cLKnuniAe/nB1d
s4Lgd/Qm/VE5NJ/iLOELdUGQGq4enr56iijYuCGDjS8Ydm6vXuX/ZJIoLnoq
ZC0YDJECVwt7yieJShX/rMJNwWCuEie4v2SSaLZ8ellPOhgYH1r+fi2aJJbP
+d2K1wwGOb9Nr86dmyTsOKtruL2DIe0xGKs5TxKeF3x1DwcEg9j1Ps8G20ni
iPT6F3dCgoGyX4NiemiSOLnft9E0Ihj6eDetbN8/STyI5m9PTg4Gh1/bPSV3
TBK8v7y/CTwOhtc/14wJTU0QIvF8wV41wSBi9PLD7a8ThNTGqqnS+mC400aq
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
pVL/3N1r+nOFOA6jEsL//D91VfQZ
          "]]}, Annotation[#, "Charting`Private`Tag$55648#2"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {Automatic, Automatic}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0.3634781627129168}, 
     BaseStyle -> {FontFamily -> "Arial"}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox["\"Concentrations\"", TraditionalForm], None}, {
        FormBox["\"Time\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> Directive[
       GrayLevel[0], Bold, Medium], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {All, All}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{Automatic, Automatic}, {
       Automatic, Automatic}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"L2\"", "\"D2\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Arial", 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Arial", 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Arial", 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Arial", 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          Directive[
           GrayLevel[0], Bold, Medium], FontFamily -> "Arial"}, Background -> 
         Automatic, StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontFamily", "\[Rule]", "\"Arial\""}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontFamily", "\[Rule]", "\"Arial\""}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                   BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False], ",", 
                 "Bold", ",", "Medium"}], "]"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Print",
 CellChangeTimes->{{3.842708230399178*^9, 3.8427082780593*^9}, 
   3.8427111089564266`*^9, 3.8427114743046613`*^9, 3.84271805668147*^9, {
   3.842718143452933*^9, 3.8427181853721924`*^9}, 3.842720008112118*^9, {
   3.8427201171508074`*^9, 3.842720129202029*^9}},
 CellLabel->
  "Durante la evaluaci\[OAcute]n de \
In[369]:=",ExpressionUUID->"03741ff3-508f-4706-b7cc-7bbde8c7d793"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0], 
          Thickness[Large]], 
         LineBox[CompressedData["
1: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
OLykb/nn/wG6J9Ug
          "]]}, Annotation[#, "Charting`Private`Tag$55713#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1], 
          Thickness[Large]], 
         LineBox[CompressedData["
1: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
+cwSOgrqTab/+z8oRFtU
          "]]}, Annotation[#, "Charting`Private`Tag$55713#2"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {Automatic, Automatic}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0.010041318033131855`}, 
     BaseStyle -> {FontFamily -> "Arial"}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox["\"Concentrations\"", TraditionalForm], None}, {
        FormBox["\"Time\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> Directive[
       GrayLevel[0], Bold, Medium], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {All, All}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{Automatic, Automatic}, {
       Automatic, Automatic}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"L3\"", "\"D3\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Arial", 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Arial", 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Arial", 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Arial", 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          Directive[
           GrayLevel[0], Bold, Medium], FontFamily -> "Arial"}, Background -> 
         Automatic, StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontFamily", "\[Rule]", "\"Arial\""}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontFamily", "\[Rule]", "\"Arial\""}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                   BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False], ",", 
                 "Bold", ",", "Medium"}], "]"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Print",
 CellChangeTimes->{{3.842708230399178*^9, 3.8427082780593*^9}, 
   3.8427111089564266`*^9, 3.8427114743046613`*^9, 3.84271805668147*^9, {
   3.842718143452933*^9, 3.8427181853721924`*^9}, 3.842720008112118*^9, {
   3.8427201171508074`*^9, 3.8427201294001703`*^9}},
 CellLabel->
  "Durante la evaluaci\[OAcute]n de \
In[369]:=",ExpressionUUID->"5317b7d4-961d-4f85-95de-d9faa408058d"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0], 
          Thickness[Large]], 
         LineBox[CompressedData["
1:eJwd13c8lV8cB3CVRJSGQkZCoiSyEnq+ImTvlb03d187FCmJQhGlpLS0jJJQ
ZDR0CSHjakgR2Q1+fuf4h9f7de9znnM+53vOuWebZ5iVz3IODo4F9Af/H5mc
N9H3/Xrgv70klaP7BglyUYSy3pU6QitOSxybyfvTV/jKe4Kz840ktrqeWGk6
qY8oaUvZjh1VfZ2D88pnoq7w6w7s/XOdplGkn4Sy+exO7IXziaZ/CqYICYki
eewq1qPccNICUTLKo4BdzTk5NVWwAhqT/JYcoy2pE0RaA6XCzbuxxTXlDCYK
NoJFT+vS87H2z3/KpwjBCqmMXdh9FMdMf5IYiLySX3qfeBNTrE1+G9w4ZiqL
bdZZ/2u8QAr6KbIy2O1bT6t+PiwDEREvpbCdAmwjOydl4efyk9uwxdKeiFoY
7AQpx0MS2OyHYjXNF3fB14MdS3lc+xDvoftLHoTv6oph+81/XfFMTwGuHMsV
wd65zei6Ws4e8Cr/LIw9J2kv3UVXBN09ckLYlQZPGyxfK8GvmywBbFGnn+fT
aHvB+8a+jUvjD94a8HqrMtBeJa3HhoxE3kNUFTC8zFqD7dLI6tDYqAqPLCd4
sSMXxAoUHqrCk6PzPNilAY9VhH6pwb8PHSuxWy+vXOQ7ow7fnxetwB7rsGpe
prAPum97LcOWPfjTZSRIA7auuDsfh3yIuV+WvXo/yO3d/xfbsyR5sv3mfsj5
8ngOO2+LZHL1N01gb42ZxH5iEWb5KEkLRB4WjWN3JlWJFG/XhmiZ66PY66fs
7md4HYDmK/uGsOUbR+aiHxyANZfSv2AbXjxK+C8eAFnewU/Ysbq3Wg5cJGCj
V/AA9mxz7CwtAGDjPtUubE6Vw7lB6QBe3x06l9q/tPGARwXAiAejfal9cvFx
k5U60PG+iIXttaVNQOqKDhxdldGEHX4s77FQkw6UXvZpWHrfmK/z2nEdMAnf
VY+d++Jf4R+tg/AqMbUGmxW4XZnVdRC4pu+XYR94yrSMWacHV/8MXcaWaPve
cmm7HhTF21/CXvbdyaR2vx7sePoyD7t+s7bBCh89yD51MQfbiLxMO+WJHhzO
kD+HbSd3UjbL8xCUtmoex94H/4rKGYcgrcEjEVvYPliqK/UQfJiNj8fuPWYm
LlJxCL5nPIhZmh/2BoErvPpgEdRKww47f3HxTqk+HKYp+WBblPDFtDTrw/nN
vF7Ye1/G/B3v14e1AoPuS/lOus3s5TGA4tsJztjRZtIjj10MgGc01xr7xMq7
nfVchiCi5AzYgaLiNkMihpB5haWNbax8pnWVkiEUF2hrYq/1IL0xOmII2Z+W
qWFnVqm+YN0zBNt89V3YBZTqu70OhyFePkIA+8+Y1c6s4MMgVVW5Htsq8Nt1
06OHgTQwt3Zpvj3WFVTfOAxnnX14sP3NPM8WzB4GXQ6+/2KRFeW4GN6ZRnDu
5duv2CnXcqdEi41g4tflT9iftu4J73hqBFYqgQPYmZsdAvQ/G8Hf29+6sH+v
uHVEdq8xbFk4+Rq7pt8URt8Zg4rQhXvYQk6fqq59NgbttMXb2OEddA2XOWNo
q/EoxpZ8c3lvi7gJtE1yX8FOejIhfT/EBOS0GzKwzTKzeKi8pmAtqEDC7j/c
1/ZP3wx2p2yTw95wY+Gvk7MZDDmzpbD1OcWlKklmkBh5Whz7brUrhZlnBm/n
Hm3EjlZmb5yZMIOgJ5oLMbg+xD7bjOWZQ7/ZsbfYJpErYkwfmsPdY5aN2Ec/
SBXdaTSHmawNz7GHM7xnAifNweIeqRT7yIqpV1NSFtBw9kYu9k4mNSg8wgKu
/2Z7YddfP7a49ZgF9I2UOmO7dmSee5dmARe06LbYZ/eWPVW4ZgEJr2v1sf+M
zvD+bLGAABJVFrvJg3EnQNoS8sNMhqORfYwjf3q+s4TAqVQHbAmdrnx2tyVI
lM+ZYfeqqZm5frGEwTKjQ9hWkpMljn8soel1sRI2/AkIt5CyglWjwIMtesNx
SpthBRs6nj2KQu7Kqyh8Gm8FgWdzirHPnd1ko5FqBX08R/KxV8e2lqpcsYJf
N1KTsH/bHKbvem0Ff8aS7bHfL9f4I7TVGq4fLJmKRE77nX0zW84afnpeG8I2
Gpt2FFCxhrxDkd3Ytd33K/kPW4P43fpq7JL7stFcFGvYH/8uGfukq9DiVIM1
cEvmbMTWqZzjfBdqA5Juzmsj8Hr3/KZygWkDCw5tC0xcz6s/eHsk2EAYU/In
trhTef1Ulg3o5Vi8xv77h3pM6JkNcESxj2OXakyu8OS1hbmj96YYyLcHB5V3
bbKFMsEKNvbVlFavaXFbuClz7i12evf9uqS9thBq9+w6dkhEWOJtR1twDuqw
w5Z5Mrp85oYt/O0fv0vH56FH797qB7bweWbmPLYAzxvP5Ke20OzwKh57uePt
F8LvbCHqSJ8N9sDvgIQDs7bAUXfjNw35wr5vy07o2YFXg5MaNu/jQQ6RQTvg
9cs7RkH+ZXE+qWLEDk5lTXhjt3834bOZtQOSxD897HyRx4Knee2hcV6OE3tP
XJrCoqo9vKI0x5KRrfU1nT+ftId0Lm8vEs5z4NdgXJY9CK5wPYAtyrzuJ1pg
D59u/BPC/npzPcW2zB5SD0q8DUdmrBlOaRxA35dZoYR9sT2z4raKA/y+XDYU
itdPiJG2IeEA569deIrtzcVR9+WwA4z/4UvH3r0vqEXMzQE2xt5Qx665qPP1
TIoD6BNZ8SHInz3HNlD7HWBEu38xCHnXhEGo1glH4As9kO+P16vWGYr0WUfw
mvT3xQ5O7mTy5TmCHyG4B/uOmE9i7z1HCJuer/bD55tRwoXoD46Q/uNNly+y
QmHViyoZJ3j0QnrSG+83Yyuarik6wWhG/UPsUA3jt6n7nSD7cCsZ+9677g/O
Zk4wkKkw4YXrbX52dJ7mBCmnvwx54vPBVklQ+6UT1HpIlbnj9VfAFN3+zgkE
X80FYZNHarat6XaC9c7iktiP4s3k+0adQDzeNdUNWaUkSCdG4AjwhJx1cEVW
W3U96JnXEXCvWPnuCPL+J1tqtZc7Q9h97h12eD97fW9witcZep4dabRFru7T
W3FrkzO4SX30xdZZHqa/Wc4Zchi2hTbIhsZ1b8bMnaHSK229NbJ9X1D35Xxn
SPa5/twc19s4xz/bG85g8tvPGrtnWbYo3wN0dskrfzHD+5dMrRuz3hkEHAaX
Y/uGCQxZjDjDlam9KibI1GXPJpdpuEDhtkgvQ+TyjVYCjw+6wOPNlC8GeL/Y
/k011MQFyBJm3tjRRusjetxcwMX7mrs+cuI5n8WHSS7QcPuSsR7eH7ev5fNu
d4Flly4OETj/w27bG8Jcoe9E+1Y1fB6YVOaZR7qCQsK4vyo+Py02CXQfc4VK
zUP3VXA92L1ePprjCjt0z2ooI8t6qbPX17tC2aixmiJe39H8F12E3ED6Wke7
HHJrXOCGb5Ju4H/j2aIsMkfiy5Tw3W7wePS8LLZrShQz8aAbLIqvpcogi2R/
s70Z7AaDJiETkvh8vFezbqbWDWxlHeJFkOsebjkR+9oNfif+OLEFebKMtriq
0w0+egqnCSNbVu0a2zLiBto8yhmCyMlfXvsUrHYH7/SrERuR9SbUdRtU3KHf
4MPb1cjPVq/7b32KOwQtJtjMqaN68kmKmD/tDscdacKzyLK189NDZ93BSuPc
x2nks7TvI0/z3KEtWcN+Etmf/aLb57478MRH7PqJLFBOK3vywR2OHF2AT8iv
1o0qXut1By+fIx1s5Lggzztpg+4wsJniO4D8Q8K80GvEHQpePYrtRa49JZux
ZhH192tZUidysMfHYA8ZD+i61vKzGVmyynLYeJcHNFjsMGpC/rC5yUtN0QPc
XMuvNiAffFPqxLvfA3L57QzrkIXU0wzLTD3AdfC+dxVyHZ+ONA/NAw4Lk3vu
Im95fP3j/ToP4BX9Rj6NrM/LsXxlswdszn8qcArn4eoo69jiAdlH794/gcfD
yUdb1u0Bv4pudiYiR1mS1lqNecCpA+1dEci9PzR1poQ8wfm8VrE3MveBLD8D
cU+wK175xQNZJWPs9EUpT5CPHBZyQ05Vv9Kjq+AJ9IhnIY7I2se4qJm6nuA/
//C5KfIlsdbrqqGeEMCI4lDF7w/f+TaF4gnV93heKiHP1iVO9TE94atgQrwC
slmgGiQlekLkv6HBHciL5Re7Oy+g/txiHNiC7G7hy8es84QRi+9WC2ooz8R/
pEohL5h4onuoCnngSdT1GTEvcOpK+FWBnPfrX4+ilBcM1otmPELe7Dqve2O3
F/zW/e/BLeTVGgubMg96gVpETdgF5Imx/56EBHuBRdzO5yTkku1xY8UkL0hT
lCkLRg50XpT8QveCBP6KPD/kL82Lp5ziveCz73Z9F+SuaxyuBtleYJXJuWiA
XOu0fPm2Wi+QGk39sQU5JiNBzfmlF/zhfse9CXl/0/Kg86+8YNdCthA/cqnq
ivY1HV6w32Ev3wrk4nWc1/9+94Lhujbih+ogcaZhpVH7Rm+w9ZssLUN23ctz
NtnPG2pOzFQSyBoHrZL8g73hqCfDYB+ygNXFyMMkb/ivqeuFInIzabcXb5Q3
CErfOL4NWeWBpcqZNG/4nKqrvhyZVzG3M7vMGwRUhiVrVQaJIeLzK0alN9Su
6UupQK41l69xqPEGsXDevhJkelj1jS3N3sDfFWiQj/yp5BPzUq83hKyqkolA
frx7l8j1FT6wwjDlszzyOW0qfzK3D3wJQFdZ5FDTZyv81/jA6yMS00LIUiHm
o3KCPrCRRivmRE67Q3l2d6cPWFNmp3uU0Xm5q8qtzNIHrOprRxOQ18uZXqu/
7AOWA1cfVu9F9xelCF3+Ih9IcKl2uL8X/54p+uR4ywcarzb0XEG2M1qQGC/1
ge4YRdIx5Lygu/nCr3xgg21onwGybMma86HTPvBXKNy9UQndh8s11J788YHr
ox0XypFfV/t0rFj0Ae28v9eLkEPfPduYw+MLYX8HDiYil/4KSa8T94WV06Uh
Wsig3JIidNgXsmM2yl1XRPuP5l9ZLzNfOGrbc+Is8mddmaa71r5AVMhVxCIn
2cRy6br6gotecowd8huaQmIIBX1/R8LVFcgOj9OiX+T7Andi7HvrPeh+pm0e
FjzpCwqaAd2Nu9H+L67X4jznCwI3OepLkM04NHabzvuC+TJlShayfJ3kyG4u
P6iNUhXzRP5hOOs7LuwHbpUb0n/Lo3xt8l3JOn5gX/PMRxi5XfXsM099PzCd
WW49v2uQ0BVMFrU29oPoH/r/+pEle8J7lG394Kn5z4hC5AE3PbsZfz9YKyQp
KofsFDRiykz3AxmtKEeZnaj+TNh3/LP84Kez9lVO5H0KHbyOuX5gdZma+0lu
kBCcqG7WuOYHkhv2Zecjt9PPHvpX4QfzYc1F/MjmCRrasQN+oFWUEvx5BzoP
cpLljyn4g2rPcU/d7ei+QXFT61f2hwfOPJIbkNeZqsM+DX9I1XvmzpZG+xvH
N+tRXX9YGNG1i0Km+utH2Tj6w449d/7dkhokrqmvfCV9zB/k5l6Njm9Dv7fX
972PTfGHtjHt6TLk8JHSvq40fxjQ0PCKQta67D2RmuMPN8pOkTiR27nqhWZK
/IHdtFKSXwLdNzsT/F52+0OhvgasFEd533MibR3wB3lSwGSt2CDBStkbFfHF
HzTu/xqPQs7T/pS2e9wfOq7W1Y+LovVZpFOexRkAA6S53BYRND9UjpW+ewJg
8vZOaT9hdJ/aEHuV63gAmGdUFUxtHCQ0WdGVBifR510XdmUjPzwd1XbiTABo
uR+sUUe+zB2xnDc3AN5/vzHL2IDq+z+KJ/+9AIhbIBxH1w0SSj8CJIW6A2Dz
18P2V9eg/eeG/37H/gAgaxptUUEW9/Gzyv0cgM7PbRX1fIMEH9s7QXQsAIwL
zoV/4kX3wQ63TxIrAoEp6JXAvxrt/89tr8rtDoT/BCtEdnMNEpvibCoD9wbC
h8v8H2+tROeHlnXbbfVAmDnydP8O5IgKi+UKBwPBLnvXaxHOQcLmrrHnXvtA
4BI+/HxqGdqvc3QkNeMD4eO+RcsjC2yCEb77qklHIGTf+Wg2PMkm+FbNRCj3
BMIyueBmbeSC/CrLLQOBkLtK73TGBJt49cp42fBwIKz6datX+RebEN0e6J44
j5533r7W6yebeNF9XbxSKggerh609/vGJuzCQ2cLZIOAu/Emz+UhNjHCpdaS
vDsIqrlvPmj/yiYEVF7G2KoHwYumVW81vrAJv7TPvb+MguDYZGjaDzbqj67E
xR3kIPga2v6P3Y360/2NvJYRBBVC23VmutiEavg9o5moIHg1tF54FbJr/oG/
L44HweOhbb5SnWziwZyzo2tOEIRsySjXbkP9uZMjmFUbBFX+UDrZzCaubNqY
uZw/GOQDCEeZCjZx59qzzdYCwbDq8XaTF2Vs4rGyf06hcDBcWoja41TKJlos
n13Skw4G+s0j52MesIn50343kzSCIepFW3zGbdQ+V1X1au9g8FkT+GnwEpvw
zPLVORIQDMWct26p5bOJEOn19bdDg0GuozM56SKbOHbQt9kkIhiss8f1BC+g
/saua09LCwbBQXOJf+lo/HPe3zc8CYbnpv+4quPZhFASf7BXdTDwv+e6VRXH
JqQ2VY49qguGQvPII2UxbGK/Mv+0TUswuCbwXc2MQHmGPfkv+3MwiNWb3ucm
ofn5tkZAZG0ILO8SWFfuyibe0h9nB20MgU2J3OUmzmyia6WXcJVQCPRNv1Du
dWQT41KPxV2kQiB9btz9qw2ab3dPucv7QkDbMXTHJSNUP13lB6S8QuDBPYlv
WSpofmBnvLB/CMgu3lcZVEL1Upxfxx8SApHsCd7te9DzEccM5+khoJKnxJct
xyZqha2sOk6GgLTme0URcTax+shPn+SHIcBMv2FfsJJNKNe5F8dUhIAbY8dE
4HI24byr/QelKgQqe9KuOP43QNz7Vxnm3hACiV9Nt8hPDBA2eSciNHpC4M3x
01a/OwaIS31Sp0eWhcKX4YwB7rwBovHQ+XeDXKFwdIBrjJw5QPy6u3pDF28o
PJMd7G9KHSB0Yyey6zeFwozE9mfqMQPEsHhNQb5cKKh33qkTdRkglNydSs0t
Q8HxfrX5gNAAUf8p/eOjglC4u/mcqFJcPxGrsEs+oygUnGfDXy5Q+4l9kS+j
Q2+FQuS66BMPA/uJO+v/ismVhkLZCqmf7237iUzwcr/UGAq5WuLuUzv7Ce9L
ql9PjIVC953MhLOsPoLTqWfMRSsMRmJU4v5x9xHVRVRCUycMLpX0r7nzr5dg
TqxNF9IPA8Njb4p0x3qJ0RO6Su/Nw4DTlawp+76XaK+4QzH0CoO6SGJH88Ve
4tqmuN97T4YBx4kdmsdkewm9Vqnl3F1h4Ez3vCSl9JGgbbqyYNYXBmovlHoK
tn4krjuK/8n6FAZvlHMtudd+JFZ9Evol9TMMGuNlnpz/0UP4/OEa37osHJ4E
/Ol9ebWHkF0936u5ORyERQviOvh7iLu7hh5TIBya57MqVg12EQ1vr6kJ6oZD
qIBC/te3XUR/mFdp5aFwMPRxPfu8sotYW8q+t8w4HGhiZY/omV1EuNbH62ds
w+Hda9WuHwZdxF5TVubtQNS+sNXXwnsfiMehleGfM8NB1+hmdVJyJ+EW49Li
eD4cor4fj2midxJcqRzyrJxw6E3SOirq20nY3tT/VnUpHOrMmfoLep3E5Oc2
l+zicCgUubz63opOQt5xxOhwVTjsqp/epHq8g3jvl1ZcUx0O2qaXuli0DiKS
rsSl9jwc3F3nLxz37SCazzGeSzaEAxe500nTsIPwbVmxb/5dOFSuJDuz+TqI
Al3R7fc+h8OfB6v0TC62EwZWNQnbh8Lh/M4Dujmn24kxd0/2xeFw2P9CSG3F
0XZCO7b44omf4SBdPJCq4NNO9DxW2eA5Fw7tWaL3hhTbCQEF00UBXhLU/+vY
OvH2PfFU65fzqTUkGNzeMS784j3haXyuctk6Eqxv/DPqXv6eeODfTRsTIEF6
/mHPw5ffE2aFPqON4iQofVxVlkh+T6QIxXZH7iXB2pWs6Qzx90Rw4Vk+GVUS
8Glb9dRtRN9XuEG0qpNg98PWZUI87wkBPVbRDm30vllFssx0G3EpTJLcbkAC
668BPzpftxEPGxpWK7iQoGx3mb9jfBuRaflRu9uNBG+/UFMvMNsIRu94+DFP
Elgd/VI0G9ZGaE0KfejxI4HlI+6KtW5tRKNYUGEymQQUFdFP1w+0Eb1Ufq3B
ZBJUlMzxaK5oI6oXpcJST5IgW2k88fB8K3Hl5L6r6qdJMG5ufp4800r4Fnhw
p50lQVpWtPnG4VZi4vWj9v35JDDwLtdKbmkl2u2aVg1dRu0N/Pb2bGolygd7
92dcJcGVi6c/2L5oJaLnVl75doMEPrn/BRwrbyW4pBxCMh+SwCL9ftzvy63E
8N3gAqKMBJrXXEdP57YSr/fFv/9RQQKH7hOOGlmtRLrZLQ2dZyToFQnZ1Hqy
lRCJnF851ojG81zVe57eSii2Flwy6EPvs+Nhc1q3Eh/fNjkMDZBgtUTui1Gz
ViLp1a8Nxz+RgPO276OvRq1Ebx0kv/hGghPK+m94dFuJE+XsMO1JEpzvaNAV
UGkllB9x7+ydJsEbznfLYxVbif57il8i50jg/GBxala+lVC5edTh8TwJ9l0s
T90k00qwL0roKK8ig03Nn5hFoVbi1AXDf608ZJCJOFjZu6mVUMsKLwvnIwPh
zEdu3NBKpKbVypWsJ4PSwfKEer5WYl+8+wY5UTJEGl7Js1+Gxutb8FlcCT1f
soa/YpRFaHo15T9TJkNtx8A7mx8sYsjtl72zGhniJETXLnxjEVqO8CZHkwyC
rkEOwZ9ZxLAxu1RAnwz6XBXXnvewiHOG3GGPDMmQm95RX9LFIg4cUpSzMiZD
qvqMSFEni8g8cDT/jAUZdujt77rTxiJASSJp9REy+Oz5HiD9mkWM7DaEmy5k
2CyYstO+mUVk7wz/a+BOhrkbtIWMRhYxKlUbetyHDCfWyJtvrWcRFza723OE
k4GZzOTOesYifv27LDt7jAwxTZLBrQ9YxE6fOy/8kslwr7uFdvo+i/Bueezc
nUKGX5HNH83usYiugtb0qjQy8H0f9hm8wyJqD634k3CBDKV7zIV0i1nE3xL+
c9O5ZADF4/d23GARKkKiu33zyfA6Lmd+3XUWUfxDxePwVTIsaK0MnChkEWfO
+Dbz3yHDyfSijG+XWUTTb7JXfAkZPu2aejV+iUUs94xbmLxPBseOYJn5fBZB
V7mg1FlGBr33asu35bEI1+7mnLwa1J8jsjE5F1iEgtTuQLn3ZNBxCSpVP8si
/FM1OC92kKG+npEfmcEirs4cusTXRQZdk61lteksYnOTa9t4Lxm+ndigYneG
RfwXnL6/fIgMLP84/qJUFrGvM699x3cy2D2+N7d4ikWQiZuhOSNkOPUtvdgF
eWj9i6vRv8jgXfFAbdtJFvG2fGq17l/0Pq1tzxuTWQSXBEdR6Twab4zOXXVk
SOEjZBbJcHgumPtWEosoPbKdwsNJgb981M9Zx1lEHof9x3drKHBvsWFjSiKL
CDaqvO28jQKG53hlOuJYxOCefSIrpCkw4x5t74pst6n85E0ZCuitvlPxPZZF
6LAfBMzuooBqtVcfF/Jm+s0d6WoUqBmJvOMYzSJOHdlxXk2DAg8MQW8qikVw
6BRx9WlSIL5HtCYNeYT3ylc5HQq8mDi//3Ukmt8rFwrrjClgKh3m4BjBIlST
N28MNKPA5kZb4WXIt4IzE9ZZUiCZ4Rd5i8kistTTPVzsKJBX+XJxGXLg2+St
c+4UCIq9bVpHZxECf+gXd9IpcPtU8uQJKotI6Z9e3cqkgNr4C4oB8n915EhG
FAWiHA12rUL+nhbqWH+UAoX71sucpLCIamlfQddTFLgbzHEvn8wilFd/SeJM
o0CfxSYDH+TicY/ZW+kUIHpif+xGPlfp0jGXRYEYn4kDL0ioHixsz2UUUEAy
MCF/NpxF9Km+X76vkAKc6q68DchWIpbk/iIK+OUHumUjaw+ZWO66TQHdJ79v
aCBviNbjf1lGgWNrRcxPhrGIZzeUT/1+RYGLrI5LFqEs4sWfrB7SWwoE1j75
p4DcYPxbbuQdBfantv1cg9wyXtXU104Bp6dfk96GsIh+dX2uun4K2M3c17dG
/pRSbKs1iObvQjmXGvLQx9VFZZ8p8HUg11AYeTzunW7xMAXgFdtwMBjNX5ND
/OlJlOe3nnk6MueWpyyuGdSeqkCaCzJ3sJjE0TkK5Bc6pushr1/3qZo8T4G1
w47sjciSDkHz9lxUaN3vx6wIYhF6wzEMyS1UoIZcn1uHbLif3XBRlAo/DG/W
LASyCJPUg5s3baVCCGlT3w9kW8VVZaukqeBU0ba+AdmXmT45upsKayMOaxxF
Dnw1qeOrSIV1pLTEMORQUduMgb1UWGN2SMgNmV4rrNimTgXFsF4RAjmZuzCk
QocKT+0j/ZYjpzqtfKaoR4Vd8UKDUwEsIv2OH98tfSrwcbByvyJfsJC/nWdM
hS989a+akYsvlA3H21JBQPHh8izkV7JNXiYBVLhHBI6qImePau9/EkSFN9wt
sruQve4/WicTSoXHwzKZEsjz6pefLZJRHl+KpnmR9xjQBR9FU2Ei06nxiz/6
fPXoz61xVPD+OOzzEbmpxaM+NZ4KNrKGu9uQPe1MSb5JVPB6EKZci5zpI/1a
OJ0KWwc1+S4hu8vlXkk6SwV1dmd/FvLun/zMqUwqRJvKd5xGbqD+k36bQwXH
1LSdsch/Ettijxai8Vh893VHdr16dO+3cipwFh+/vRN5p+8st80TKpR1XqBJ
I8/JBQ/UPqXCzfZmJ3Hk9Af2qbm1VDgzmETdgFxXqzBk+ooKNcqdH/75oc+P
XauqfEOFmchHIbPIzoZbzu14R4Wej3oiE8iz71bCsnYqTOWMPh1Clh3ozSnt
o4JFmzz3e+Tpq1bh29hU+PQg2aIF+blvk37aJ5Q3j//dZmSnsUdTft+ocKB1
W2EtcurCSVORCSpIfNaj3UOeENFYlsBJg+GFfmo68u8jEnelVtEgvee/jFRk
jrxVji95aMA65/b8BPI60c773Pw0OPWUahuPrChKcT8jTIMsxw/GFOR9zk58
SqI04Dx4czIMGfJ0HreJ08DB2PlmMLKF6Lp1m6VpIOO/+5Avcrjo3Zo8BRqc
cZ3Y7YTMdM4MOqBEgxYza2N75KN5UYJsZRqklDjTbXBeokZhUho0WJNKmTZD
vi/6TfyWLg0KbPhO6iGPi26LrXCgQUCJ9ZASzs+Ze6fjERoIOtu82IP8X954
x18XGmglRhfvRl4rVr37gBcNGFkJZ+WQFcSO9NWH0OC4wraubchqLgdTfMNp
UMMnzCGBfCBfTpWbgvqzsUJRHNlM7HeqMZMGv5453N6CHCqWpdWWQIM569nl
Ash0l+hhynEaJD2JC96AHJvvlbnpBOrfo/N965DTxPaOOpymwXzNx441yCVi
7y4OnKcBT03aFm7kn2I8/0bv0OBsTsGHBV8WcexVe5LHPZTf+63V88hbGAUb
Oh+gvOhxN/8hG7LUd9aU04AdHJ/2B/lagq9jRi0NHu74mzaDrLln79eVdTRI
ezmUM43c9nEhPPIlDU6WzBZPIXOoZp3wekWDHiXn9xPIR77VVai200DFW9lh
DHny3BndW500mCGtTPyJfAKOvBPvpoGGRuqDUeTynMmhVf002KlMEh5B3mCy
bXPPNxp8Sb25YRi5+X4sNfYfDXRW1uR9QnZ3MeKYWkB5mJj9G0Se5dmc6sdB
h573N52xpb3uFlqspEP1m7M72MhHN/W2SfLTITSpqbcPWfDFDdfz6+nwbtzW
ArsklPKDV4AOVSOHG3qRextXL58RosOMsvKTj8jqkRpKjZJ0aNExruxGbpFZ
+UxzOx3G0/kB2/s9y/D+DjpoyE41diGflfd3z5Gnw6Hyib4PyGP92WeC1Oiw
a1nNtk7kIt3pn/xGdDDzPMXxHpkZrGT+xIQOSk0WeW3IRlmh9z3N6ZCt/0cD
e2xomFxmQwe9PS2RrchqJ/vmnNzo8FYiYT0LmfvRFkdOTzo4PHV6+g6556N9
5V1vOkg/eu2LHbe7LZojkA4fnS1ftCA3sRqWXafSYdPn0FNvkXP/rPAyZ9Ah
T8xVBztYUqf+dwQd9mWW/X6DvJ76NMk4jg52c0eDsJ0E7/NOpNChnl3n/hp5
1CVnk9ZlOuy49CaxGbk6qZP+9QoduNP+mWCn39vYlXaNDjxX9wliqy5Lyx28
ifL91ljShBx7LWFrcikdDBuKvjciW7ytOapYQYe5B/crsSVn5we7n9ChT/py
KnaDAeOafA0dui3XK2PzjwTJtTXTwaOwLKUB+dPGmyej3tDhfKGBB3ap1tCI
9Ds6iKSd1cB2SHMvYbTT4fSeA6MvkQuUbJXFBujw+7mwE/Ze5gFt/2k6PCGy
beuRz61xj/0yi9rbelcDe/pqfI37HzoUdx8Qxy5/W6/j+B+qp4KG4Tq8XqSM
9Y24GbC5Z30idt7j4OSG1QxQ5ysJxP7PNK3p4BoGHGM+scKuZbYaaW5gwHTn
ZmlsvRZ7c3lRBkSql71+gevFKyK9WJwBFzWyy7G5/uS2Sm9jwGrRD1ewm6T6
rcVkGECtDI/ANo3wdliryID672/kse2kSR6/dBmQ3Jtw9TlyxZOzV4P1GdBx
KOkstpB56edhQwYsyLMSsHsi5nwGTRlwQH6vN7bbu5jANnsGGEzy7MSu9b58
28yJAZJmoqLYkn9rR185M+BKduBa7C/SnGF1HgwYvVY2VYvsH3mSUhrEAGYl
uxYbXR5KFUMZsCvubin2zqK3M3fCGWB8+XYx9s9365hFNAZ8bNPJwCZvPx+d
HccAbq+tPthRrMLjzHMMcP6+ThD72ocu0+EsBqyb9ViL3dK/ZrPDBQbwL/+0
ElvyJ+O6ej4Dhh2CZ2pwXjwmjbPXGfC3KbsTW0B3mptWyYAJZetL2AeM5Fq/
VDHgdcOV89h+lq45NjUMeOi6LAO70q1JTqWeAXc6fiViu0fnGU29RfPjHxOI
fadML5U0yIAY7wca2J1VETaDnxnw6cRbZezFuhJRyyEGrPLeqIBt1SZ0V3GE
Ae4ZwlLY0d2mtIKfDEg/1iWGXcRO0F73iwGC9Goh7N9jo2/HpxkglT2/tmZp
fWzLdptjQJGP9Wps4wU713d/GBBBa1mJfYn3+VjJfyifCwoL1bi+ZLP4Q7mZ
8KE88Sd26J5XH/pWM+G53ffv2OfVFi+brmHCVGXIEPYPvQDF3RuYILOBNYCd
7qFtOSrChDvN395j9+V+PRu4hwnpcR7PsA+Kpyry72WCqfPhSuzrV/a2PFJh
wlY9xQrs8OI4ngUNJlzbtnAfm7Nc+OgZPSYkphZcww7QqBVTMWCC3v60K9gt
Vb5Puw4zwfFN7CXsC3WPZreZM0H4ZOAF7F2tpiGljkxwP5aautQ/m+nVjs5M
OPm3IQV7+kNu8YIrEz5/FU3Gru7/9lnfmwkz6ZsTsKU80+JHfJmwhfdxHPaJ
rypb0wOYoBsWHoNtNRrv1B3KBFrgtghs0amWLEkqE9SCJWjYQ39EWoMimKDk
6k3CjlhVbvBfIhPinmQHLuWxdkWiQQoTdsyS/bD5NllUp6cx4WFzmDd2geQP
FakcJpzguuCKHSinHh58iQm1mqVHsFUUj90uK2QCo6XLAbtRW1zSsAS1//KQ
9dJ49YJcMh4xwSXpnAW2k/HjCz2PmdDuMm2KPeZgxR9Sx4RbPH8NsTdRk+Yz
upgQXncYsL8oP5wM+4TyXXyuhV061TdsOsqEgNhYDezERzwDu2ZR/4Uoakt5
UFQ7eDgiQPTaOWXsbcoer7/xREC7Tpci9q/J1OcvN0ZAx6SDAnbtw8cVhWIR
8GBSQB77DPnL3fgdEWCylnMntsKkZq62ZgTYvHGSwX5DOpf0xywC1mWKSC3l
MfGDXOYZAWmlKyWweUgH3Uj0COCm2IlhzyvznFG7EgG6LZLCS+OdfVf973UE
VNtXbMJmP8keq52NAMEH6zZit0W7iCdti4SRfYLrses1Hd3jaZGg9NZiLXbZ
X5ur0c2R0G/Uxod9zLif/V4wCg4dnOXFts7z27rLNwpADJZ8mirBJ/Y0Cqz1
tJbcaNL9e+26aLhctXvJ/eVbPzm7RcPMKc0lz0r4vr5VEg3OHj5L3lK/5XzA
fDT4c8QtmfB75ylrFAOh+UlLbsl41Bt/KQa0NXOX7Fp13u7jZAwoa2cv+TWT
5226TixEi51f8j7VKF399FjYsPzqknl4vEWlhmOh+9btJff0mswsEnEguqxw
yf8D54a57w==
          "]]}, Annotation[#, "Charting`Private`Tag$55778#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1], 
          Thickness[Large]], 
         LineBox[CompressedData["
1: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
          "]]}, Annotation[#, "Charting`Private`Tag$55778#2"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {Automatic, Automatic}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0.25627089587846713`}, 
     BaseStyle -> {FontFamily -> "Arial"}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox["\"Concentrations\"", TraditionalForm], None}, {
        FormBox["\"Time\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> Directive[
       GrayLevel[0], Bold, Medium], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {All, All}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{Automatic, Automatic}, {
       Automatic, Automatic}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"L4\"", "\"D4\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Arial", 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Arial", 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Arial", 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Arial", 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          Directive[
           GrayLevel[0], Bold, Medium], FontFamily -> "Arial"}, Background -> 
         Automatic, StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontFamily", "\[Rule]", "\"Arial\""}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontFamily", "\[Rule]", "\"Arial\""}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                   BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False], ",", 
                 "Bold", ",", "Medium"}], "]"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Print",
 CellChangeTimes->{{3.842708230399178*^9, 3.8427082780593*^9}, 
   3.8427111089564266`*^9, 3.8427114743046613`*^9, 3.84271805668147*^9, {
   3.842718143452933*^9, 3.8427181853721924`*^9}, 3.842720008112118*^9, {
   3.8427201171508074`*^9, 3.842720129624831*^9}},
 CellLabel->
  "Durante la evaluaci\[OAcute]n de \
In[369]:=",ExpressionUUID->"635e11d4-1b24-43ea-a8aa-3d8ca2f8a5e0"]
}, Open  ]]
}, Open  ]],

Cell[TextData[{
 StyleBox["SACNA also allows to export a simulation results to ChemKinLator \
simulator files with the function ", "Item",
  FontColor->GrayLevel[0]],
 Cell[BoxData[
 "ExportToChemKinLator"], "MCode",ExpressionUUID->
  "468001d6-09cf-4916-85df-9b61526d94de"],
 "."
}], "Text",
 CellChangeTimes->{{3.842708090631228*^9, 3.8427081374229755`*^9}, {
   3.8427113506698723`*^9, 3.8427113612934127`*^9}, {3.842711405228603*^9, 
   3.8427114641694775`*^9}, 
   3.8427115561177526`*^9},ExpressionUUID->"5416d73d-2b6d-4625-8c2e-\
a1f6ab03ad7c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"content", "=", 
   RowBox[{"ExportToChemKinLator", "[", 
    RowBox[{"reactions", ",", "rates", ",", " ", 
     RowBox[{"samplesList", "[", 
      RowBox[{"[", "sampleNumber", "]"}], "]"}], ",", 
     FractionBox["1", "1000000000000000"], ",", 
     FractionBox["1", "1000000000000000"], ",", "0", ",", "simulationTimeMax",
      ",", "1000"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.842711495809909*^9, 3.8427115446165595`*^9}},
 CellLabel->
  "In[127]:=",ExpressionUUID->"db045762-f2ec-4088-94df-ac4ab2ac6914"],

Cell[BoxData[
 TemplateBox[{
  "Export","chtype",
   "\"First argument \\!\\(\\*RowBox[{\\\"$Canceled\\\"}]\\) is not a valid \
file specification.\"",2,127,33,26655503798046685306,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8407294479557*^9, 3.8407349728558693`*^9, 
  3.842708041719866*^9, 3.842708310200575*^9, 3.842711553105604*^9},
 CellLabel->
  "Durante la evaluaci\[OAcute]n de \
In[127]:=",ExpressionUUID->"dd9b2d30-b74a-40ec-9123-15a1e0c8f507"]
}, Open  ]],

Cell["\<\
We could try to do the same with the second and third Routh-Hurwitz \
condition, but in this case it could take a lot of time.\
\>", "Text",
 CellChangeTimes->{{3.8427115926446533`*^9, 3.842711617454268*^9}, {
   3.8427182156080904`*^9, 3.8427182557123823`*^9}, 
   3.84271835501675*^9},ExpressionUUID->"0578a8b0-652d-4a16-89f1-\
44806199d510"],

Cell[TextData[{
 "The user would like to know which rate constant corresponds to some \
reactions. It can be done with the function ",
 Cell[BoxData[
 "GetReactionsAndRates"], "MCode",ExpressionUUID->
  "f333a558-5ed1-462c-ae5b-773be26da77c"],
 "."
}], "Text",
 CellChangeTimes->{{3.8427183109215865`*^9, 3.842718368841477*^9}, {
  3.842718407032591*^9, 
  3.8427184158279696`*^9}},ExpressionUUID->"7bfa7d2f-10db-4599-9490-\
8190cea03be3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"GetReactionsAndRates", "[", 
   RowBox[{"reactions", ",", "rates"}], "]"}], " ", "//", 
  "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.8427183723715334`*^9, 3.8427183923927455`*^9}},
 CellLabel->
  "In[371]:=",ExpressionUUID->"b1daf149-d5d4-4170-9fb4-030d14b26962"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"\<\"L1->L2\"\>", "k1"},
     {"\<\"L2->L1\"\>", "k2"},
     {"\<\"L1+L2->L3\"\>", "k3"},
     {"\<\"L3->L1+L2\"\>", "k4"},
     {"\<\"D2+L1->D4\"\>", "k5"},
     {"\<\"D4->D2+L1\"\>", "k6"},
     {"\<\"L3->2L1\"\>", "k7"},
     {"\<\"2L1->L3\"\>", "k8"},
     {"\<\"L4->D1+L1\"\>", "k9"},
     {"\<\"D1+L1->L4\"\>", "k10"},
     {"\<\"L4->D3\"\>", "k11"},
     {"\<\"D3->L4\"\>", "k12"},
     {"\<\"D1->D2\"\>", "k1"},
     {"\<\"D2->D1\"\>", "k2"},
     {"\<\"D1+D2->D3\"\>", "k3"},
     {"\<\"D3->D1+D2\"\>", "k4"},
     {"\<\"D1+L2->L4\"\>", "k5"},
     {"\<\"L4->D1+L2\"\>", "k6"},
     {"\<\"D3->2D1\"\>", "k7"},
     {"\<\"2D1->D3\"\>", "k8"},
     {"\<\"D4->D1+L1\"\>", "k9"},
     {"\<\"D1+L1->D4\"\>", "k10"},
     {"\<\"D4->L3\"\>", "k11"},
     {"\<\"L3->D4\"\>", "k12"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.842718388096994*^9, 3.842718395903763*^9}, 
   3.842720141588649*^9},
 CellLabel->
  "Out[371]//MatrixForm=",ExpressionUUID->"093c82a5-c078-480a-b6f6-\
aebbd32d2952"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1366, 685},
WindowMargins->{{-8, Automatic}, {Automatic, -8}},
Magnification:>1.7 Inherited,
FrontEndVersion->"12.0 para Microsoft Windows (64-bit) (April 8, 2019)",
StyleDefinitions->FrontEnd`FileName[{"Report"}, "StandardReport.nb", 
  CharacterEncoding -> "UTF-8"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 438, 6, 267, "Title",ExpressionUUID->"f14da9e3-cd3b-4f0b-a9f0-2cf4c418e796"],
Cell[1021, 30, 518, 11, 96, "Text",ExpressionUUID->"602b73d6-e6b7-4f08-864c-6a109a3d117e"],
Cell[1542, 43, 1389, 29, 314, "Input",ExpressionUUID->"7de15c4f-cdca-4f45-a8e1-cc488242b23f",
 InitializationCell->True],
Cell[2934, 74, 595, 10, 134, "Text",ExpressionUUID->"b017b4c6-5f91-434b-9965-0c6a9a34a1ec"],
Cell[3532, 86, 1424, 26, 135, "Input",ExpressionUUID->"4aff2120-9760-4b40-93b4-726cb68aaa90",
 InitializationCell->True],
Cell[4959, 114, 618, 15, 134, "Text",ExpressionUUID->"7e36ca04-46f8-4458-8f62-d4bab08a03a8"],
Cell[CellGroupData[{
Cell[5602, 133, 256, 5, 95, "Input",ExpressionUUID->"2d30350e-b7ae-47af-b723-c307350c9d0f"],
Cell[5861, 140, 880, 15, 156, "Output",ExpressionUUID->"26a11d3e-fdff-4293-9735-0372c7db5e8c"]
}, Open  ]],
Cell[6756, 158, 1078, 18, 248, "Text",ExpressionUUID->"185a94e5-ebf5-42dc-b449-2866cefbf384"],
Cell[CellGroupData[{
Cell[7859, 180, 1359, 21, 102, "Input",ExpressionUUID->"a3c6f401-14c6-4ff2-942f-f481510d0a40"],
Cell[9221, 203, 507, 8, 89, "Output",ExpressionUUID->"bc129e4d-3e38-42e6-a03e-074cf8064a38"]
}, Open  ]],
Cell[9743, 214, 300, 7, 96, "Text",ExpressionUUID->"46ae1494-6492-48c7-9c93-daef48011d4a"],
Cell[CellGroupData[{
Cell[10068, 225, 438, 9, 102, "Input",ExpressionUUID->"c74a82c3-c997-417f-a626-6c6c339d8135"],
Cell[CellGroupData[{
Cell[10531, 238, 232, 4, 37, "Print",ExpressionUUID->"79e89d25-4219-42c6-9f89-adf1c5c00682"],
Cell[10766, 244, 267, 5, 37, "Print",ExpressionUUID->"764bdc66-0ec0-46b8-8db9-0860457d7b4f"]
}, Open  ]],
Cell[11048, 252, 310, 5, 89, "Output",ExpressionUUID->"488fcb88-1edf-4673-a78f-5fd301a4da25"]
}, Open  ]],
Cell[11373, 260, 565, 10, 134, "Text",ExpressionUUID->"9027ee9e-8e30-48cb-9f7d-a99d8dfffa5b"],
Cell[CellGroupData[{
Cell[11963, 274, 1092, 26, 213, "Input",ExpressionUUID->"410f564c-3f2d-4485-8bbd-b70d94b614f0"],
Cell[13058, 302, 6568, 174, 879, "Output",ExpressionUUID->"403943e2-da74-4206-89e7-aa10a49d7086"]
}, Open  ]],
Cell[19641, 479, 847, 16, 210, "Text",ExpressionUUID->"9979bc9c-ff2e-45b9-b0ab-e64c2b90c771"],
Cell[CellGroupData[{
Cell[20513, 499, 1740, 40, 321, "Input",ExpressionUUID->"4f55b2f8-f8ac-442a-8467-2f344bd413af"],
Cell[22256, 541, 639, 17, 110, "Output",ExpressionUUID->"654cb216-53cb-428b-b70a-9eaf23128cfb"]
}, Open  ]],
Cell[22910, 561, 493, 12, 96, "Text",ExpressionUUID->"783a2c8e-d5ba-45de-9e16-1889345b6d79"],
Cell[CellGroupData[{
Cell[23428, 577, 1030, 24, 230, "Input",ExpressionUUID->"05a70f9b-cd41-46dd-931f-3e0ccf159a7f"],
Cell[CellGroupData[{
Cell[24483, 605, 447, 7, 37, "Print",ExpressionUUID->"d108a3e0-3a15-4f63-a685-6ead5b7b8f78"],
Cell[24933, 614, 45120, 801, 418, "Print",ExpressionUUID->"2c893a9a-ad2f-438e-a349-29213baa8f91"],
Cell[70056, 1417, 44549, 792, 418, "Print",ExpressionUUID->"03741ff3-508f-4706-b7cc-7bbde8c7d793"],
Cell[114608, 2211, 43786, 780, 411, "Print",ExpressionUUID->"5317b7d4-961d-4f85-95de-d9faa408058d"],
Cell[158397, 2993, 44718, 795, 411, "Print",ExpressionUUID->"635e11d4-1b24-43ea-a8aa-3d8ca2f8a5e0"]
}, Open  ]]
}, Open  ]],
Cell[203142, 3792, 551, 13, 96, "Text",ExpressionUUID->"5416d73d-2b6d-4625-8c2e-a1f6ab03ad7c"],
Cell[CellGroupData[{
Cell[203718, 3809, 556, 12, 145, "Input",ExpressionUUID->"db045762-f2ec-4088-94df-ac4ab2ac6914"],
Cell[204277, 3823, 482, 10, 39, "Message",ExpressionUUID->"dd9b2d30-b74a-40ec-9123-15a1e0c8f507"]
}, Open  ]],
Cell[204774, 3836, 354, 7, 96, "Text",ExpressionUUID->"0578a8b0-652d-4a16-89f1-44806199d510"],
Cell[205131, 3845, 439, 11, 96, "Text",ExpressionUUID->"7bfa7d2f-10db-4599-9490-8190cea03be3"],
Cell[CellGroupData[{
Cell[205595, 3860, 303, 7, 95, "Input",ExpressionUUID->"b1daf149-d5d4-4170-9fb4-030d14b26962"],
Cell[205901, 3869, 1427, 42, 728, "Output",ExpressionUUID->"093c82a5-c078-480a-b6f6-aebbd32d2952"]
}, Open  ]]
}, Open  ]]
}
]
*)

