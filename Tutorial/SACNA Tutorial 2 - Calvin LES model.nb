(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    258629,       4726]
NotebookOptionsPosition[    255173,       4663]
NotebookOutlinePosition[    255618,       4680]
CellTagsIndexPosition[    255575,       4677]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Using the SACNA package - Calvin LES model", "Title",
 CellChangeTimes->{{3.8427089804948845`*^9, 3.8427090295265875`*^9}, {
  3.8427124704454412`*^9, 3.8427124835003734`*^9}, {3.8427125201800275`*^9, 
  3.842712524604207*^9}, {3.842712584012227*^9, 
  3.842712587756327*^9}},ExpressionUUID->"f14da9e3-cd3b-4f0b-a9f0-\
2cf4c418e796"],

Cell["\<\
The purpose of this document is to give a short tutorial for the SACNA \
package. 
Let\[CloseCurlyQuote]s start by bringing the package functions to this \
notebook. \
\>", "Text",
 CellChangeTimes->{{3.8427090940384088`*^9, 3.842709143198292*^9}, {
  3.84270917461474*^9, 3.842709175014347*^9}, {3.842709234782617*^9, 
  3.8427092854783845`*^9}, {3.842709323126561*^9, 3.8427094019120207`*^9}, {
  3.8427097349980364`*^9, 
  3.8427097355261126`*^9}},ExpressionUUID->"602b73d6-e6b7-4f08-864c-\
6a109a3d117e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Quiet", "[", 
   RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{" ", 
  RowBox[{
   RowBox[{"Quiet", "[", 
    RowBox[{"Remove", "[", "\"\<Global`*\>\"", "]"}], "]"}], 
   ";"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SetDirectory", "[", 
    RowBox[{"NotebookDirectory", "[", "]"}], "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Quiet", "[", 
  RowBox[{"Get", "[", "\"\<../SACNA.wl\>\"", "]"}], "]"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.829920780934763*^9, 3.829920833287795*^9}, {
   3.8299208636854086`*^9, 3.829920876961373*^9}, {3.829922063595199*^9, 
   3.8299220699542017`*^9}, {3.8299228854502554`*^9, 3.8299228919647746`*^9}, 
   3.8299231995739794`*^9, {3.8299232541125665`*^9, 3.8299232669128857`*^9}, {
   3.829925391036563*^9, 3.829925396478142*^9}, {3.8299255175481253`*^9, 
   3.829925518116885*^9}, {3.82992555759075*^9, 3.829925560670066*^9}, {
   3.840724447360667*^9, 3.8407244479747877`*^9}, {3.8427065329074345`*^9, 
   3.842706566196204*^9}, 3.842709417793969*^9, {3.8427096240014725`*^9, 
   3.8427096706682377`*^9}, 3.8427097141447287`*^9, {3.842709938742461*^9, 
   3.8427099438321295`*^9}, 3.842716003322445*^9},
 CellLabel->
  "In[277]:=",ExpressionUUID->"7de15c4f-cdca-4f45-a8e1-cc488242b23f"],

Cell["\<\
Now let\[CloseCurlyQuote]s input the reactions and rates lists of this model. \
If we input the rates list as an empty list, SACNA will assign rates by \
default. Reactions must be in terms of D-species, L-species, Z-species \
(achiral species), and the empty specie N1.\
\>", "Text",
 CellChangeTimes->{{3.8427097456059995`*^9, 3.842709857877953*^9}, {
  3.8427112324453096`*^9, 
  3.842711321629273*^9}},ExpressionUUID->"b017b4c6-5f91-434b-9965-\
0c6a9a34a1ec"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Calvin", "-", 
    RowBox[{"LES", " ", "model"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"reactions", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
      "\"\<L1->D1\>\"", ",", "\"\<D1->L1\>\"", ",", "\"\<L1->L2\>\"", ",", 
       "\"\<L2->L1\>\"", ",", "\"\<D1->D2\>\"", ",", "\"\<D2->D1\>\"", ",", 
       "\"\<L1+L2->2L2\>\"", ",", "\"\<2L2->L1+L2\>\"", ",", 
       "\"\<D1+D2->2D2\>\"", ",", "\"\<2D2->D1+D2\>\"", ",", 
       "\"\<L1+L2->L2+D2\>\"", ",", "\"\<L2+D2->L1+L2\>\"", ",", 
       "\"\<D1+D2->D2+L2\>\"", ",", "\"\<D2+L2->D1+D2\>\""}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"rates", "=", 
     RowBox[{"{", "}"}]}], ";"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.8299802087543697`*^9, 3.829980210527068*^9}, {
   3.8299802452946463`*^9, 3.8299802475258884`*^9}, 3.8300323485873623`*^9, {
   3.8300323930454693`*^9, 3.8300323975875793`*^9}, {3.8300324350051165`*^9, 
   3.8300324418441353`*^9}, {3.8323369366694775`*^9, 
   3.8323370468387628`*^9}, {3.8323370881981716`*^9, 
   3.8323371093764877`*^9}, {3.832338190731743*^9, 3.8323382153086376`*^9}, {
   3.832338285147352*^9, 3.8323383224186974`*^9}, {3.832338491223477*^9, 
   3.832338515498742*^9}, {3.83233856647456*^9, 3.832338629236281*^9}, {
   3.8323541640908356`*^9, 3.8323541744500914`*^9}, {3.8427098616239605`*^9, 
   3.842709885111328*^9}, {3.842712544794824*^9, 3.842712551332883*^9}},
 CellLabel->
  "In[281]:=",ExpressionUUID->"4aff2120-9760-4b40-93b4-726cb68aaa90"],

Cell[TextData[{
 "Now we can run the semialgebraic analysis of the model by using the ",
 Cell[BoxData[
 "RunSemiAlgebraicAnalysis"], "MCode",ExpressionUUID->
  "44b0ebc9-ae61-49d8-8504-00883738b73a"],
 " function. The first parameter corresponds to the reactions\
\[CloseCurlyQuote] list, the second parameter corresponds to the rates\
\[CloseCurlyQuote] list, and the last parameter corresponds to time in \
seconds (the Collins\[CloseCurlyQuote] algorithm may take so much time to \
find a solution). The function will ask for the Routh-Hurwitz condition \
number. Considering the first and last numbers will be faster, because this \
conditions are shorter than the others.  For this particular example we will \
be choose the first condition."
}], "Text",
 CellChangeTimes->{{3.8427099676939907`*^9, 3.8427100059258976`*^9}, {
  3.8427101192537117`*^9, 3.8427102665183506`*^9}, {3.8427103005748997`*^9, 
  3.842710465061907*^9}},ExpressionUUID->"185a94e5-ebf5-42dc-b449-\
2866cefbf384"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"time", "=", "60"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"cadSolutions", "=", 
  RowBox[{"RunSemiAlgebraicAnalysis", "[", 
   RowBox[{"reactions", ",", "rates", ",", "time"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.829924896228572*^9, 3.829924948156794*^9}, 
   3.8299251270983305`*^9, {3.8299251806157093`*^9, 3.8299252075494227`*^9}, {
   3.829925634381386*^9, 3.829925641493581*^9}, 3.8299257355361433`*^9, 
   3.8299262231689196`*^9, {3.8299263467902403`*^9, 3.8299263509659896`*^9}, {
   3.829926596348615*^9, 3.8299266009083385`*^9}, {3.829926747692322*^9, 
   3.8299267633781567`*^9}, {3.8299274292024574`*^9, 3.829927434721895*^9}, {
   3.8299275674929686`*^9, 3.829927568186384*^9}, {3.8299276038419466`*^9, 
   3.829927607041765*^9}, {3.8299314273027153`*^9, 3.82993143282679*^9}, {
   3.829931467432212*^9, 3.8299314820846653`*^9}, {3.829931535315168*^9, 
   3.829931599571806*^9}, 3.829932117315387*^9, 3.8299321652901945`*^9, 
   3.829941723804149*^9, {3.829980164454916*^9, 3.8299801667501907`*^9}, {
   3.8300323678168736`*^9, 3.8300323745906825`*^9}, 3.830032468888297*^9, 
   3.840724473751862*^9, 3.842707793002324*^9, {3.84270987565723*^9, 
   3.842709889782691*^9}, {3.8427185257877574`*^9, 3.842718527321703*^9}},
 CellLabel->
  "In[283]:=",ExpressionUUID->"a3c6f401-14c6-4ff2-942f-f481510d0a40"],

Cell[BoxData[
 RowBox[{
  RowBox[{"D1", ">", "0"}], "&&", 
  RowBox[{"0", "<", "D2", "<", "D1"}], "&&", 
  RowBox[{"k1", ">", "0"}], "&&", 
  RowBox[{"k2", ">", "0"}], "&&", 
  RowBox[{"k3", ">", "0"}], "&&", 
  RowBox[{"k4", ">", 
   FractionBox[
    RowBox[{
     RowBox[{"2", " ", "k1"}], "+", "k2", "+", "k3"}], 
    RowBox[{"D1", "-", "D2"}]]}], "&&", 
  RowBox[{"0", "<", "k5", "<", 
   FractionBox[
    RowBox[{
     RowBox[{
      RowBox[{"-", "2"}], " ", "k1"}], "-", "k2", "-", "k3", "+", 
     RowBox[{"D1", " ", "k4"}], "-", 
     RowBox[{"D2", " ", "k4"}]}], 
    RowBox[{"2", " ", "D2"}]]}], "&&", 
  RowBox[{"0", "<", "k6", "<", 
   FractionBox[
    RowBox[{
     RowBox[{
      RowBox[{"-", "2"}], " ", "k1"}], "-", "k2", "-", "k3", "+", 
     RowBox[{"D1", " ", "k4"}], "-", 
     RowBox[{"D2", " ", "k4"}], "-", 
     RowBox[{"2", " ", "D2", " ", "k5"}]}], 
    RowBox[{"D1", "+", "D2"}]]}], "&&", 
  RowBox[{"k7", "\[Equal]", 
   FractionBox[
    RowBox[{
     RowBox[{"D1", " ", "k2"}], "-", 
     RowBox[{"D2", " ", "k3"}], "+", 
     RowBox[{"D1", " ", "D2", " ", "k4"}], "-", 
     RowBox[{
      SuperscriptBox["D2", "2"], " ", "k5"}], "+", 
     RowBox[{"D1", " ", "D2", " ", "k6"}]}], 
    SuperscriptBox["D2", "2"]]}]}]], "Output",
 CellChangeTimes->{
  3.8427077961327925`*^9, 3.842708026619934*^9, 3.8427082554088497`*^9, {
   3.842710271946938*^9, 3.842710322124141*^9}, 3.8427104715523586`*^9, 
   3.8427185315344143`*^9},
 CellLabel->
  "Out[284]=",ExpressionUUID->"1f381a1c-ddb8-49c9-b03c-faf535d0c3c6"]
}, Open  ]],

Cell[TextData[{
 "Since the algorithm found a solution, let\[CloseCurlyQuote]s find some \
particular solutions by using the ",
 Cell[BoxData[
 "FindInstance"], "MCode",ExpressionUUID->
  "5cb2cb71-0ef2-43a7-804c-1eb9cb5d36fb"],
 " command.  Note that the solution doesn\[CloseCurlyQuote]t contain an \
expression for the L-species. It\[CloseCurlyQuote]s because we are assuming \
the racemic condition."
}], "Text",
 CellChangeTimes->{{3.842710645653183*^9, 3.8427107090373435`*^9}, {
  3.8427108227193108`*^9, 3.842710841829531*^9}, {3.842710892917077*^9, 
  3.8427109526453695`*^9}, {3.8427161603224535`*^9, 
  3.842716160834354*^9}},ExpressionUUID->"9027ee9e-8e30-48cb-9f7d-\
a99d8dfffa5b"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"numberOfSamples", "=", "10"}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{"feel", " ", "free", " ", "to", " ", "change"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"samplesList", "=", 
   RowBox[{"FindInstance", "[", 
    RowBox[{"cadSolutions", ",", 
     RowBox[{"DeleteCases", "[", 
      RowBox[{
       RowBox[{"DeleteDuplicates", "@", 
        RowBox[{"Cases", "[", 
         RowBox[{"cadSolutions", ",", "_Symbol", ",", "Infinity"}], "]"}]}], 
       ",", " ", 
       RowBox[{"Alternatives", "@@", 
        RowBox[{"{", 
         RowBox[{
         "GreaterEqual", ",", "Greater", ",", "Less", ",", "LessEqual"}], 
         "}"}]}]}], "]"}], ",", "numberOfSamples"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"sampleNumber", "=", "8"}], ";"}], "   ", 
  RowBox[{"(*", 
   RowBox[{"feel", " ", "free", " ", "to", " ", "change"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"samplesList", "[", 
  RowBox[{"[", "sampleNumber", "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.840724507394494*^9, 3.84072455111475*^9}, {
   3.8407250398693333`*^9, 3.8407250403346524`*^9}, {3.8407250768225856`*^9, 
   3.840725207479194*^9}, {3.840725662333973*^9, 3.8407256625833783`*^9}, {
   3.840725704152712*^9, 3.8407257062224274`*^9}, 3.842708082251777*^9, {
   3.8427082119922514`*^9, 3.842708226144125*^9}, {3.8427082669463587`*^9, 
   3.842708276002417*^9}, {3.8427105181855545`*^9, 3.8427106209749403`*^9}, {
   3.8427107252626486`*^9, 3.8427108124470725`*^9}, {3.8427108741740217`*^9, 
   3.842710884001808*^9}, {3.842711087729061*^9, 3.8427110881659307`*^9}},
 CellLabel->
  "In[285]:=",ExpressionUUID->"4f55b2f8-f8ac-442a-8467-2f344bd413af"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"D1", "\[Rule]", "769"}], ",", 
   RowBox[{"D2", "\[Rule]", "62"}], ",", 
   RowBox[{"k1", "\[Rule]", "24"}], ",", 
   RowBox[{"k2", "\[Rule]", "74"}], ",", 
   RowBox[{"k3", "\[Rule]", "63"}], ",", 
   RowBox[{"k4", "\[Rule]", "11"}], ",", 
   RowBox[{"k5", "\[Rule]", "29"}], ",", 
   RowBox[{"k6", "\[Rule]", 
    FractionBox["5", "11"]}], ",", 
   RowBox[{"k7", "\[Rule]", 
    FractionBox["1341048", "10571"]}]}], "}"}]], "Output",
 CellChangeTimes->{3.84271088748347*^9, 3.84271853437394*^9},
 CellLabel->
  "Out[288]=",ExpressionUUID->"83ef53d4-8214-4eb3-99b8-a7aa4ae6f718"]
}, Open  ]],

Cell[TextData[{
 "Now we are ready to using the SACNA\[CloseCurlyQuote]s system simulator \
with the  ",
 Cell[BoxData[
 "ReactionSystemSimulator"], "MCode",ExpressionUUID->
  "82254784-73a1-403a-a01d-ca05aaac2eb3"],
 " function"
}], "Text",
 CellChangeTimes->{{3.842710988453456*^9, 
  3.842711072565322*^9}},ExpressionUUID->"783a2c8e-d5ba-45de-9e16-\
1889345b6d79"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"simulationTimeMin", "=", "0"}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"simulationTimeMax", "=", "0.2"}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{"feel", " ", "free", " ", "to", " ", "change"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"graficss", "=", 
   RowBox[{"ReactionSystemSimulator", "[", 
    RowBox[{"reactions", ",", "rates", ",", " ", 
     RowBox[{"samplesList", "[", 
      RowBox[{"[", "sampleNumber", "]"}], "]"}], ",", "0.00001", ",", "t", 
     ",", "simulationTimeMin", ",", "simulationTimeMax"}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{
  3.8427108316645966`*^9, {3.8427110916691713`*^9, 3.8427110950940933`*^9}, {
   3.842711472086096*^9, 3.842711472181134*^9}},
 CellLabel->
  "In[289]:=",ExpressionUUID->"05a70f9b-cd41-46dd-931f-3e0ccf159a7f"],

Cell[CellGroupData[{

Cell[BoxData["\<\"Species Concentrations Graphic\"\>"], "Print",
 CellChangeTimes->{{3.842708230399178*^9, 3.8427082780593*^9}, 
   3.8427111089564266`*^9, 3.8427114743046613`*^9, 3.8427185379408827`*^9},
 CellLabel->
  "Durante la evaluaci\[OAcute]n de \
In[289]:=",ExpressionUUID->"9a3202ea-3e0f-461c-987b-81efbd5c3ae4"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0], 
          Thickness[Large]], 
         LineBox[CompressedData["
1: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
Za/irl8Xw02NeYm262n4H7iFfHI=
          "]]}, Annotation[#, "Charting`Private`Tag$44939#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1], 
          Thickness[Large]], 
         LineBox[CompressedData["
1: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
Qh+pYwHYdJVpwVOcBiwaHjPeOf74UG/S0OoEDfj75LtG1fzRAVoaz16lQUzv
KSGRNT9U25+06xiFBtK+Uke8OvxQWPReyM5UGpztU6CSkvzwG5vpEucjGhy5
vJca4+mHnStHzX6P04jzbMSOE6Z+mPKJr+09Ax00VfY0cSj74e3B7zI92+kQ
3hXHfXibH+6uKl5Nu0KHZOcgbZaPvujlIpmgO06HR75njnWSfFHMLfhz741Q
eG+u9by6xQf5u/uubqOEgtejmkjbHB/k2Cn82ik8FD6krHt8K9QHV/tzmjgq
Q+ESi61e8lUfHD7YTtdZCQV726BAlo0++PA7g/xTnzCo4Yuc33jNG6k6mln8
UWHA+LrBYlTPG33S6cLW2WGgZCe4flXFG13PizEyd4VBrp9cLJuQN+qVKw2o
coXDSdAPvNLnhew33d2bYsOhX+PuSb5zXsj0rHGWIz8ceGIveq2e8MI/O5gv
mzWEg+b27GbRg1442xehsToaDknWvmfZ+L2wQ75U8NjOCLgbvVGLNErBlqBl
auDhCEhVc/yw4yUFqydh3dCpCPirRRH600rBrPCeTx7XI2D4aEb7qTwKen+b
q6ssioD3kr83K92hoKf2QVnmlgjQu7J/3tWRgq5pnukGLyNAhx0Ghq9S8Ir+
Jur37xGgPAmdCjoUPF6220xOMRIEGR37t22n4IrL1X8FrZFgqPApV6GPjEM7
n1QP9EeCfNSsbX8nGWve7HZefR8Jj5LN94c/IuMtlflxHaaHUGiz0OJZSsbF
jR6PZ08+hPPh6vu+hpOxt37Ik8fwIYg4XVPMDCZjkZPywWNWD0G5v9vxrg8Z
HQbWZQT6PgTywHJQiDsZPyRTfaXaH0JP45M6tUtkbNf/oqL3+iFY+N0WZbpA
xgxm/Z8eMw9B0jTWbPosGS3sBWyebogCl0ojBtaTZBw9kqZprREF7Yl35Ib2
kbHxE9M6mlEU9KvE9SZKkTEhwaa20iYKVHtDc70kyGiyft9e5oAoiD0v/qdA
iIwDz6vZMjqiIKu1W82HhYzlZOEnzwajwDV9x7A2IxnDD96/9/1jFJhOcbVZ
/iXh2VjVz6qbokHSo9m+dYGE+3UzM+2EouGoq46/4QcSsv9jMQ/fEw2nvK0i
9oyTsOva854JrWj4domXObaPhLkCB/w3mUZD9LTjmcPdJAzoCgc5u2iIOeh1
jq+dhKcOGJeQg6IhkuvSXFodCXe9r7PNiYuGxsk/785VkpApSlT8RV40kN0q
1TVKSPjoz2TYtmfRENJg8m9jNglTitS1Nd5Gw7kh6dNv0kj44GrO+htz0fBS
nI19MYmEZrxs9VF/oqEv5qSnQTwJlZ863mxii4F9Aid+MMeQcKvnC+mZrTHA
mbxvifkhCVdkDk5xyMTAyeaHQhfCSTg09jDhsHIMDETwSS7TSVgTvmxgphsD
YTfj2BdCSBitfpHD91IM3PyQNaNIJaH7cmNbgUMMGK4bYBoNIqFB/vYHA/di
QGHs5+eRQBIeNPc+skqNAceqPBtFIvNsnlmQSIyBW59O3P0ZQMLFVs1sncIY
iFBOJQkQ473u+ZdvNsaAs9Rx8RQiF+3hFIx/HgONNVS7SOL6giqd3KJjMXD4
iOLUVmJ+bz2fTcmLMWD7rch0H42EC5awXnx9LISzuQ31hpLQ2GNlJW1LLLyq
zjjJFknC1qDK7zt3xQKXzrU7H6OJ+5vkPJ91JBbmruncckkgYUyp9LSUZiz0
rsj6lKaSkLFt5l2eSSxsOb3zViXRf6fB1Ncy9rGgM1cyGlxEwsG5S71F92Lh
07adjupVJFT7J9BxgBYLsAlOLTUR9fP0t5Qlx4LGWBWltIOofzet9lBpLDy5
oFUd0U/Ur6hVVvU4FmTGpeprx4j6dZnyFQZiYe/uaz6nPhP1X2lOr5uOBfaT
4acsV0n4+KZngvIvYv7pX84pG8i4z//ww6aNcVD3fN07dm4yxsQthqBwHORY
7GWNEybj+qJ8v8fScaA0VEVz3U1Gx0fWpJMqcSB/lOredZCMgwPit9vPxMFD
x2fvJ1TJqPpxxFnzShxUvtgds9GAjIV/oq93ucTBjx3KsWk2ZBTkOm+h6x0H
IqdTbu5/QEavHZwXeyLjQOHa3vunY8j4+XDneb2sOOjz+VzcU0VGYy0f3b7q
OCgXDVNrGCbj40ugbtAZB3JRysr2zBTc57yi8no4Dl7bXxsNUKBgjHflEeP5
OIjqk+wXcqfg+mhn2eG1OGD8ED+q3UJBhzxpqUtc8bDLqVv5uaAXvmmc2T66
PR6K1J1KdUleqPoyVeiKfDz4J+alDy14YcHUJZ5JtXhY1/Ru5PAlbxRYFmC7
ZhgPU9kCxhJ13ujF1s84Yx0Pna7f34Uy+uC8GG3V5nY83N34OIz3uA8ayWst
fQqMh/DWKRMTFx98rM60YB8fD6TjBpZpqT4oY9I887kgHkyNazRIL3xwPfnw
4NfeeLCd05QOlfbFgufi9b/5EuBL5sxjhSFfFJgYKb8rmQCqgQN/GBn90OtH
dMGaQgL40mxSDsj4odFWzqR1lxIgX3Xfibp7frj++gp5U1oClJbUG4zw+6MR
U/8pof2JcPDszkZ/uQAMcrP10oJEYODcenOTPnEemFprvKOXCFL7Z/MEXANw
Z5vU4WHXRFg5t/nPOOHLb74PJOKrE2HOzMfKeE8g0lj2MoieSAKZ99S76ixB
+NijWem0fhJUzeWJG4sH4dIHA4/7lklw+8fifW6lILzUQVp455sEu1O80j0c
g3Bv4KuRpK4kOCuc6qfaQ3iPlVK73SAZoie8o5+Tg3HFk39JzyoZXrpfHOx6
GIz75vIPUNyTYeuf7FekvGCMfPY6eyImGXZZu7Xx9gejBVUmKu1dMjBp16Uy
ilPx3wYHxfCDKXDiTJ5GSQkVBZuPGO1VToHSfekGoY+oKO+x7tbjkyngo5go
fLiPitYfokq+GaaA7a82n95vVHz+9JHk+dspsHv4+6KJXAjGBwjw8zamQMVi
xTftjBCUWvhiKNiWAsIT152GS0Kw6nzHQ5HnKdD8Jdn8eGMIvhC7w7frXQpM
3F+30/dVCG6oHOY9spYCCryKtwSZaBgpXG5wjDkVvILn3xhy0VCcHBx5nCMV
RJTYveyEaaiso8yrIZoKHlZnZ4UP0NB1InGLsUoqpNnJKaSY0JBBw/38JfVU
CDEr2pJiScOQgjMRV06nwvKbIbc7jjTM8fjHc90sFe4t3KytJdNwlOMqj+f9
VBh4v8XQPZOGWsd2bk5oTIWdpw1FWD7S8HXyql5KWypYUpxXKr/Q8Brzq9CM
56nARqp/i79o+OCFL3fhu1TQHIK+WWY6Vlh/4GpaSwUZ0Z5HdHE6qnY3n33M
nAZU2RbmbVJ07JWLobdzpAH5Sr1k0H46zq5qcvWKpoGMO1/w92OEfyLyOMdV
0kDp75MpDn06Fi17nZlSTwNJuesGHkZ0VDK/SPt4Og02DZpN1F2i44U97Jxf
zdLgXwNffY814Qva1OklqzSI2TayNcme8NaPhpDfjmmwq+9Qs7oz4blmR471
D9LgUKyDztY7hCd3nTq9wS8NuHuln2jcp2N2kFgIKy0Nov4lxGlR6PjYsJd9
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
ubqTAe++97uOFVNw1jp+/+NeBsg4Tmw/dpeCFa8M39d8ZADDfl+FIvHFIW9a
d+0nBpTP9SyYlUvBqfLf39UNk/MqVLbblU3B+8VObfXfGTDJsulvv07Bvdvr
Whi/GPAos+91ZSoF//ZrNjPHGUB9Gp/RQbyTHxHeyPrHAH1N9Vf7EomXdAef
sqWY8FY4uXMR8d0oe6eIM50Jp1ZcnjAjvrtxpJzHlWXCT70aiXuxFLSZUGHz
5jDh4b6q4ovEX0MZV+v5ikywfmyVmEp8lmra/VigwoTxlNBL88jYvMW6UriQ
CUsfcc/8/+/rPlwsKhNpMCFxAp7//+/vaHPnlIp1mKA+9Zh9HxmvK71474kB
E3q+vpg6Rtbv2tFa8HQpE+Z6Ck9QiO+iBjfmP1vBBF3LQc/LxHcro3JzGlYz
4YtG/bUvxHetetLZz9cxIfba9rFusl8q98z1xg1MsBQscztMfLf4aOO1F8CE
A42HDp8kvnsxuTrppSUTZmirH52RQ8HLWem0pi1MmB3k1b+V5F97/URM83Ym
pF3tvmFCfPfk9dHIV7uYoNazIKGN+M77kiD0PwcmWKwMc7EkvlNVXEptcSLz
V4dFU4nv3otuz1p+iAk1Q7/8fJ5S8EGQ5vVwVyZoNuyUTmyh4NU1mXrv3Em+
b2yM/dFDwS2DymVrTpP5rhkJnK8UVMhJMI87y4QtRywpCqSeO/bJPu29wIQz
PoNP7syg4l3ZCKcNvkyID8js3EDuhw9boi8pgAk3/q2ljKpREfyunB8MYkL7
KQOpf4upKGP08+/mUCaITBJOxptQ8b+e89HXI5lw/NzG8W5rKuakf1IeiWVC
wRrLYTtynz12nsizTWBC3vMdius8qGgytXt5Tgo5L1tVnUUhVJSsOVj7K50J
jQdq9QqyqNjg1bJlVzYTvhcuh/xaKqbr2b+6k8uEB4O0ZTpdVHR/+9R18jaZ
v1Kw5apsMK5ItPmyr4gJgdb2yS7kfTdmw75cXMKEcq+N7k8Dg5H/d4P0tHIm
LHpn9LNTRN6HZZVJh6qYIK+p0amrHYIHTxlrVNSS+Dp9UkajQlB/0f17siwm
FB38pjL6KwRHmvVNj/GYkJP282TFsVCsi87l1YiYMDyFMTuYGYpRoGav0MCE
0IFNZibTw9BhNPXd6ZfkPvwJ96/AMFx0b+4Z9n9MoLt9TTh8MQwHXeN+zm9j
wqRLw1/jW2FIfRY8R9TDhJWSRvuN/4Xh9pC/mRofmTDnZvrYz6XhOM/Ub7Hf
Jyas1bgdNt05HItveW7W/8EEmWfl9QYl4Xi2/p4ZR5IF/wlkZ3fsIT/PU1I9
NJVY8Ac939VQI5E63Gy8Yx4LZrY7GCjkR+LxbXN/+81ngXl4reSAIBJXSsSF
Naqx4FD8vlF12SgUeARnB+mxwKo8s/ldfBR+t/BsbDdhgbtSRp9zUDSazDS6
0WvKgto1t/6Wp0ejf+MXz8H1LHjQu/ZidVk0Th70kvltzoLsT0InzvtonHHJ
21pxCwv6LJMYY1tiUK3Av3arEwuUp+9xH5mIQZezZjG797Ng/+35/qcUYzF3
9Ziz00EWfAvvarm+OBb1WVd+uh9hwenYbpkVe2Jx5ZsgY+pJFsRNi921IS8W
rWTDCyr9WLAkQCs73iQOI15a+9ZfZkF01nehrG0citOkrXlXWDCFa12ye38c
7tSN6nlJYYFxdJKt8ZU4dN4Uq/4lknzf47b9kbo49PRKTNZJZ8Ho5aIXI2vi
sWTtHrclGSzoltvQrGMZjyPjCsbGWSywfWVSrGcfj75RKc/Nc0j+UnsbMjzj
kZqbNvNAIQt47hyqU248pjRnUxKqWTC/8kagvyQNz79/PC++hgX1UofEeXI0
3P7rv+LoOhYctto97fZ8GkounN0ewmKBT8aTsFXLaXjBLcj0kogFHfZW+Zed
aLjDJ6PxwhMW2OwNCfU4SsPFEZUnzj0j8WQ/CV/nQcOuu0MpJ1+wIJd3t8sl
iIY7R1xG9reywGuqU8/XPBoukboS5djGAtFdTvvjezScppym4dDOAr0uw2SX
ChrWmTba7ehigUxzeMMGPg2XUqHIvJ8F644tmbr1PQ1nzNE8pvObBZl272qZ
i+jYp7lxTGOM7O/Zm+xdenTS/zknqv1lQUVS04y6pXT0dUxgKkuwoUhgJLfE
lI7vsyXUZsxgw+GBiqOOu4gXStXKp8qwIdA8e7NgL/EK23TblFlseHI4W3Hu
ATrufX/ef2wOG+bHZKiYuNORs6z71WcVNkydVlj4wJd4zHzCY2ABGxYrth7+
FEDHy7sXSH1YyAbjZX5Ff4PouNLH3rhTgw0SloZBNyPoOCvirOitFhtW3Vae
XB5Dx/606COtOmw4nWstkUj8cbOWHf/SgA3yLjVzhcQnAQ3vdJ8bssHx5JOx
tFQ6Onb+qX2ylA3LEyfk1l6n46oRZQehERv4DcOrsjLpOFtq1SB3BRt0mPvl
nmbTcVBpZzDLmA3MgtZvDOIjvv6Z+fWr2ZA/SunwyaVjjmlE6eO1bHjocPfo
APHU1W15NpXr2LDuhGrSfOK306fEeh1mbBiOXNsvRzzmGPF1qvRGNvi/7i2/
TcaW+Sp9RuZs0D/gs+r//w9lJcecuw/ZwFsrtzmLjNW7jucFWrAhLP2o3Eey
nsxkXPBtKzbUP3p7/x7x3O+FFa4NNmww/HTrWhuJ573ZWxi1ZUNTnfaQK4m3
yUlSQ307G6T7DuYaEM+xLhlOWtmxwafvlq4C8Vxx8u53nrvYMNEhz/pL/Jvx
0K8uxZ4NegyORU0cHSMbb2TWOZD1XA7fkyee8/nCD+jbx4Z9b25errhCx6Oy
X/bPcibnH3e9YfN5Ou40VDJbc4ANYrac+So3Om7YsmH+oUNsYPjY+zQQ7y8+
7vYr1IUNrxblXJhLPKccGt1yz5UNl35Jx8ZrEF/nPnjU7MYGybUTBQbEc8OM
1ynj7mS8vNWbSTzX3j55UeckyX+b+NhNOg2fjOk5bD/NBuXl0wsr1tOwar7d
qosebDBNZfpwefGYb+IzN/MsG9Sln5fd14zHpL2ZXzlebOhScV7QahGHFG9O
4+AFNuzIfqElNIpFz4SBEgUfNizTzlbgSsTg/hJ52npfNpwNfrl/xXAU2jxb
d9bNnw1+bGmVQrUoXD3osiMmgA0nNmU6ysVGouaMiKVlV9mwJ83zxAHDSJTT
L5ZpC2JDQZrEqQvvI3DM8tXAlGA2xJobtCaXReDHo+Miw1A2eExsUjKIjsBX
FO1C+3A29HbfrfzhHoHs7K2RlyPZIDeR2V1jGYEltedP5EaT/XXP/bFFNwKj
fzF0R+LJ/Si8diSwPxx9lT9ILUhgQ1Spgk3e03B0Xy3Xi0lsCNi72WR3aTia
ex3MTUgl903v5EYl/3D89uGX+sqbbKC/axi7NTscO6dqTDjlknrK2nXZcjQM
n2nbtFNukXpUWl1q2R6Gd1xSMhoL2LB58+/sI/fC8EDLShWvB2yomsxJb7ML
Qy7/tHwJmw2y/4yP3MkLxdm7lH4/4LLhbuu877/ooejcyugs57Phn8KCwZjA
UPw8qFj6WMyGq4/Kgy7sD0UleYYd/yUb8r7FaBsqhaL7AYXY9m42pC7we5CQ
EoIlvXXenb1s2Koum5waHoK/PU8e6HnPhtx4BuWlbwjGUeoM+wfY0JmR1tW7
PwQr8k+Ivo+wYaA9J/Y06RemDtdMk5XkwKe5DdP964Jxp//xL3JTOTD86+3T
yAfBmD5F/j95aQ4sWzr7ATc/GJcpHc+fJ8OBhnvF/+rjg3Gv2RxLbQUOBBwz
dXpwNBhvcB4v0VPiAPNj5m0lp2Ds3+6usHgeByqq8nNzdwTjVZfH3UaqHFCR
j523xjQY80OPUc20OUAxnH1j5dxgHJo1+9RGXQ5c6Cv93jg9GE1Tq3eBPgfE
MmsWXJuk4rNCOQ3rJRzoy2ij0T9T8UdDVf3uVRz4kTOzZuMTKlrPnzV+0oID
CjbTeBviSP9WzF6SasUBb5PzZkFhVPxr4XeAZ8OBIN7pLf1XqVh+tuex5nYO
zIyQt1h1jopa3Gr/Nw4c0KKpjqftoeJV53OF0x05oCs+d2ruDiq2ftFpXevM
gcLD14cekP6QPp++LukQB7LvxouOmlFx4uzxn9uOc2BOGVsnSpuKzlIL9S+f
5ECY0uEHK9SJH9Nf7Cs4zYF77s6Cvyqkn+RueCR1jgNn59zNmj6bigLnkT7j
8xzgv91+wXomFbWH7ii5enOgrPXi70LiuTfzFXzqfDmwxLduFvcXBdeUCG8N
+nPg/LzCvLPDFEywDGyef4UDSV+/lrp/JP3zuf5VlygceKa+tMuslYJ5Ujfc
bgVzoIX9SmrBSwpOpjskvQzlwOZQSp7NEwo+4jJGjKI4MPrxgEZCPQXl9/to
HYrhwOSFeRnFxG+eQ4b2MXEcqM9Jf6ZG/CYK7aRW0zgge43J7bhPQZ0F1x58
SODAbdUTBT8KKBhUsq1LKZkDKVpnGUduUbDNUkLe8hoHrpooXNC6SUGTN4/g
QhoHDBZO7thA/JF4zsPr5nWy/07TGaXEJ5+ltG42ZHJgr5VDSFAKBW2vtzwf
zyb1GOX45B7xWv7yuEnDHA5cEh0xMCNe+8fdvNw5j9Rzu+QCQ+K1A/t/HY7I
58CLrVtcg4jXKofux1fc4cAxpSvTNhJPKYS51fcUcuDGPv2jx4m3zi6Y/0X+
Hgfm+v7QnSQ+E5U0qEExByL1Kk/KkM91rUJ3nC3lAONs6EMaGVPfmF7NfMiB
wbae6Qlkvbfnhu6Jy0l9HpsuoUR8ZjI1/+2vR6TeytJeaRKfJV3fL6tfTfK9
wuByPfHZ0PI5G/bWcKDzxZ7KEeKzrTzemZA6Dvydk7JVQPafvz8g4wGD5Pv5
cVnrLApKDK940sHiwEFmxsLLxL+Hwt7/mcXlwFuJ3cpeJN9VCzINN/A54KsZ
YL+2hOyvdPf+00IO+AQOrGl/RMFzVtLRaWIOeCxxp/syiN/e1Fbzn3JApl9W
TpX4Xc/rQv/3Bg7kDz8TdTZRsMOrSHOikQPhr3cVz+4gnj3f6yzdxAEnwyNi
r0EK7rygljjnFQemT2x00flNQWnvfeL5LRxou4HpBVJUZHjTpmi3kvvec71t
ziwq+l0Umi1t48CRSdNmd2Uq6WckvNe0c0DTx+oLX4OK/T5mRZs6OFAdo9Lr
vJTc30vePTZdHLizeK7TdlMq7ve9p7q7hwP/Ei/3vrKhooJf3579fRyQq63i
mRGfPfFTj3X7wIHLac9PPD9NxRB/R65HPwfYZef/jgdRccNl+rjPIAcm/uZe
sUkj74/LotVBnznQmP11x95yKt4PmOIZOcSBLK0C4a9m4rMr6/MTvpJ8BD+f
vX6MiupXL7Zf/8aBDbm5S48bBGPL1ftKt36Q+1kmNJ9+OBhpge933P9Jvn/Z
fW1nVjDaBC0Kf/Sb3I8rFV8S+oNxMsipnjFG6iOhp6kHQ7CSkjAq/MsB1jfl
HZvzQ9CLKjZ6OcmBow9ne7yaFYqLgyVPtElwgRa52G/r+VDsCt5wo1eSC9Qu
eZsMXiimh/i0fJ7KhRMSgdNsiNd2hxbP/inNhQ97FY5c2BSGM8I+2PybwYWA
lgtb7M+GITtMgzJDlgt6S0uyvDPCcFVE4rDqHC5EoHv+khHiuYgnBrpzubDm
ip6Z+8JwvBUp5WqkyAXpKM/CMatwVIq+9AJUuODVzmg9lBqOP2P3P3TX4EJr
3/e6k6si8HGi1sWSFVww0ruwr80+Er2TDtyrMubCWxrD9NbFSFySnNzLWs2F
7uOiwN8pkcR30/Y2r+OC25HIkF0tkXg1bWDNb+DCuXWXp3Q5RCFmP/y5eTcX
dgTvW/V9QzQmDVj/wj1caLg0McxyjMbetW2/YC8XRi5/TVt3IRojnkv+2eTM
hYovSjG6t6Px2T+HcTNXLlitTKpXnxmDzm4//xmf58JOW4tjIZwYLCqJkTD2
5oL+DNmA460xOD62aMpKHxL/i5OhkkMxeCN5i+Ryfy4cVi3+d3Z+LPbx0qcu
oXIhqKKap30mFi8YbJipncCFaRk6F6umxCHnYuNMrSQubFazL8lSjEMl1jEZ
zRTyvDOL3G314rDaOU52UToXqj63941uicPJ6HdyqjlcqIz9o1AbE4cxnykK
Cg+4EGm3T+2idDy2myopzi3jQp6yxNKZyvFoFF6oKF/BBc1L6T/O6cTjC/WX
SrOrSfz6qXfvQTzO26WtIsPiAnO2YsHPS/GY95C3UPIFF1YHXvBe3RaP02Tc
3Zc1ccF/k1vHrw/xeMpNqtjxFRdmRFxyj/0ej8sVLczvtXJhZfGAn9YsGtb4
MF33dnPhWkmMqvIGGqo3uNwN6uWC6eHup4dtaEjVmxwpfM+FPSkmVf72NLRp
2Rg6McAl/e0/mv5JGjatq7l95xsXlh/61HAmgYZrE/YPvfjBhRux1l/tMmiY
3v/bZPwnF0rPbM6Ylk9Dl+vrRLvGuaA2PeLk90oaDo5VDP6W4oGRsZnp8zYa
2jnsXa0jzYNlNyOnHOyl4YN736/YzeCBy8WWovpPNPQ9tEoubxYPmueUjkwl
/bIko3TFdmUeuP1+czxLlY7H5+3yv6TCA5sP/9zfaNFRdG6IdXMBD2Q+lNh/
XkxHmobRnh/qPEiJ77uUbELHEb9nGYs0ebB98JuTwSbitxcevbbaPCi8OXAl
wZKOqsFFPtn6PFDqlzrfTfwX+GZrvXAxDygLIlJE++jYZTww7dsSHtR9yc4L
PUjHOz0GaTYreLCQ5hB18QTxltXtx8PreGAYoN24mHjvWpaVpOp6HvQWz/6U
Tbz3+0fvNquNPIixlfjUFULHg3ahyefMefA2IjrpK/Ef47Z2ezrywOvKncCn
xH9ak2xdrgUPpHvOLTxPo2OY49GzX6x4UFJpXtieSMdt03MmN2/lAZ1l5DDt
/945Als8t/PAQeNmbl0GHeWrO+ipdjwwqFxjuIp476J8UCtrFw9WN71NdyN+
ajmlrvXJngfeJ9z0thFfmbHrTivvJecz5bF3H/Fe1oJDZeDIAwvrj/7LiM8k
vMfHTjvzQH2NpLsa8duxJxmWKQd4YNf/59T///+lNq0+5fohHhycpqP7f+/1
2He9v+FCzrfxTmUuGecpS63Ld+XBne8LzKeQsdsbvai7bjxwZZww/0y8p51t
+6bEnQejymKL///+sMfVY0nFCR4kvol1W5lD5uvSrjw+RdazVso/Rfbj1v/g
GeMMD67SrfQHiHe17zer8zx5cCXef2raNTLf6+c58TkedH9a/X53Apm/egHr
+Xke/LBWff85msz/tWHuK29Sb6qUhrXkPLRrXdze+PAg4PN29Y/+ZH5QcHmH
Lw8iRh33Fpwl8y3yp/b586C46k3ZvyNkvrRw30AAyU/zo/FdpF60nwzcGbrK
g/5wD4W69WR+/Kzf34N44H5/zegcUp959iu2/qHyoPHhzcQUCTJfeU/GZAjJ
/2HZ8w0tNNR+4/NJKpwHzybyGpRyaNiTlbZxZiSpbwPJzDlONMxzrYmfHc2D
h2X6M+f8iEc33XcdirE8iB+PdejwjEft/n8rFsSTeM7ELQ+vjMOee9rBi+jk
/L9Z9rQ8jcU8L+smnURSf4Xfsi0ex6Db6lM6hsk80Gyfp++fF43av2J8ll/j
QX3TlKr1D6Owp6aYvzqNB76rTiQ+H4vEvKAX88yu86DTLPy69ZVIPGrx/aR5
Jg9EhpPmvjrEh9LzHltm82BX6agLpy8Cu8SmMltvknpo23m6pyICc+IPHtyZ
y4N3L/u9IuMj0NU+6L7DLR5YPx91kveIQE3l3Ann2zxgS3bc8N1O5rdyd7oU
kHrYdjIry4h833XmyKl7PFj8bkQ49iMcNXWXWZwr5gFf70H6/Tfh2PVxZ/LF
Uh5k2w33dDLC0dUrZW1QOQ92bM76kBRDxkEaAcm1PNAP3uYXpk/mW1g8Ta/n
QWngSys34sOuacfVbjDJ81qN01N/hqFrfBGjkEvin1oze0JIxllrpRhPeeC3
RmVt1rkwPFKzPa7/LQ/CLiUaqz4JxZUxl/UWdPDAbI7PxpWPQlHyQAFjaxcP
qEXWv6/lhGL+H8mRoj4erG9jPdruH4qDpjX7zn7hQWhV10pcGop1M/qHsod5
cNxY3798fijGtypHPR/hgQZTIvisNFnf/0LNip88qKEwPz7sCUHfqsUa3yZ5
oNblLH/0RgjaRjpWa0/hw1XtoZDh+BBc4BRm7yDFh56QTIv6wBCs+9kZWjGd
D+/Ueu0VXUJwiklav688H2ymp5okaxFfVkwrG9figy39b+zG8mB0CVu9fZku
Hw5aqh50vxOMK/Ye7Tukz4dXuxMnmdeDsel73TzGEj5kesz1lA8Oxvmrfa5Q
V/MhMMfRWnpPMA5K5ik9XMsHUzVZyXqbYKxtaizuXseH4Qw/81sbyPreS7ss
NvJhgWH0tr96wXjrYY/VNGs+VB3t/NT8l4o+wfIda7fwYeEGrWd/vlHRxt7c
78RWPpyZbnh7+wDpL79evyu04wP9lFH1hRYqLl9pPzvGkYw1PtvWl1GxpoT5
evYpPsyaSFone5GKuk9szdae4cO3pAUOgx7Ee+9fZhz05MPFSzfMht1Jf6jW
d7jwPB/sPr0rPU36z9kxM/o2X+ZDk8HmETVzKvrfTrQ+dYUPLvlt//RI/9rL
Ui2gBfLBSW0f22EVFat/LTvzNpgP4w0sZXUDKrodt//qE8OHe/qa48cViHep
bfaZcXx4FPtfYLIcFddlHStn0/hQ5OSR+n4GFWc1X/KdncwH5d/ZpcP/KOg7
NPl6zTU+jBR2eZ4nPuyeGWV2MI0PUZq7l28gPqzEjL8FmXzoKmvUftBJQc1D
Oi7Ps/lQM4257CDxYazffeaPm+T8fnoP2hMfupYwQjbn88FnbEafLo+CT8Vb
+k7e4QNzaSBVkvjB5P0La1ohH7S33EpZXk1BWbXeGW/v80ExPqfpUjGJZ53n
mSmlfLD68UwxuZCCXXtGnxo85ENWU88/yXwKbj8XZLSznA+R682+CIgHK6On
030e8eEtt82+i3hQ83bC14wqPux67SfanU7iYy3Yw37Mh/Kfp1RUr1Hw59u8
8o+1JB/TDYzNk0i8v5Yqz2bwgb1vnQmTePCJwiPfNSw+ZEt2U24SD65dbt56
gMOH5B5aXjfxYM5WoVkwjw/fS9N8oojfZI7vziwQ8MFPPnBeGvGdD/XN3wYR
HyKeyI7Lk3FnppvLjyek/pnVw3+ID7dVfWKqNvBBPmuloSP5vKLJR2tzIx+g
2mL3ErLeoqGJkJMv+RDweGrCFfK86JmRffHNfNgd4VSwi8TzQ1fepuI/PsTz
Dk7cJ/G64PWCttd88IxbXJ1B9iM6qD1zShsfpjVpt2mmUnC1370zBu18cFX8
eNQ2g4I3ktY8s+vgQ57pEq+FJH8zSuqNfLr4kLb6P5/bJL/eYht6Rg8f1OrX
nf1eRMF3fY1fWX3kvE8EaigRv9tK7N/z8QMf5MJqzs2voWDZwp5yuQE+JJZL
1SpyKai2zkN5zSc+xC6mHVFroGDknh++B76Qetp+HnaQevl2NrCVOsyHkvSW
EHYf8Wi09PqCEfI+qHsbePMb8bK8Yn7hdzJ/Y/TxqxJU/JSqMbtolA+dlgM/
PUj9lqkv87/3iw/NxTLv186lYkC+ac/9P3wwPxEu/VOVihZLrXeUjJP7v2gs
pUGPijPL7CtLJ8j+Ijqu9hlT8YWpi+bDf3z4+kRmvgdQMZ15JqZsigC2bn54
MGsnFV1t/H6USwngjP3kA9YRKho0hLo8miYA86cZlcbkfg85JIgqpwsgZviP
ypFoKla2Za2qnikAjXqHhld5VAw8ejfrsawAOlZQJCxZVLTqfyRdKyeAohOJ
lMgecv+8OOfr5gggpHTyR5VMMDaPPm+rnysAbrVWheH6YMy4+taKqSiAZYod
Sl7ewegm1V/CUhbAG43SCZNHwWgY82M+R0UAzMwyzY9SIfhVfkood4EA3ALc
TB6S9211mtwX3kIBlCpuGv3NCUHKIlUngboAZDs49yoNQ9Hmtj5bqCGALfY1
J09EheLsZauXirUE4Plk4ermllBsKYNrT3QEYJq6+FC3Uhhmm+3491RPADkr
pr06aBuG7izn0w0GAhiipzTU+Ybhsi3Hm58bCuBAbsfb9rww/NFwYdOLpQKQ
/9O0u6khDGv3BhW8NBKAWn9q5PivMNzmlnbllbEALs7nXz64LRwVBm69/2+1
AD5FTxcVeIfjG68Hu16vFUDzm0MVxzLC8VSgWKfNTADizJx40/5wjEgff9q5
WQBpKmWc3MAI5Dw/ovbJXgCaGz+ZH0iMxJh9nhGfHQSwOMbx1rOHkWjf7v/1
yz4BPDMOM2h6GYldA4m8r/sFEGGyZH22fBROTuV5/jwqAJNpyfau0VFotmFx
/RRvAVBoH9Pfn4pGhefgtdxHAMLp7jWXwqNx0NVJ66CvABxXn5DPzY3GrIiI
8IoAAby6NOrV2BqNEk19didDBTA7O6iv3CIGRadyO56lCMD+VcqgeFos5o5X
J/xJFUDn2aXrK9RiMYD2wkL/ugAGv56r3rk6FpdV/LtDyRbAnzb5svQjsUj/
d9hr1R0BxH1UZWVXxKJjqqpEepUAXFaclbC2j8MVhqvKeI/J979zFhYdi8MZ
dVvdR2oFkGVrcOX5pTis6fYXbWMJIMPspIHz9ThcZPQ6YUIkAOdrPevD3sXh
e26y1rE2ATwVS4nbDsQjw/FeM71dAC1HN36NPh2PqQOc8LoOAXSHZ+tI+cej
7ZxvA8q9ApgRcrBvX0o83j+wu0z0SQDztF7Exj6JR5+RWZbLJwSQ8OLskzwj
GhYNF0ys/SeA9grBeQ9TGnZ9sajeNEUIHdve+Mla0nDHoL+R3TQhjAcENTSR
/lOnt0/FU04IO7JMZ0dQaOjcTWm6OEcI7xTFFnOjaUjrVI2/MlcI/9HZnZeS
aDj2drdkrLIQBLGVOs+IB5te1X2+qy6Ecy+q+h4KaTij2angoYYQNG8EUuVe
0ND85bejj7WEcD7c5bVlKw3vNix+LdITgtNfY63N/cSnghT2RyMhJJk8NaVK
07GSt+Lq8AohVK063louR8fPnCcmv4yFkLlK6iZHiY7OTIn70iZCsPm4nHJB
m44rqj1T9cyFMNPH3lFhIx3dK6fbG6EQ+ouuLVC3+P//88iTXWshhJT15xdK
2tJR+mEr1cpGCGXbtr7e70DHjaUXN+ywFUL25o0/nzrT0bt49k+HbUKwK3BX
U3GhY8ddK49jO4VgIKoVm5yio1Jhp57HbiGoLdrrIEP8sO1OQJf3HiEcmtP2
oeICHR/lPdgX4igE1TaVy3HEi4M52+VjnIWQUVkyWEW8qHnzw5PEA0Jw9DKw
rSI+ictUw1wXITjovrtmRHzIuV41VugqhK32PPW8eOLLtD2PHriR530bqn5P
vLM89YtXtbsQKI/HGn8mk/2mRC1hnRDC6NVb15tTyX6TdN4LTwnh70NZpQDi
pxcJjJuNZ4Rwe53034+ZZP/0/QdeewohosODq3qDjhvifyh1nhNCTbJa+Bzi
sfOx9MYP54UwtvLrTw7x453oJTFD3iTfi245////s7RH8q1++ggh1sHfxZH4
USHC9d+ELznvfQnzjYj/bMPGH0+7LIQGtGsuJeOgkFQfuStCoN3e+PU1GVdQ
jVcoBwpBK82zKpuMB4OeDahRSD1+UFrwm6z3WMTxVA0Wgufeg0t7yfOiFB4P
q4QKYc9CK8Fu4kenQ6XeyuFkvc7inFUkXv07t0cVIoUwbdtQlB/x4+hwpr98
tBCs9mblyxAv88ySxuVihdC1p+1ME/FjcmhUkGy8EIqj1KxLST7dGoKmzKQL
YcmSQ7WXSf6NVS6FSSeSfA3Ztv8j5yNx1GP61GQh3MtdVTSFnGdj0dGYKdfI
+qkOUsu86Hjjh5Pcv1QhHFuvbzPXjY5nzXcm/E0XwlJG7dVFe0h9RVkpjmUI
ocmu2zrWnI4yTetTf2WR/O887blZn45vFhovGL0hBP7n8pqq6XQsPG6Q9S1H
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
985xbh8nGrvK/ku4fl0M3VDsqN8Zjf8DjC4gjg==
          "]]}, Annotation[#, "Charting`Private`Tag$44939#2"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {Automatic, Automatic}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 504.5598079529565}, 
     BaseStyle -> {FontFamily -> "Arial"}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox["\"Concentrations\"", TraditionalForm], None}, {
        FormBox["\"Time\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> Directive[
       GrayLevel[0], Bold, Medium], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {All, All}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{Automatic, Automatic}, {
       Automatic, Automatic}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"L1\"", "\"D1\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Arial", 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Arial", 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Arial", 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Arial", 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          Directive[
           GrayLevel[0], Bold, Medium], FontFamily -> "Arial"}, Background -> 
         Automatic, StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontFamily", "\[Rule]", "\"Arial\""}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontFamily", "\[Rule]", "\"Arial\""}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                   BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False], ",", 
                 "Bold", ",", "Medium"}], "]"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Print",
 CellChangeTimes->{{3.842708230399178*^9, 3.8427082780593*^9}, 
   3.8427111089564266`*^9, 3.8427114743046613`*^9, 3.8427185383721857`*^9},
 CellLabel->
  "Durante la evaluaci\[OAcute]n de \
In[289]:=",ExpressionUUID->"870f6dad-cee9-4d7e-af64-7e02d64a038c"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0], 
          Thickness[Large]], 
         LineBox[CompressedData["
1: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
/k8LH67LZ1t+qgC7S6+zevx0sfPurMPmKml+99J8BxtOYLVKDH/2Jul5HTur
d/+wEea8VVo6SlEJ5DIMnrdbTDDu0vvKGZpKuLfAP/aL1QKvcMf7XWWqhG/F
T+9/ZrPDs/1HZPkPVULzm2mRn1bO6OyyuH5fsBKyLouwZ95wR9PdSR3ukpUw
2LTryaaeN2qXHb1ErVQJhA6biQTaM6h4/BNWQiVsH79bUED0Q5HPKZT6epUw
TSaqylTqj+yxOPzVuBJuMA6YB+0JQBqpL3firSqBtnywv4+UX7ee3jWSca4E
xiOe+oUHAvBboObB596VgOzDnXakvDvL9H0iOKgScu+r/3s+44/PWjMzmS9W
gnW5xdvhJn9s3lzltY6thFK6BpZlM38szc5Z+JtaCVRxF2I1hPzxrvrxipxc
Uj3+rsGBX34YHpkvPVdXCV/YWG98TfdD2GcEnuOVYFy975D9+zM4wlZtG8JS
BReqmjy/JfiilJebxnXuKlLeWF445+OLKe1cIknCVRCaQ2PgrOOL9haJP2qU
qiAuJULYZdsHf6SERC9YVIHRCPx55e+DnAzH2k3Tq2DPjuMdNTdvvOqwmeOc
XwXKsnoKVtreuFjbdC2gvApoAnOP3RP0xnoDIaOY9iqwd86+Er7khVp3aBbv
TVbBmT/Giaf9vPDMnomDcmzVUCo9NlZ3yxPHzeL/IG81/CnNPcp8xhOVS/Rm
DEWrIVxdiqv9lCeSa3VVeqtUw8b3Kp1KDk9Mu5p/rNCqGkLnN+IkGj2wd8vb
/0BmNWjWmmm9/+iODD92Rr6z14Bqb58Jf6gbdgUuPK3kr4FyBjp3Pwc3dF8b
mXATr4Hffx6Wzui6Yfdq6vzbozXg+fzfS2k2N/RcEdt84FgDszduLgb2uGLf
VwvR/NIaOP/aNyuTxhUDPtZFGcvWAnlUyJO9bc7I4ZkaS6NaC+eWB78SCp1x
aCk8eUizFrQ+Rdnyxzoj55J2nppZLUwcn1FRdXHG4YW3rSJhtVAlH/FIlJ6U
X99TLZL11gKvn8PYposTPnL++rlrqBaafO8HHzR0wpD58dWQsVqYjH2nT6Hs
hKNzOdtfZmthfeZVhzmNE4bNyhFeU9TBBbEDl1XqHJHfkY0jhbYOCvzdzMPv
OuKTmX88RoQ6kBnk73O+7IgCMw/FB4XqICFN2GmPoSM+m3bQajheBzyX/LTu
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
fTjuKw==
          "]]}, Annotation[#, "Charting`Private`Tag$45004#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1], 
          Thickness[Large]], 
         LineBox[CompressedData["
1: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
WWYLnz+MLIPIth15F2dB9Jnx7qfOKIPF10GCx3eJeffL/jmSljKoKWesCZM6
ha9tvi01dpaBJTv5g4y7p9Dv89C63wDRNfTSA59OYe901p/lqTIgmXtVTBEv
jP7WYWRPvpbBXLPGe8slYeSYdjpo+70MJsxkT9toiWDAlATNe7Jy4H1ddSvt
gChyWjGcfEBRDsHRb+oJZ0Sxf/Iv2wWacthQ4JRLvSKKXJPdQh085aAVtVgl
OyOKAxbl4iEi5cDPMzunxSaGQRMPZOVly+Hr59uq3RZi+OaTpUqlZjlo5K0u
rH8Rw6noKldl/XIIp3i10s8vjmun994fMS0Hm6CkrANXxfFocvH0b9dy0Exx
xn3HJZBF5c+BGJ9yeBf5VKbIQQJPfb8gynKjHCquvRl3a5dAbZ3NYKW4cqh5
7tpDEimJZrvqhcPJ5fBN7zC93y9JdC1O73N4VA5pf3aT7D2kMMj428bW43KI
aNmNp1+Vwqh9yBRdUQ6dSb8bWa5JY3pNojJzfTkwCfpo21DLYJHNrEt5ezn0
fd+3erZZBuuOySae7SmHa1NP3tQEyGJXS1T926FyYHk2RHFN6zSOuX2asv9Y
DoNz0Wm2MnI4zyh6YOtLOehNBFwuUZXHn12hIlHL5ZCUn/c9/sYZ3Oc/YsS0
WQ5fSgYXTiwqIA03X3DZn3J4lvDLXDEdMNG5WZ+NrAK8OjMz/d4gprc5ODjv
rwAxnczrY8eUMJfuWFDV4Qp4epz7a2G2MhZ71MfuUFaAcH/43ivZqljVYZOj
Ql0B0nYdvHmggQ1MFLWx9BXw6T1HrkDnOWy/Wts1ylQB7w5JjYjo6mJXj8U4
K3sFKEmWuv+oMcBB9gNrTtwV0MW2UwNXjHEsoJKsir8CJCTifamHLXBqwJRu
51QFfLn0PTHN0BYXeMgFVcSJ9XVblUr4OOLajVLFWOkKkHqQdHH6nwtuDRvp
j8pVgOHFn19pQtzxnyCJAytUQNNj6pHdPx64L6wo0Em5Ag4/GjH+99wTj37Q
j61UrwARbVXarMNeSCu2m719rgLSSS/MMdB6Icvdghpl3QpwK3OdzqL0Qp5J
na6YixUwl8lap0TihcLSWx9HjCsgAO6sNY95onRsziqLeQVQjHUbBZV4osKM
FpmTdQXwD6S+4gj2RDNc04u5UgGbc90kXe0eaJeSZj/iVwH/7nzhv3bfA91W
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
phDAU8kniaHdE1VNX5z6kUGAJ+M0F92SPfH7ri33r0cEOBs19yjGxROzH5Ez
7+QRn+exB/So6InbM6oUZCUEeGwNRyZmPbDCs2uRqokAYXfLJm6d9kALKufP
tG0EMJaJexRN6YGHaw9+YHxJALZX8WqH59zRYVurm6OXALP63GOOD9zx5O2+
x+LjBMjPHS9w+umGEelDdvq7BGh/uhTzt88VjQwjl0tInkH4XlK/iseuyHsM
ffbvfQYGCWKc/bdcset2aVjTkWcQVUlBryrjige97+bysD6D9RSaPSuFLhij
rji1ffYZ+Cr8jS0hnlHNSDcdDdWegU3lmK+6vzMKNT9dLdcijn/vp63EJWfs
E2f4Z2dAHI/Xt3CLzhmPsmwwD9g9g6IiZ6TKcsKEjaLLeXeegWdT3x3LGke0
Kbf68if6GXCSMze7pjqiuAudq/G9Z9B2wyq75rojDk2GBx1JewZ0e1Y2fqk6
IvVryzT/4mcwnBUpyvPRAZNzaN6d63sGXc8eG0lROmCmzi39Dao6+JEVzSKQ
Yoc8U4pL5HR18IXreKVGqB1WeO+G0Zysg/N1SRDibocdD/xrpTnrIH1RjlpG
xQ5XPrjTB0rUwf4bgbdLvtsiOJpO/DGog393rUM29G3x800Jl/1JdaBO2Kga
Y7BBt+PrpPRpdXCtrx2k9tngz9yyDL6sOphdnzkS8d0aD3fy92kW1MHR9o2L
uz3WKEnBJhpTWwdqDWsyu0HWeDuV4uex0To4/v2C4YthKzwm0BPH/qEOakrT
6VlarTC98Q6v+EQdFB7KcJQpssKyCVITgzni/ZI9qWOJeXuU63dj0s86kJhS
KttksUIrAuFi4XYdLIWHagfss8JFdZ9vhL91IBp548riB0v857LKMravHnyD
ZqYvXLVEvsrZW4x09eC0ZoPsiRY4897kKe3JejDOHjW7YGSBOaT9w1Ss9cAj
RPpbkd4CGS8SeA/z1sMNcl827QfmOHpdQG+/YD1wPsgbfH7eHBMLHgaRidRD
wDOmD0/IzPHwr4i+Hel6+EW7491hY4ZdrDs/f8nVQ/Txbffnh8wwXMOTbUOx
HuCben5FyWVE7y+aa0r10OJSKZulfhl30y5dXVarB9qNzDc2H0yx7vnrzAWt
evD04v2VaWuKvkvQOaNTD3//HRFNmTZBceqa1Sn9eti+1H5ZRt8EV87wMXwy
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
+Crr6lX2+SjlF2/ixPB/ku9vdg==
          "]]}, Annotation[#, "Charting`Private`Tag$45004#2"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {Automatic, Automatic}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 5.2975892041068775`}, 
     BaseStyle -> {FontFamily -> "Arial"}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox["\"Concentrations\"", TraditionalForm], None}, {
        FormBox["\"Time\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> Directive[
       GrayLevel[0], Bold, Medium], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {All, All}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{Automatic, Automatic}, {
       Automatic, Automatic}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"L2\"", "\"D2\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Arial", 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Arial", 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Arial", 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Arial", 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          Directive[
           GrayLevel[0], Bold, Medium], FontFamily -> "Arial"}, Background -> 
         Automatic, StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontFamily", "\[Rule]", "\"Arial\""}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontFamily", "\[Rule]", "\"Arial\""}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                   BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False], ",", 
                 "Bold", ",", "Medium"}], "]"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Print",
 CellChangeTimes->{{3.842708230399178*^9, 3.8427082780593*^9}, 
   3.8427111089564266`*^9, 3.8427114743046613`*^9, 3.842718538602851*^9},
 CellLabel->
  "Durante la evaluaci\[OAcute]n de \
In[289]:=",ExpressionUUID->"0777d2fe-06be-4363-8de1-84cd45e5b03a"]
}, Open  ]]
}, Open  ]],

Cell[TextData[{
 StyleBox["SACNA also allows to export a simulation results to ChemKinLator \
simulator files with the function ", "Item",
  FontColor->GrayLevel[0]],
 Cell[BoxData[
 "ExportToChemKinLator"], "MCode",ExpressionUUID->
  "468001d6-09cf-4916-85df-9b61526d94de"],
 "."
}], "Text",
 CellChangeTimes->{{3.842708090631228*^9, 3.8427081374229755`*^9}, {
   3.8427113506698723`*^9, 3.8427113612934127`*^9}, {3.842711405228603*^9, 
   3.8427114641694775`*^9}, 
   3.8427115561177526`*^9},ExpressionUUID->"5416d73d-2b6d-4625-8c2e-\
a1f6ab03ad7c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"content", "=", 
   RowBox[{"ExportToChemKinLator", "[", 
    RowBox[{"reactions", ",", "rates", ",", " ", 
     RowBox[{"samplesList", "[", 
      RowBox[{"[", "sampleNumber", "]"}], "]"}], ",", 
     FractionBox["1", "1000000000000000"], ",", 
     FractionBox["1", "1000000000000000"], ",", "0", ",", "simulationTimeMax",
      ",", "1000"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.842711495809909*^9, 3.8427115446165595`*^9}},
 CellLabel->
  "In[127]:=",ExpressionUUID->"db045762-f2ec-4088-94df-ac4ab2ac6914"],

Cell[BoxData[
 TemplateBox[{
  "Export","chtype",
   "\"First argument \\!\\(\\*RowBox[{\\\"$Canceled\\\"}]\\) is not a valid \
file specification.\"",2,127,33,26655503798046685306,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8407294479557*^9, 3.8407349728558693`*^9, 
  3.842708041719866*^9, 3.842708310200575*^9, 3.842711553105604*^9},
 CellLabel->
  "Durante la evaluaci\[OAcute]n de \
In[127]:=",ExpressionUUID->"dd9b2d30-b74a-40ec-9123-15a1e0c8f507"]
}, Open  ]],

Cell["\<\
We can do the same analysis with the second Routh-Hurwitz condition.\
\>", "Text",
 CellChangeTimes->{{3.8427115926446533`*^9, 
  3.842711617454268*^9}},ExpressionUUID->"0578a8b0-652d-4a16-89f1-\
44806199d510"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"cadSolutions", "=", 
  RowBox[{"RunSemiAlgebraicAnalysis", "[", 
   RowBox[{"reactions", ",", "rates", ",", "time"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"numberOfSamples", "=", "10"}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{"feel", " ", "free", " ", "to", " ", "change"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"samplesList", "=", 
   RowBox[{"FindInstance", "[", 
    RowBox[{"cadSolutions", ",", 
     RowBox[{"DeleteCases", "[", 
      RowBox[{
       RowBox[{"DeleteDuplicates", "@", 
        RowBox[{"Cases", "[", 
         RowBox[{"cadSolutions", ",", "_Symbol", ",", "Infinity"}], "]"}]}], 
       ",", " ", 
       RowBox[{"Alternatives", "@@", 
        RowBox[{"{", 
         RowBox[{
         "GreaterEqual", ",", "Greater", ",", "Less", ",", "LessEqual"}], 
         "}"}]}]}], "]"}], ",", "numberOfSamples"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"sampleNumber", "=", "8"}], ";"}], "   ", 
  RowBox[{"(*", 
   RowBox[{"feel", " ", "free", " ", "to", " ", "change"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"samplesList", "[", 
  RowBox[{"[", "sampleNumber", "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"simulationTimeMin", "=", "0"}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"simulationTimeMax", "=", "0.2"}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{"feel", " ", "free", " ", "to", " ", "change"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"graficss", "=", 
   RowBox[{"ReactionSystemSimulator", "[", 
    RowBox[{"reactions", ",", "rates", ",", " ", 
     RowBox[{"samplesList", "[", 
      RowBox[{"[", "sampleNumber", "]"}], "]"}], ",", "0.00001", ",", "t", 
     ",", "simulationTimeMin", ",", "simulationTimeMax"}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.8427116599584613`*^9, 3.842711674486776*^9}},
 CellLabel->
  "In[292]:=",ExpressionUUID->"1e398066-e8da-45cb-898b-f2b1ee2115c1"],

Cell[BoxData[
 RowBox[{
  RowBox[{"D1", ">", "0"}], "&&", 
  RowBox[{"D2", ">", "0"}], "&&", 
  RowBox[{"k1", ">", "0"}], "&&", 
  RowBox[{"k2", ">", "0"}], "&&", 
  RowBox[{"k3", ">", "0"}], "&&", 
  RowBox[{"k4", ">", 
   FractionBox["k3", "D1"]}], "&&", 
  RowBox[{"0", "<", "k5", "<", 
   FractionBox[
    RowBox[{
     RowBox[{"-", "k3"}], "+", 
     RowBox[{"D1", " ", "k4"}]}], 
    RowBox[{"2", " ", "D2"}]]}], "&&", 
  RowBox[{"0", "<", "k6", "<", 
   FractionBox[
    RowBox[{
     RowBox[{
      RowBox[{"-", "k1"}], " ", "k3"}], "+", 
     RowBox[{"D1", " ", "k1", " ", "k4"}], "-", 
     RowBox[{"2", " ", "D2", " ", "k1", " ", "k5"}]}], 
    RowBox[{
     RowBox[{"D1", " ", "k1"}], "+", 
     RowBox[{"D1", " ", "k2"}], "+", 
     RowBox[{"D2", " ", "k3"}], "+", 
     RowBox[{"2", " ", 
      SuperscriptBox["D2", "2"], " ", "k5"}]}]]}], "&&", 
  RowBox[{"k7", "\[Equal]", 
   FractionBox[
    RowBox[{
     RowBox[{"D1", " ", "k2"}], "-", 
     RowBox[{"D2", " ", "k3"}], "+", 
     RowBox[{"D1", " ", "D2", " ", "k4"}], "-", 
     RowBox[{
      SuperscriptBox["D2", "2"], " ", "k5"}], "+", 
     RowBox[{"D1", " ", "D2", " ", "k6"}]}], 
    SuperscriptBox["D2", "2"]]}]}]], "Output",
 CellChangeTimes->{3.8427116433936834`*^9, 3.8427116847790823`*^9, 
  3.8427185506714926`*^9},
 CellLabel->
  "Out[292]=",ExpressionUUID->"206b37b5-9e2d-4fb2-8184-f38853d1af47"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"D1", "\[Rule]", "769"}], ",", 
   RowBox[{"D2", "\[Rule]", "62"}], ",", 
   RowBox[{"k1", "\[Rule]", "24"}], ",", 
   RowBox[{"k2", "\[Rule]", "74"}], ",", 
   RowBox[{"k3", "\[Rule]", "63"}], ",", 
   RowBox[{"k4", "\[Rule]", "11"}], ",", 
   RowBox[{"k5", "\[Rule]", "29"}], ",", 
   RowBox[{"k6", "\[Rule]", 
    FractionBox["2", "53"]}], ",", 
   RowBox[{"k7", "\[Rule]", 
    FractionBox["12396201", "101866"]}]}], "}"}]], "Output",
 CellChangeTimes->{3.8427116433936834`*^9, 3.8427116847790823`*^9, 
  3.8427185507175455`*^9},
 CellLabel->
  "Out[296]=",ExpressionUUID->"45544fc1-5509-4d9a-a142-cdbbceda49e2"],

Cell[CellGroupData[{

Cell[BoxData["\<\"Species Concentrations Graphic\"\>"], "Print",
 CellChangeTimes->{3.8427116848701267`*^9, 3.8427185507230487`*^9},
 CellLabel->
  "Durante la evaluaci\[OAcute]n de \
In[292]:=",ExpressionUUID->"4401e964-79b3-41d2-8d0d-ab2a74c125d1"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0], 
          Thickness[Large]], 
         LineBox[CompressedData["
1:eJwl13k4lc8XAHCEsiSh7NlDShtF4rwkkRTJXhFClixZotJys6aQJUskRFmy
ZN+5Lm5fUpGQZE1ZkyzZ+s3c31/v83lmnpkz58w8M6+YtevZywx0dHR19HR0
+Js6Xu7ZFrRf7eaIAR3dpmDCkWFbXSEPJxgatNK8wOeXH84jCvZ2aTSX5v+k
a9ohA1WjC//+bQwmjqbnyPjz7IOflsPr2EJuI/rx/AqgmWC3hr2mIuRbtEMJ
HB+6rmD3bzz3vF3iKCgWDS1hf/tJsfXiIeBTVcI89vv2wSUGXg3YdNhmFruu
eC0sgl8TpOV6JrDzE/nFdghpAb9K7wh2yl3F4uwd2lC/ufELdoS9gY6y2Emw
Wj30HvuunsvXJolTwD7rVo/tcTDE/dzO0yDoGfkauyDsI4M7jz5c2LI3Fjvr
9kBr6TYDMFKV88FO9ZiOXd9+Fh7YO5/BTri8anWczxC2Sd4Twn5syioXxn8O
+vdYfFlHDtXlm/8oYATcX0aDsO+p7azlFzIGnVUpYWy//QohVsIm0OelFLOG
45HUMMzcYQofSD+/ryI78uoLT4uYQc+z7o3Y1qwXxxTEzOFap+f4MrL5mlPB
DXELcMlRv/UX2fCX740GifMAA1JZi8inhoOOs0hdgHtl9ufmkTW7Yrbo77wI
yixRJr9xvahpPbHSlrB6USVgGlmgv/vDVR4rSJGyev4TOfbzt0NcMVZwdSbF
chiZ68P3xOJtl2Cxgd7yC/Kjt1N0ZrGXgHxjXewDMmvjn8ur261hrUN7UyNy
YPXK22dPrKEm8erxN8gMpQz7jvHZgNTOqx1JyP75LDHf42wg7LCyzT3k5Vec
yyH8ttCb+P2EJbJ3Gq/lngRbKAqNtziA/Pvpjsb3ApdhY6bLtyXmYOJqrJSs
Z+JlWB4UPZOHPB6++xGvkB1wqbnLGiDbhRycq3hqB79U1l52MwUTQ/eOmF4U
toex4aP2asgXb6pX0yfbw4paws/rjMHEFy9t8Rc7HGC40ojp5oZgwtT1TJD2
MwcovcgiqMQQTHQ6GE9OiFyB0P5+7ni6YELf+oJBeMoVeEifyh+wHkS0WtiW
HBBzBLMd10Z6V4IIbSMnwa7njiDsL3/NdSmIaDztccdX3AmEQh4eYPsTRBDa
vqNCaU5Q3OPCbDcdRFSp3zlZJ+EMhhF0KuJjQYSSSlCeTbozSHP8e0r5GkQU
KTzi2SjlAqc28Pvnfwgi9snH+Ga9cIE78XvGtzYEETnST/v1dl6FDZHJj7pz
gwgZsbRjsxlXQflTTlNKVBCRLpD1MlraFUwGpOefuwcRojwFm5VeugIjz4h8
6vEg4h3z+XIXHjcQMBd9S78ZxcOk7iJj7gYF0lH35WoCiVeMO8WGn7lBbenJ
1WTzQCJ2A9unpFE3WDffHBIxFEDcZ/gVbCrnDlMFEfcfWgQQ7vSfjnK7u0Po
sqyE6Yf7xEW6il9tJe7AOOlmkH72PnHqX3J68Ko7LFdnTnaMkwjldZLpMQ0P
CFWL+dGVRCJ2rjmwrwd5QHvR5iSOKySCZ1WvrqzNA9K0lX/3aJEI+pUDnte4
r8GlPSG89/aTiOm/vDLyZtcgIpyL774kiehbWv3yI/kauFZ+ta8SIhHUxcHw
tJFrUFaWNiHGRyJKFpqOXdzlCXYGtSxu20hE+nz2Ip+bJyjstVQf5CYRj/9E
ZHcUe0Jj/RzTPy4ScXvOy/LRiidkh/s03EN2/m3OraPuBYXEn1QNZPNZaN4Q
5AWXHKKmpZC1f0neqGn1gir/5S07kBVnWPb6cnmD/wG9q+LI4tPTQwdNvYF/
dGlpDzLnVEfsdJI36PaEFakir0+UnXw17A3DI2HfziBPjCet28j6AH2cnbsN
ctMPe7ueIh84Y/A5IQz5xsiKYuN/1+F3zCrbILLD8MBP/62+EKX1UGoB2XiI
kqRs4guOEir72dD69g2EM+UN+ULXhwleReTvXyQ+xf/1g4Yz9OzByGc7dD1d
pW/BY1cf3108KP+DemYP6++AQvFm6iWUL/PtPiqCQ3egoJr7yjXkZ7opwq8Y
7sLqhNDyfeRdJb8HG4/dBeYC45lMZOLBE8dVyl0YrUqWnkJ2Uhy84fT2HrTd
q+/z3E4iGkI8k3U67sMds+7Xvrwkwv1A4jDTaDAcfcrhY8GP8inmq/uLMQRY
txJXryCLcpq86ZUMgY+U/8x8kN9NcZHybEOg8TsfRxTyrleh4mYjIXDpbcIk
FXlExO9SznAo9HnmhygKoHxsNvt2digMdJ3e3WcUJBE7PB9MtbtGgKhykwsJ
7ZftrR8vidyNgMKfz8rCkTdLCnRdfRwBnjbmS4nIqx0vazYXR0DFz0TjIuTe
g03hussR8Pzi1fAR5Jg5ugPN9yNhzKVkWUOYRLBf8/auiX8MYoWU5UXkZfdL
/3LI0cC92TZZU4RE9Eg2lnZ2REO67yJZD7ns80631eFoaDvxYdAY2Ut1ckCX
MQaK1j2YryD/2uTTMK4ZA8arsn/CkMeehQXINMUA5fV/dh3InW2lbOktsRDH
pNJpLkoiXsty8CW2xcF4001hIzESwadK5RT+FgeTmaviF5BJ+vdZnv2KAwZW
SbHLyKY+y8up3PFQRn9/oxfyBsr3r1lm8eAbeexWNG63qk2rGI2H3RkJXB+R
GZ647e1dSwDp1z+3aouTCBPGDi1++SSIjya/EZUgEaGeDvd0IAkS0ioWdiLX
jKxV++onwZH8LQp7kCUpMoq9HknAlDiWpIz8O8BfIrE0CTLSeuTPIj/auItO
WD0ZhsaET95DbmK9Wy567hnwkzqD+5ETg3m381SnAFP+BulgdP5lpmeM+Cgp
UGXX/z4MucSwJUaoLQXOiXzwjkR+v8N3m9TXFDiayV6agMxc3MtzaC0FasYP
sOQiewwmcZuqPodQ0/aF98g6RyS3Pq1+DmHhWezbpUjE4sQ+dsmaVBA9dag1
BvntXUXnT02pIG52YTQeOZn3SGtgeyqUalGXk5A1jx0L+zmQCrHatwQykB8n
GLHnbUiD9ZCiPSXIu3X82I/opIGygFHGJ2TrDDK7fmcaiGnVLW7difa3lfHm
m+PpIJc21XgHeVu6Q3j873R4HTfxnoR8fsxva+lyOljcNewNRB53ebbtN+sL
sL1zZTQMmfnGD2EHuRcQce9HXxwyxPjJn3N+AaoMTIb5yPnU5DO7p5G1dB2/
IkceGIvsm82AMcfmkn3SJPS+s1P88DcDJGzHRQ8i/9j2vZtCnwl9Kqwhishq
f0dE8rZmQr7FCcMjyJO1Q7l392fCvr1j7ceQtfX6qTvdM2FvmYqTMTKdwyd6
91+ZkNZVqOiH7JZEdmeaeQkxRx64VCFbg6ti5uJL6Lo09bAG2XBQ4K823SsQ
47fNqUM+JOVxJ2zrK1iqjxluRF7JEQ3nVngFKeTDKm3IgVW3csR8X8GDmpGI
r8hJXw6PqW7Igt365wZXkd/y55z35s2GVIktbodkSMTeK5c17otkAwexl0kJ
Obpsh8xj6Wwocvgbp4x80SRyLvdwNvg5R1QdRZ6L9g4dNcmGhB0/5zSQhTjV
y87FZcPVA5qSZ5BdmLu4D/LnANfY7Sg7ZM65f29nBHJhpeT4SCRypcfo+yyJ
XBAZbTwRhWz3+23X5d250Pzw36to5KrZmKEvqrnAppXj+ATZ4ZfccrNVLqhw
MX99ilw3ZSKbkpELUnpZgZnIbj/ygvQPvEb3N8t8JfKHr5aaBTp58Kdvn+8g
8sCDQqdjZ/NgzOP9oyHkX8pMUZ/M8+BOlXfaMDJHbNbgX6c8uNLdSx1FPnV6
3l/jUR54H+RnG0duqQkt7/iYB/6+8la/8Xjt5rwre/JB9UKlOYMsificHxAm
XJoPjycHqkWQ4/oVC4Qq80FyrjBMFNmc/fsnwdp8kB76bC6G3G+vJSLQnA9H
eoXmxZFHdmws3P45Hwo/p4ntRP4VFvx5y2I+cFnsstiNzHrlgTjD4QJYiiAb
KiEfFYss+15SAGfqDvmcRha1N3E5WlkAHCu8e84gM+UKiz+uLYB9AeeGsN8p
ZT1QbSmAd9uHThogW+mTL0b3FEDnohXPOeT7t+cZNVYLQKLaPMQMufWrmUGS
eiEYXBhC9y6JuJAgPm7YWgjGkwKHfJBXS2byLN8XQpTKpWrshI4qL6fOQtg4
raB5HbmL3YSe1FcIlIkAfV9k/dsP+AonC4HBqNvmBvIx2z9anJvfQOb+cK/b
yLLyTWmtem/gfU7ziSDk+forF463v4ENdRaVMbL4vXLqTWbHG+ge+b4/Fvm6
3D4W1u438FGM6SX2cvRC0buBN/DLdvXxE1l8vkjspr/fwLvoAZt4nD+OpErH
bUWw3NAx+xTny/w9f4RFEYTFMdenIev+PtTVO1YEI6Hs6vnIajXvq2Qmi6Cg
PSgJ+0CoY5r3ryKYjc37iy0gnuzG9bcIKN1MBQXIPwyY2E6yFkPChU+Cb3A+
CzqgfHcxLLBqDBUjV7m5vXriXgxnJi8qVCLLz7y6eW6lGLhlC1YbkfsiT3qa
/iuG9tOh6hTkEIUJp/MbSqDtpmwg9ojvbgtbthLgqqzgaEKOZ8xT9hQsAclj
8sLNyIwCRQtRKiVAiQ7YS0Xu1axx67hRAtWHDeTakAMTPtqeXS2BnuG04E5k
Y6OQyRy6UrA4z0/BluYkPDcylULqcxP6T8gtAbmkqs2lsP/yXl9sFvfg1J0i
pbAnysCuCznshNrAsnopeD5/dKgbOfLPK4u0oFKgXDfO/4L89PTds3+4yoCQ
8+EaQt45oDbByFsGPFO2gJ3vvkraJlgGfA67nbEp0T7FhyTKoItHh4I93evC
53uwDKR4q72GkcHevH/NsAx+yL9uH0Eeun3QcWNMGWiypjqMIcsUjN4V4C2H
h911CpM4Xz1m2dsFy8Eyy9QU+znDu04ukXJYq/l4A1vgXIk0m3Q5TPFfbcBm
WwxsWzlUDus+mqen8PxHZfi/GpdD3LdAq2nk4hbH/Gex5UDY8bv9QtYYmOmX
3F4BHTt5iT/I4mJ+cT4CFRCZ6GSJTW/NePbtjgpYz0jzx64b5qO4SlfA9qma
KmzVMfXsCqUKeCn54vA8stJ0lI++RQV4F52QWcD7Y/Uw582UCvAyT5lfRObn
u6PesasSfO6Sjq8gF+7dyt4nXwnCfz6exz51IrVr5EAlaL7m8MT29250WjhS
Ce1quqnYQ52bYvl1K2GqrHcNOycyctzSqRJmDKwLVpEJtrSoyexKkMx5yLqO
bL9OGWXaUwWR+r7BdLvQ+0Tehbi8vwruDYw/xR64wJPYqFgFGbk6Bdim1db6
JLUq2HSivQdb++a/Cjp91N9xVZYeedeyUsSKRxVs551uwp6azz4yW1YFXc1T
fxiQs6QMY/SrUf8eYtMGZDuj5Zm8+ip4IlgiiN1fpP3i6tsqEO16qYH97tro
lskvVRD3UuARdv7sjtHv61WQKTwhzIh8bSoyvE+zGhz/fZdhQrYumvGT1qkG
IfIHJWz9G3p2HnrVkLz3tTb2bhYW1U3G1cB5/KgD9nfJO+MH7athnMjLwDY/
f/X4g5BqKOSgE2NGJv47uaL8rhq8uoTZNyKzv9pg/8SkBoKVnlRtQi7ScrCJ
s6iBtqV7LdjnR1ot4y1rYFelbSd2rkisaaJ9DQROs0xin46VOfnMpwaOZHUL
sCBHkPT2ZD6pAXkdT29s7otP5ko+1wDPGdJOVmQBbrk7XSa1wOjP7cyGPNry
gl3+fC3sjrrpjZ3vLxofYFULQ5p9d7BPjG8rVLhSC8vxt2OwPevpRh771QJb
u3ENdptr14kzSbUwEaDHwY58p/XulpahWni372Em9pyGc3vfoTo48/p23Wbk
Qyx7koeV6uCtx4EW7OvtU87jR+pg3q2/HXvdwpV1Sa0OGHXFv2Fv8vI4zn2i
DlLemq9hC2Ver9QxqYOcp/FKHMiabAGZJT510FaYloUd3ZF0O6KsDt6pZt3a
guw2Wr79YUUdxGSTSdi6i59yQ6rq4NT05xBsBkGOvnt1dfBVYDYG293aX8mr
pQ7qd43lYp+evThr1l0HWovjfdibtojaSCzVQff7J4c5kW+eTNUqOVwPQ/5h
37CvOFCl+pXrIe3l9Ai2ceAvRuaj9eC7oDuOva9BjWxE1ANFYukP9qjyF5jX
roeIt7ysW/F8sjzKCub1EOJ98yC26KZAucKb9ZDlyEPCJlOucL6ur4fO3Qrb
uJA5zvAs5ZPrIeW4Ej+2aXfNtzeUenDiURbGnhznziun1kPbz31S2DycNXqU
D/Wgxb6sgG1rzvWgb7AeTvxZMMRmnKlgYmNoAFNqUjj2cT72FXuNBnB6kbOG
nZJbvytWswHeuSjQcyOvaviYN2o1wE3BckbsNy5D5aK6DTCjUs6GLUYuu95j
2ABZUjH82GsulxdOXm6AZ/61CtjF5JrZPcENQDKqd8CWcnX/MdfWAPT2u1uw
+12zRNfaG4Awa3uLHes2bMr8sQFsDzq3YTN7GFH5uhrAMjftI/YPT+Us1f4G
GOb524ed40fvHDTdAHrWyrPYBwIjZwS2kMGHEObjwecxqWBBXZ8Mo/NDltiP
fx5fJM6SYUPs4iXsYcXeRThHhhl/VlvswHcMf1VNyfDxgJwDdus/wxVlKzLM
mpi6YZtaL/zb70YGRXWbO9ju0ios4hFkcBnWeYadWtAoyPCeDIuDMd3YTKy2
trs/kuHQD+debAfrDbnGnWSgIzT6sOW5NdSyu8mQMDb2DbvCs9bq3CAZMuVF
xrA/Hq54kfGbDIS52jw2Q03eXt1tjaAqfJxzG7LN24Rj0eaN0CrHpoEt/qg6
Ov58IxzXczyGPWQwMJp8sRF0tFs0sa17pIJfWTfCxH93TtD8I7+1xrERnnGO
nKKZudnopx9y8zUT7Esac/ZqiY0gl13uhG1ZoRv240sjWDJzRWLvC/WV4u9v
hOlezcfYDOaZNToDjeCR7B2Fnf6XYTZrpBH+zXXFYI8rVRi5TDVC50hoArZ3
qYzI7/VGsDlSl4YdVsRUuCJGAZ4km2Lsite1nzkcKCBnlfUJW/KttrKiIwVy
/8R1YYePfkiwcKaAUEngZ2xboZELL90o8L3esgebI3TTiLovamff9JW2vssG
vzxDKfB5aP8INpvQ8KYvORSINJmexT4fwnwkc5YCfCYybNvxfJzc6S/nKGCT
10PzRKwIR9Y8isc7lB3bL11pKOcvBTL1xzdjx9U6hhbSN0H0sTRO7I75d73V
W5vA7tryNuyT1k9udO5vgrUHhCi2sopMNb1HE7yQJQ5ic70DV3nPJpAV6aN5
3MpEzMK7CZQDfBSwnwYGBhT5NUF3eo4iNt3HET17UhPsA04l7BaH5/2t0U2w
pF19FNs4VoAurhTFs1BwHNtzlv2Y/FoTkB2kjLGzZjLXFP81we0b8TQPTGmU
qdI3w4W9m02wT41f36PH1AxHb8zRLDE8wuu8uRnqX1aaYX/srJp8JdwM5feP
XMDeW+YcK6XWDKuP5mxo8fu3/hS63Qw+ly64YZe3NDgL3G2GBxfKaQ7mKp/h
JTXDFMs2d+ydGS/muYKa4bTnfzRbt/nTs4Q3g1e0wjXsHsH9/PPJzVAtu+RF
W29ZjHZbTTPQbdG6gZ35+2LmrfVm2JQhGkAbX9vKI4OuBdjn3Gl2SL6k2s7Q
AoN/G2iWOWnbIbqxBU4q2gbS8vH8yj/ylhaQv5wWhP1a39OEVawF+st5QrGL
X4dsfHKsBf5Ukh9hkx2L7PODW6BE1+QJrR67lVWKQltAzySKZrWpao6ysBYY
l22nucy1ubg2ogU8JbXiaON79m5oj2sBP7f98bT940+XMvWyBRYm1hKwrz4+
1b2L2oL+/z2TsQUqRrRfsFCBzfpLOvbaLUaBUTYq1LhsfUGrn7rkhCQHFTQ0
T9CcQbV5mM5FBb6zhTQf7Bn6kCZIhZC5gAxafZcGzFP3UEEnWeIl9q1DX52f
GVCh6OGRbGyr5VXVb4ZofFdHmjVrhLaIGFPBQTKBZlat8wXJ5lS4wfyX5lij
L/NJNlT4701Rzv/X1+P/1IsKFiMSr7Ejlf6e6fOhQhOrAc2eq3xiQn5UMN7o
T/OR+6bkRH/UTvpMc3PU542JQVTgjAjOo9XHZLG7N4QKrS5FND8S5M0SCKOC
m8QAzefSjE8lRFDhNO/hfOzD9t7CvY+psGxkTbOAXOw0fwwVXF0e0rw2XVxr
9oQK3y+U0TxQ+CkiPp4KsdLDNP8P/eqZdw==
          "]]}, Annotation[#, "Charting`Private`Tag$45306#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1], 
          Thickness[Large]], 
         LineBox[CompressedData["
1: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
AxTfhVg=
          "]]}, Annotation[#, "Charting`Private`Tag$45306#2"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {Automatic, Automatic}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 610.2646789140631}, 
     BaseStyle -> {FontFamily -> "Arial"}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox["\"Concentrations\"", TraditionalForm], None}, {
        FormBox["\"Time\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> Directive[
       GrayLevel[0], Bold, Medium], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {All, All}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{Automatic, Automatic}, {
       Automatic, Automatic}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"L1\"", "\"D1\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Arial", 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Arial", 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Arial", 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Arial", 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          Directive[
           GrayLevel[0], Bold, Medium], FontFamily -> "Arial"}, Background -> 
         Automatic, StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontFamily", "\[Rule]", "\"Arial\""}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontFamily", "\[Rule]", "\"Arial\""}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                   BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False], ",", 
                 "Bold", ",", "Medium"}], "]"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Print",
 CellChangeTimes->{3.8427116848701267`*^9, 3.8427185509021573`*^9},
 CellLabel->
  "Durante la evaluaci\[OAcute]n de \
In[292]:=",ExpressionUUID->"f6d56006-1644-4c15-a1f5-0f7d2df7ab3e"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0], 
          Thickness[Large]], 
         LineBox[CompressedData["
1:eJwd1ndcT98fB/BKRCW0S0O7H2kgypfeV0iL9p6SSp/SUFER0ZYGTWloaGto
7/q0PmlQCiFtSUsRLf3O6a/7eD7OeZzzPq9z7j1XwMpJ+yoNFRVVAzUVFX6m
Tle6dQXKKCQ5MClRUWkQ9jRsDcWse+HdLX0F7GVOr8Jw1gOgdaqPwC4v/E7V
yicOHUpBatin0vPEfVilgaSQZ4rN4zyuGc91DHJsrNywN/7j8Szhk4Oxgqon
2EN0us97hE7B0XqHGuyv31us3VkJCBvsXMB+0zPyl4ZDEeTGDxyjRm4o3QiN
4DoHIwoxodiFCVwCfDxKEMKsvY6d4itbmsunDOF+Ho9okCNstVTkBVQhaH3t
/DZk34uOX1qF1KGzYVOGFtn1aLCLrugluBnhZ7EduSi0l8aFVROYZLkndiDn
3B3uLGfTggaqtHc7kVNd52L+sWuDHlO+BgPy06vrluc5dYD5g8wdJuTHhvSH
Qrl0QVpMNowZOUSN83cvtx6M5lWTOZDvK4jWc/Hog5m/oyMfspfMsWBLXgOo
KDH9LorrEVbUyeQzhMapJx0yOH8OTd45fiMwTBkrA2QrevNvxwSMoYefOVAL
2XiDVOQtaAKjwUHadsg6C57eTUKmkHLJ2ssfWX0s8PwuETPwPPSCkoN8biB6
j6aoOUgEdQYM4v2ipH2MEbOAkifpsRzUGgT30Ie311ktQcjhV9VV5Jj3X48z
R1sCKUWslILM/HYyoZTtMuwLW3qiQqNBhHXMUhnFXIaVsmWJWWT65l9X19mt
4GJAmW/dNg0ioHatIznWClif79LroNUgaMpppM9yXgF2pmBqgR0ahE/hrujJ
uCugosTk8p5Og1jN3rsazGUNXDYHr+2k1yA80jgsDj+1hgVm/lMDjBrE4jO+
5jfcVyHN7AbFYa8GcT1G5H9uCVfBrOaaIi2bBjEdLhHGwWMDLmvrqePcGoRN
8NGlqmc2YPjrsqC9oAYxev+koTmvLahWh1EzSGgQ5rfP1FIn2UKugVm5uZwG
8cldWTCDzw6CI3gLxJQ1CEMnjUDlZDtYpPMMtTDVIN7Z6c/84L8Gfdrr2hc8
NAhNKzOt8JRrcLA3Zcg7VoPoNLEuOyJgD0Zst6j2NWkQynqk/QPP7SFWOmy2
9K8G0XzJ9Z6nIAmWy+ktXfg1CULZc4InjQRxBhtTD9U1iZoz91QbhBwgr3hI
NTZAk5D7L7DgSroDJJzvX7/yVpMoORbGSifiCPL5Q9RzMlqEtGS0Z06GI8i0
DUhWv9Qi8sSeDV0UvQ7fdPyGdTS1CXGBtLM/X1yHACe9iF4BHSKdOycrSswJ
npQO7/OU0SUOsBbtlstygqG/xzxYIvWI7h2mlY6szqCgIcr/TM+AqNl+xlHc
2BnkJLnUX742IrJpRQXGklF7ubaU0TdTImYbQ3/ihDMUzj5tvK9jSfjRLAQZ
HnIBZ25pXyknK8KFuv8Ui4sLWCgUaFXGWhPmVFULXWUusPBcNMv8sQ2hvpmU
HrSOrFIolyxjR8j/e2B4VtEVNjeS4yqvXiNEN+wY/wW6wtpkA7WAvD3Bun6x
oaLLFY6fdxzTbLInqNeOuN1guQH0mrT1PJwkYm6FQ1zS6Ab8Hrd8FaJOIj7/
Xf80lXQDji7b84g4kAjKn5HwtPEbIErt+nf3XRJRttx61vygG5CfJkvqh5CI
9N+5fzid3aBLNXGQOZJEPP4VkdtX6gY5/vrpvNEk4u6Su0XYmhtESIw8iogl
EQ6LxiwqZ9whiqq6jDmeRBj/hLZtge4gVT84seMpiVBeEPau63SHnHEuy0xk
2fldUp7MHqB8Q/suewKJEJybGz1q6AECfrr37JD3zvbFzCV6wMyu/ovZyP9+
VKhmj3nAjy6hma/IP6YT/135303gDG64vfcZiWidsrX5WHITVHtOS9khe4+v
yTa/vgVTlx417EokEXZjw9999nlCfOZeVhlk/dGWRHkDT1A57ShpiCw9HL69
YNQTPkzK9GcgT34S6o9f8QJdJkdNSCIR2n1qbk5id0CtPCCXlEwiWEcuGj1q
vAd5KoRs7nO0Xvab/+0fvQdMYj2U18jJaim82TS+0NofqjiDfLBscaT5rC/Q
LnQOS6SSCOJhrP16iy/sC03ozUMmyY54kzruw4UA9fTMNBLRFOyWpNLnB6+q
N5ODM0iEy5GEse0TQTAspZW/LRvlKeCptkAbDP4XftziRT6w1+DVoHAw+KXP
S55A7p5lflBgHQwBS3eN7ZEPZocIGo0Hg7RyTVEP8ji/1+W8sRC473nNOSYH
5bHb6Kv2aCic2cGeyZpHIvjcHs72OEXAIak9Ue9fkgj2zt7L/L4RILX65dwc
8m5h7oHrjyPg9D6OEdoCErHel1W3uzQC+JrZP8sgDx5tDVdbjQDbTfOhEOTo
JaojbX6RcKWhQEi+kEQw3vDwqIt/DIcfvjkcWEQiVl0ub+aRo4Bjx7mlmVck
4qNwc/m7vihIEVXq20CueC/qvD4WBccZqTKYSkiE++mZYTXaaFg80cUrjbyw
82bT9LlomI0Wt3FF/pYc6i/eGg1smZMmv5DfdZUzpLfHAO+j1UNzpSTi5f+Y
OBO64iDjdQalupxEcJ6m7OX9GgepuS+iOpAfaPrtSl6IA+98Nu2PyIY3V1dT
WeJBM8IpfRl5W8vklxyjeDATccySrkDtlvVpVRPx8OCarVwqMk2ss9TgxlNw
7pXu9K4kEQa0fUpckonQb//lCEM1iQhxs7uvAonAvnullh25bnyj1lMzEdxe
vlQQRBZuEZcddE2E8/mMAvLIi/4+QgnliaDfG2VvgxxGd5CK90wSnL3xlbMe
uZXet/KAbjLcPxopeK2GRCQEcbCz1qZA1v4V8vNaEiE+N6/H2ZIC1u5KpjnI
ZTrt0TxdKRA9ZD5bjPyGz5NN5EsKfJugXyUj7ygdZD2+kQI8i/O1E8iuI4ks
hqefA1vcy19idSRC5aTwvme1z6FWOuh8JvKfH9KMwnWpUPk+Pf9xPYno8JV1
6G9NhfvPPp98ipzEcbIzoCcVmkePND5HPnf2bOj34VS4OK9TWYj8+KkeY8G2
NIj5zm7YjSyh4sV4UiUNRB049HY2kAirF2RGzXdpYE6SvXUTudtSf/ft6XS4
znX02dlGEsGWbhcev5gOlBUZeRVk029e+8pX02FG1eHtJeRpx2S2RfoMGElO
XTJC3uE9xWt3KAN+l/luOiFDtJekrkMGCOTbyCUgF1KSNCTmMkBDt0RlDjny
yLfIzz9fwKqJWk1gEwn939nIvl15AfSDi5KhyFNskx9aqDPB8dt4YgSywso4
f8G+TBhSK3WOR56pH833lckEyTsW0znIyheHKKIumVAcniDdhUxl10/tspAJ
3fe/8u4hkwjnRLLL9vksSBD8yxaMbAVOspl/ssCgLYvqEbLOCPeKMlU2HBno
+RaBfFzE9V7ovmygU3yUG4e8lncgnOVYNiQ0cO3KQg6ouZMn4JkNpZ08/K3I
iZ9OfDu9LQdEqidfbyJ3cOWZenDkwpfO1K5rzSRC6tpVRT/+XHid0VTugBxV
wSf+WCwXDvk4JDshmxtELuWfyAW2Jza27shLUR4hEwa5oMUuNXgPmWfvmQrd
uFxwa/+mHovsuGOA5ShXHsg88XJvQt67tNkxz50Pv27XnmRuIRHVrhNvcoTy
4W+fPYUV2WaxY+CqRD54mjTpcSDX/Iwe/XQ6HyaFPG15kO0WDq22WebDdM55
J1HkhlmD/6W8yIeAERbmk8jOUwWBmkdeArU/XbEF8tsvFueKVArA7oRQezry
8MNi0lntAtiYsGh7gbwgv/1Jv3EBeJq/bc5CZorJGVkhFUDRP8OqPGT1S799
FMMKYPq4WEQJcntdSGVfbwFMmgpMkfF4PcYca4cL4btMgu4I8vtC/1De8kII
iety4WglEXFDskU81YWg+ih9jhPZmHGyf399ISiQT9lzIw/ZKvFztxXCHd1S
M17kcT66Yvb3hXC7YkJWCHkhNOj9nj+F4Ex/Ik8Smf7aQ0GaE0VQr6tefg75
lEBkxWRZEcj2//ZyRD5ga+B4qroIHlz+RLmOvD2fV/BxfRGQkyM5nJG75XIe
nm4vgsRptwJXZEtNsnnUxyIwDTrx9iay393ftIrrRcAjffOLL3LnFyOtxDPF
8JUnhj8a2eyp4LROZzFMCyr7ViCvl80XWLwpBllBU69K5Kd9Ne6kd8XwizHR
tQp5gNGA+sHnYphQybKsQda8+5CzeKYYRCaWjzQgn7X+pbR39ytor91Z1Ib8
P8nWtM6Lr2DjczLHAPLvxmtm53tewW1dx1cLrfh/Rf1VZt8rkCAVPfqJfOuQ
9C76D69A84+E7SLyatRySffwK2A41sXxqxW/Xw8YDRdfwc5nLU5/cH5MidX2
bCXQzyCztoHzMn7DFWFSAm5xFD/6NhKhtnh8YPBbCXAKpgUJICvUvakRn0H9
S74fEUQ+EmKf5rFQArlhMZ+xuQWTnJlXSmAeRCSFkae0tjOo0pfCTLFIhyiy
X1EfVEqUgkXuoclDyDXOztmxLqXwkMRcLIssOZ99W3etFEZbfpVcQP4cqepm
uFkK9m7lR5WRg4/9IJluKwOw2VOMPe4pYWLNUAYSgffyVZDjaQvk3faXQe6E
S7IaMi13yfKT/8pgVmvUSQN58Fydc593GZif8m7RRw542mutvV4GumpputbI
+nrBM3lU5cDvv0TGFttLuNFtLwfK/qEjV5Hb/fMf1Owuh7CxB3tskHe5BKWK
8pdD/E2eZlvk0AsKw6tnyuFp4AA3CTnyV7ZJWmA5hDvR+7ogP7vkq/2LuQI+
vc07cwdZdFjhBy1HBYz/so7CLnRZf8C2vwIskwYmsVuibpYeF6qAj37fQnyQ
5wYdOT2PVkBPSmvPXWSwNR7a0KmAdzzF6veRR+8etaeLroA0viXWQGTxoglf
bo5KqPBjnA7HeX00ymXfXwllylGHIpCf03S/Y+avhJNqEw7Y3LplYgxildDT
NTaHzfAnoGvteCXMshsuROL5T4lzfdGvhMNiyt+fIJe22xcmx1TCjFZsSSyy
4vD8kDB7FdwY865MQhYU8Iq7yV0FDywOLmFTW9Fqd/BVwe6wdIlk5IYxzhYn
MeT29STs09/O5FbJVcEhdkXfFGS5uSc3NU2qQP2S2qlUfD7WT+y9nVIFR9ML
H2Ugc3HeO9N3sBrqKitf5CIXS+1j/CxZDfvo099iq19IHRg/Ug2n6OzXsX08
mknLJ6vBIihYKw/n9W5nDJdaNTSLca9i50VGTluQqoE0nXjuJTLBkPZkJrca
AvT2NBQi2/5rmdh+uAbY1fz0S5GFJR2JqzI1cMpR/Db2sBlrQrNsDSwz5zzH
Nqy10nygUAOcjkoz2Mq3N6uoNGsg8c/k3TLkg6tyEWuuNbB2ZjylHHn2d+7J
nxU1oFy0rasSOUdEJ1qztgZ62WMXsG30VucLGmsgT9uOtQp5qEQ543pHDZQ4
sZtid9+Y2DPzqQampIYnsQt/8k1M/qsBjnfZ89XIN2Yjwz+fq4Xk+0c+1SJb
lcx7ianUwiXfe3+xNb0v2rherAWJvSVsdcgSu3ad3qlfC9qXOzWwJ4XvTR+1
rYXvD1qasI1Nr59/GFwL7+OX0+pxXq9V1+S7a2H4+DvdRmTG7G22sQZ1MEXP
4NKMXKJkdyXOpA6q/DcCsE3HOy3iLergXMKXZ9j5/DGGCbZ1wP37ajv2pRhx
1eSbdTC78pivBTniwcXDmbF1ACsn27BZzGOXyt7XwftcM4Y2fH5ZDt0bMKgH
6sx6KwryRHsGo6RpPTScmnbHLvQ5EO9vWQ8RwduCsS9MsxUfu1YPq940Bdhu
jVTjj73q4cDho6vYXU4DFzQS62FpF+lRB/K9Tt897aP18P5PWOZr5CVFh57P
xxvgfWZnXhfy8V2Hk8bkGuDDr79V2Ld6Zh2mTzbAx3ZOCvY/Eyf6vwoN4GRx
dAJ7p7vreZYLDbC7aoCnG5kn81a1ikEDTNR+D8Y+x+CfWXazAbpav5j0IEf1
Jd6NqGiA8OuWw2+QnScq2R9VNUA2T8IPbLU//fnBNQ3wQ6lzGZtmP9Pn+w0N
wGfMvPstsouVj5x7O6rvvpQ89qWf5j+NPjSAFnddOPbOPQeuCP1tgL9KL4/3
It9WTVUqO9EIrFETpD7ka3YUkSH5RrAb7HbH1g9YoN1xqhHiJQvuYks3KZD1
iEawPa/3BHtC/hP8Vm6EO0zyVdiX/scqf8y4EXbzXt/xDvnAzoBDxbcbYcj0
Txw2ueXa3peNjXCcdSOjH5lJg/VvIbkRTD9fzsc2/FD39VVLIxjENJRgz0yz
FFRSGmGazoGMzbq37mLL20bQWfUexrY2Zn74eaQROkaDuAbwfTBftZ2Bpgnm
L5kEYp/nZFyzVWwC6opVrffIKfmNB2PONcHV516G2OuKN42blZqgoO+XOfYr
x9HKA2pNQHPyAwlbgFxx66NOE2znN/XH3nC8uqx6tQm6nS3KsUvJdT8PBzXB
vWk+jg/IIk4uU0tdTRBn39GKPeSUc2CjpwmsDJ+/xo5xHjPc0dsEh0lub7B3
uOpROAeaIIJrzyD2lJt8zumhJqB1ZJvFzvOidgica4Ir/8yYP+L7OCBynnsP
GQbP/DHCJhKLls9okqFJmnsI+/H3838IbTJMtc2NYI/JDv4BXTLcPt4wgR3Q
TbNy2pAMM5lGs9idmzpr8pZkGDttu45taLW8KeNMhtfnF7gG8XkS+2+XYAQZ
VkTeaWOnFjXvp3lDBp5czRrs7fTW1hK9ZBD++Koe285qW77+OzK8nGMhY0uy
KCrkfiBD4EAHBbvKrd5Sd4QMTC0s77F7T1RlvFgkg7E3y09smroCKTW2Ztij
1C/4CflKx9OzUcbNoEF/ywdbMKw2Kt60GVTu/LuHPao1PJFk3gxCvfcfYFt9
FAnKtmqGi0L+QVueKuyss28GU2fnx1ve0ab33asZzvKMZmBfVlyyVUhoBvPF
Y6+xLarUQqc+NYP89uU9n/F5D/EU4Rpqhr9TB5mxaYwz61SGm2HngBkrdvoK
zc+c8WY41FPLiT0tV6XnONsMI9o2Atge5eL8i//QfGrGR7BDS7YXrwm0AMmo
Txu76mX9eya7FuANhDBs4Q5leVn7FmBuXg7HDp94+9TEAfW/nReJbc0zbpbl
3AJyV1iisZlCdo6f8WyBTuGeBGyrq1oLbiEtYKy7mYXNwDO281NeCywpqzRh
mwbvOJn5swXCy6sWtubby5KetdQCh09QL2L/iOFnyvndAt9zlJawvdLlRvNW
WsDJpfs3dly9fUgxdSvEPnq7it33u3uwdl8r+Ma/oP2CrGoV6/1OphUEKyM4
sOX/E6+ldm2FxtGQk9jM3eAk6dYKHdty/sOetjQQMPFohQqe9lPYzwIC/Eu8
WqFcnhqwqXrHL9o+aAUdOduz2O12z4c6o1qBvHObOrZ+DDdVXHkrnFq/a4rt
9pPxrORGK1j7ULywc+YzN2Q3W+GNdLI39vCsYsVp6jZ4fMztNrb69K3DF7e3
wS0ZHh9sobFxDofdbWBHb+2L3fuuZiabtw2++vcFYktVOMSIKLSBNMOxqK36
fTq/89xtg5fhTLnYle1NDty+bVA+Vb7lIObKeY4HbUBXYJmHLfoi4zdzYBs0
+xXmY1t1+VDvCm+DFjOVQuyP+2W4fie1gTuTZenWeiuilbvq2kBqU6geO3PR
PPPOvzaIlFF+uzW+sqXrC6p2UP36Zct2SZdP99C0QzfDjV5scVXrvgN07UAe
SejbyuP5tU3ynnY44v+tH/ulppsBvUA7tLfbDGKXvgymiz3bDuUndoxhk+1L
bAuD2qHN5M3i1n5IyP9XEtIOWd8UlrAVZmuZKkLbIZ0+f8sVTm2l9RHtYMYe
9GtrfLfBbT1x7TB/QX4ZO86HKmU2qx1MdgevYF9/rP7hIKUdAilTm9jcVePK
GbsooBxazDCEv7d3aLknGChwg5GdEXv4jPAPYSYKvDroueUXlCuP0pkpwKeo
sBv76MfRt2n7KaA+QmbCVv87bJx6mAK97rX7sO8c/+KQrEUBumeOHNiWq+un
v+pQIJvcsuVzdTx7+PUp0BTLy4lNr2RalGRMgSWlzi3H6H36nXiFArmdItxD
W+v76PPMnQLH31B4sCPlVjQ+36TAm3keXmy3dU4BHi8KmDQ5bfmknyE5wYcC
o76sfNhtT97TJQRSYI+HMT92jsGfD4PBFAiSy91y2H6OHO5QCkgVrW1ZN01f
/WkEqrc14QD2CVsP3sHHFFC1/rFl7kMxc1zRFKisPCmwld9cab1RLAXM2oK3
PFzcHxEfT4GkRx+2/H9WCKDP
          "]]}, Annotation[#, "Charting`Private`Tag$45371#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1], 
          Thickness[Large]], 
         LineBox[CompressedData["
1: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
          "]]}, Annotation[#, "Charting`Private`Tag$45371#2"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {Automatic, Automatic}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     BaseStyle -> {FontFamily -> "Arial"}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox["\"Concentrations\"", TraditionalForm], None}, {
        FormBox["\"Time\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> Directive[
       GrayLevel[0], Bold, Medium], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {All, All}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{Automatic, Automatic}, {
       Automatic, Automatic}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"L2\"", "\"D2\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Arial", 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Arial", 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Arial", 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Arial", 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          Directive[
           GrayLevel[0], Bold, Medium], FontFamily -> "Arial"}, Background -> 
         Automatic, StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontFamily", "\[Rule]", "\"Arial\""}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontFamily", "\[Rule]", "\"Arial\""}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                   BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False], ",", 
                 "Bold", ",", "Medium"}], "]"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Print",
 CellChangeTimes->{3.8427116848701267`*^9, 3.8427185510677934`*^9},
 CellLabel->
  "Durante la evaluaci\[OAcute]n de \
In[292]:=",ExpressionUUID->"27a0c58b-9e85-4e8f-a02c-986179b33b8f"]
}, Open  ]]
}, Open  ]],

Cell[TextData[{
 "The user would like to know which rate constant corresponds to some \
reactions. It can be done with the function ",
 Cell[BoxData[
 "GetReactionsAndRates"], "MCode",ExpressionUUID->
  "9097e996-89bf-4041-b557-97d5b3b43a59"],
 "."
}], "Text",
 CellChangeTimes->{{3.8427183109215865`*^9, 3.842718368841477*^9}, {
  3.842718407032591*^9, 
  3.8427184158279696`*^9}},ExpressionUUID->"aa223435-a2bc-4e50-a15d-\
ebb94f04b331"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"GetReactionsAndRates", "[", 
   RowBox[{"reactions", ",", "rates"}], "]"}], " ", "//", 
  "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.8427183723715334`*^9, 3.8427183923927455`*^9}},
 CellLabel->
  "In[300]:=",ExpressionUUID->"15839d28-e108-423c-be3d-86db7a15b751"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"\<\"L1->D1\"\>", "k1"},
     {"\<\"D1->L1\"\>", "k1"},
     {"\<\"L1->L2\"\>", "k2"},
     {"\<\"L2->L1\"\>", "k3"},
     {"\<\"D1->D2\"\>", "k2"},
     {"\<\"D2->D1\"\>", "k3"},
     {"\<\"L1+L2->2L2\"\>", "k4"},
     {"\<\"2L2->L1+L2\"\>", "k5"},
     {"\<\"D1+D2->2D2\"\>", "k4"},
     {"\<\"2D2->D1+D2\"\>", "k5"},
     {"\<\"L1+L2->D2+L2\"\>", "k6"},
     {"\<\"D2+L2->L1+L2\"\>", "k7"},
     {"\<\"D1+D2->D2+L2\"\>", "k6"},
     {"\<\"D2+L2->D1+D2\"\>", "k7"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.8427185543467855`*^9},
 CellLabel->
  "Out[300]//MatrixForm=",ExpressionUUID->"1491ad75-841f-4040-84c8-\
e3b80ef2fd0e"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1366, 685},
WindowMargins->{{-8, Automatic}, {Automatic, -8}},
Magnification:>1.7 Inherited,
FrontEndVersion->"12.0 para Microsoft Windows (64-bit) (April 8, 2019)",
StyleDefinitions->FrontEnd`FileName[{"Report"}, "StandardReport.nb", 
  CharacterEncoding -> "UTF-8"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 339, 5, 267, "Title",ExpressionUUID->"f14da9e3-cd3b-4f0b-a9f0-2cf4c418e796"],
Cell[922, 29, 518, 11, 96, "Text",ExpressionUUID->"602b73d6-e6b7-4f08-864c-6a109a3d117e"],
Cell[1443, 42, 1387, 29, 314, "Input",ExpressionUUID->"7de15c4f-cdca-4f45-a8e1-cc488242b23f",
 InitializationCell->True],
Cell[2833, 73, 473, 9, 134, "Text",ExpressionUUID->"b017b4c6-5f91-434b-9965-0c6a9a34a1ec"],
Cell[3309, 84, 1589, 32, 201, "Input",ExpressionUUID->"4aff2120-9760-4b40-93b4-726cb68aaa90",
 InitializationCell->True],
Cell[4901, 118, 991, 17, 248, "Text",ExpressionUUID->"185a94e5-ebf5-42dc-b449-2866cefbf384"],
Cell[CellGroupData[{
Cell[5917, 139, 1359, 21, 102, "Input",ExpressionUUID->"a3c6f401-14c6-4ff2-942f-f481510d0a40"],
Cell[7279, 162, 1536, 44, 207, "Output",ExpressionUUID->"1f381a1c-ddb8-49c9-b03c-faf535d0c3c6"]
}, Open  ]],
Cell[8830, 209, 694, 14, 134, "Text",ExpressionUUID->"9027ee9e-8e30-48cb-9f7d-a99d8dfffa5b"],
Cell[CellGroupData[{
Cell[9549, 227, 1740, 40, 321, "Input",ExpressionUUID->"4f55b2f8-f8ac-442a-8467-2f344bd413af"],
Cell[11292, 269, 632, 16, 110, "Output",ExpressionUUID->"83ef53d4-8214-4eb3-99b8-a7aa4ae6f718"]
}, Open  ]],
Cell[11939, 288, 367, 10, 57, "Text",ExpressionUUID->"783a2c8e-d5ba-45de-9e16-1889345b6d79"],
Cell[CellGroupData[{
Cell[12331, 302, 876, 23, 168, "Input",ExpressionUUID->"05a70f9b-cd41-46dd-931f-3e0ccf159a7f"],
Cell[CellGroupData[{
Cell[13232, 329, 322, 5, 37, "Print",ExpressionUUID->"9a3202ea-3e0f-461c-987b-81efbd5c3ae4"],
Cell[13557, 336, 91940, 1569, 406, "Print",ExpressionUUID->"870f6dad-cee9-4d7e-af64-7e02d64a038c"],
Cell[105500, 1907, 78549, 1350, 413, "Print",ExpressionUUID->"0777d2fe-06be-4363-8de1-84cd45e5b03a"]
}, Open  ]]
}, Open  ]],
Cell[184076, 3261, 551, 13, 96, "Text",ExpressionUUID->"5416d73d-2b6d-4625-8c2e-a1f6ab03ad7c"],
Cell[CellGroupData[{
Cell[184652, 3278, 556, 12, 145, "Input",ExpressionUUID->"db045762-f2ec-4088-94df-ac4ab2ac6914"],
Cell[185211, 3292, 482, 10, 39, "Message",ExpressionUUID->"dd9b2d30-b74a-40ec-9123-15a1e0c8f507"]
}, Open  ]],
Cell[185708, 3305, 220, 5, 57, "Text",ExpressionUUID->"0578a8b0-652d-4a16-89f1-44806199d510"],
Cell[CellGroupData[{
Cell[185953, 3314, 2017, 55, 486, "Input",ExpressionUUID->"1e398066-e8da-45cb-898b-f2b1ee2115c1"],
Cell[187973, 3371, 1380, 41, 175, "Output",ExpressionUUID->"206b37b5-9e2d-4fb2-8184-f38853d1af47"],
Cell[189356, 3414, 667, 17, 110, "Output",ExpressionUUID->"45544fc1-5509-4d9a-a142-cdbbceda49e2"],
Cell[CellGroupData[{
Cell[190048, 3435, 250, 4, 37, "Print",ExpressionUUID->"4401e964-79b3-41d2-8d0d-ab2a74c125d1"],
Cell[190301, 3441, 31332, 576, 413, "Print",ExpressionUUID->"f6d56006-1644-4c15-a1f5-0f7d2df7ab3e"],
Cell[221636, 4019, 31649, 581, 413, "Print",ExpressionUUID->"27a0c58b-9e85-4e8f-a02c-986179b33b8f"]
}, Open  ]]
}, Open  ]],
Cell[253312, 4604, 439, 11, 96, "Text",ExpressionUUID->"aa223435-a2bc-4e50-a15d-ebb94f04b331"],
Cell[CellGroupData[{
Cell[253776, 4619, 303, 7, 95, "Input",ExpressionUUID->"15839d28-e108-423c-be3d-86db7a15b751"],
Cell[254082, 4628, 1063, 31, 448, "Output",ExpressionUUID->"1491ad75-841f-4040-84c8-e3b80ef2fd0e"]
}, Open  ]]
}, Open  ]]
}
]
*)

