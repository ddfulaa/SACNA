(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    257027,       4676]
NotebookOptionsPosition[    253896,       4618]
NotebookOutlinePosition[    254341,       4635]
CellTagsIndexPosition[    254298,       4632]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Using the SACNA package - Calvin LES model", "Title",
 CellChangeTimes->{{3.8427089804948845`*^9, 3.8427090295265875`*^9}, {
  3.8427124704454412`*^9, 3.8427124835003734`*^9}, {3.8427125201800275`*^9, 
  3.842712524604207*^9}, {3.842712584012227*^9, 
  3.842712587756327*^9}},ExpressionUUID->"f14da9e3-cd3b-4f0b-a9f0-\
2cf4c418e796"],

Cell["\<\
The purpose of this document is to give a short tutorial for the SACNA \
package. 
Let\[CloseCurlyQuote]s start by bringing the package functions to this \
notebook. \
\>", "Text",
 CellChangeTimes->{{3.8427090940384088`*^9, 3.842709143198292*^9}, {
  3.84270917461474*^9, 3.842709175014347*^9}, {3.842709234782617*^9, 
  3.8427092854783845`*^9}, {3.842709323126561*^9, 3.8427094019120207`*^9}, {
  3.8427097349980364`*^9, 
  3.8427097355261126`*^9}},ExpressionUUID->"602b73d6-e6b7-4f08-864c-\
6a109a3d117e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Quiet", "[", 
   RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{" ", 
  RowBox[{
   RowBox[{"Quiet", "[", 
    RowBox[{"Remove", "[", "\"\<Global`*\>\"", "]"}], "]"}], 
   ";"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SetDirectory", "[", 
    RowBox[{"NotebookDirectory", "[", "]"}], "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Quiet", "[", 
  RowBox[{"Get", "[", "\"\<../SACNA.wl\>\"", "]"}], "]"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.829920780934763*^9, 3.829920833287795*^9}, {
   3.8299208636854086`*^9, 3.829920876961373*^9}, {3.829922063595199*^9, 
   3.8299220699542017`*^9}, {3.8299228854502554`*^9, 3.8299228919647746`*^9}, 
   3.8299231995739794`*^9, {3.8299232541125665`*^9, 3.8299232669128857`*^9}, {
   3.829925391036563*^9, 3.829925396478142*^9}, {3.8299255175481253`*^9, 
   3.829925518116885*^9}, {3.82992555759075*^9, 3.829925560670066*^9}, {
   3.840724447360667*^9, 3.8407244479747877`*^9}, {3.8427065329074345`*^9, 
   3.842706566196204*^9}, 3.842709417793969*^9, {3.8427096240014725`*^9, 
   3.8427096706682377`*^9}, 3.8427097141447287`*^9, {3.842709938742461*^9, 
   3.8427099438321295`*^9}, 3.842712780351097*^9},
 CellLabel->
  "In[140]:=",ExpressionUUID->"7de15c4f-cdca-4f45-a8e1-cc488242b23f"],

Cell["\<\
Now let\[CloseCurlyQuote]s input the reactions and rates lists of this model. \
If we input the rates list as an empty list, SACNA will assign rates by \
default. Reactions must be in terms of D-species, L-species, Z-species \
(achiral species), and the empty specie N1.\
\>", "Text",
 CellChangeTimes->{{3.8427097456059995`*^9, 3.842709857877953*^9}, {
  3.8427112324453096`*^9, 
  3.842711321629273*^9}},ExpressionUUID->"b017b4c6-5f91-434b-9965-\
0c6a9a34a1ec"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Calvin", "-", 
    RowBox[{"LES", " ", "model"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"reactions", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
      "\"\<L1->D1\>\"", ",", "\"\<D1->L1\>\"", ",", "\"\<L1->L2\>\"", ",", 
       "\"\<L2->L1\>\"", ",", "\"\<D1->D2\>\"", ",", "\"\<D2->D1\>\"", ",", 
       "\"\<L1+L2->2L2\>\"", ",", "\"\<2L2->L1+L2\>\"", ",", 
       "\"\<D1+D2->2D2\>\"", ",", "\"\<2D2->D1+D2\>\"", ",", 
       "\"\<L1+L2->L2+D2\>\"", ",", "\"\<L2+D2->L1+L2\>\"", ",", 
       "\"\<D1+D2->D2+L2\>\"", ",", "\"\<D2+L2->D1+D2\>\""}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"rates", "=", 
     RowBox[{"{", "}"}]}], ";"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.8299802087543697`*^9, 3.829980210527068*^9}, {
   3.8299802452946463`*^9, 3.8299802475258884`*^9}, 3.8300323485873623`*^9, {
   3.8300323930454693`*^9, 3.8300323975875793`*^9}, {3.8300324350051165`*^9, 
   3.8300324418441353`*^9}, {3.8323369366694775`*^9, 
   3.8323370468387628`*^9}, {3.8323370881981716`*^9, 
   3.8323371093764877`*^9}, {3.832338190731743*^9, 3.8323382153086376`*^9}, {
   3.832338285147352*^9, 3.8323383224186974`*^9}, {3.832338491223477*^9, 
   3.832338515498742*^9}, {3.83233856647456*^9, 3.832338629236281*^9}, {
   3.8323541640908356`*^9, 3.8323541744500914`*^9}, {3.8427098616239605`*^9, 
   3.842709885111328*^9}, {3.842712544794824*^9, 3.842712551332883*^9}},
 CellLabel->
  "In[144]:=",ExpressionUUID->"4aff2120-9760-4b40-93b4-726cb68aaa90"],

Cell[TextData[{
 "Now we can run the semialgebraic analysis of the model by using the ",
 Cell[BoxData[
 "RunSemiAlgebraicAnalysis"], "MCode",ExpressionUUID->
  "44b0ebc9-ae61-49d8-8504-00883738b73a"],
 " function. The first parameter corresponds to the reactions\
\[CloseCurlyQuote] list, the second parameter corresponds to the rates\
\[CloseCurlyQuote] list, and the last parameter corresponds to time in \
seconds (the Collins\[CloseCurlyQuote] algorithm may take so much time to \
find a solution). The function will ask for the Routh-Hurwitz condition \
number. Considering the first and last numbers will be faster, because this \
conditions are shorter than the others.  For this particular example we will \
be choose the first condition."
}], "Text",
 CellChangeTimes->{{3.8427099676939907`*^9, 3.8427100059258976`*^9}, {
  3.8427101192537117`*^9, 3.8427102665183506`*^9}, {3.8427103005748997`*^9, 
  3.842710465061907*^9}},ExpressionUUID->"185a94e5-ebf5-42dc-b449-\
2866cefbf384"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"time", "=", "60"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"cadSolutions", "=", 
    RowBox[{"RunSemiAlgebraicAnalysis", "[", 
     RowBox[{"reactions", ",", "rates", ",", "time"}], "]"}]}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.829924896228572*^9, 3.829924948156794*^9}, 
   3.8299251270983305`*^9, {3.8299251806157093`*^9, 3.8299252075494227`*^9}, {
   3.829925634381386*^9, 3.829925641493581*^9}, 3.8299257355361433`*^9, 
   3.8299262231689196`*^9, {3.8299263467902403`*^9, 3.8299263509659896`*^9}, {
   3.829926596348615*^9, 3.8299266009083385`*^9}, {3.829926747692322*^9, 
   3.8299267633781567`*^9}, {3.8299274292024574`*^9, 3.829927434721895*^9}, {
   3.8299275674929686`*^9, 3.829927568186384*^9}, {3.8299276038419466`*^9, 
   3.829927607041765*^9}, {3.8299314273027153`*^9, 3.82993143282679*^9}, {
   3.829931467432212*^9, 3.8299314820846653`*^9}, {3.829931535315168*^9, 
   3.829931599571806*^9}, 3.829932117315387*^9, 3.8299321652901945`*^9, 
   3.829941723804149*^9, {3.829980164454916*^9, 3.8299801667501907`*^9}, {
   3.8300323678168736`*^9, 3.8300323745906825`*^9}, 3.830032468888297*^9, 
   3.840724473751862*^9, 3.842707793002324*^9, {3.84270987565723*^9, 
   3.842709889782691*^9}},
 CellLabel->
  "In[146]:=",ExpressionUUID->"a3c6f401-14c6-4ff2-942f-f481510d0a40"],

Cell[BoxData[
 RowBox[{
  RowBox[{"D1", ">", "0"}], "&&", 
  RowBox[{"0", "<", "D2", "<", "D1"}], "&&", 
  RowBox[{"k1", ">", "0"}], "&&", 
  RowBox[{"k2", ">", "0"}], "&&", 
  RowBox[{"k3", ">", "0"}], "&&", 
  RowBox[{"k4", ">", 
   FractionBox[
    RowBox[{
     RowBox[{"2", " ", "k1"}], "+", "k2", "+", "k3"}], 
    RowBox[{"D1", "-", "D2"}]]}], "&&", 
  RowBox[{"0", "<", "k5", "<", 
   FractionBox[
    RowBox[{
     RowBox[{
      RowBox[{"-", "2"}], " ", "k1"}], "-", "k2", "-", "k3", "+", 
     RowBox[{"D1", " ", "k4"}], "-", 
     RowBox[{"D2", " ", "k4"}]}], 
    RowBox[{"2", " ", "D2"}]]}], "&&", 
  RowBox[{"0", "<", "k6", "<", 
   FractionBox[
    RowBox[{
     RowBox[{
      RowBox[{"-", "2"}], " ", "k1"}], "-", "k2", "-", "k3", "+", 
     RowBox[{"D1", " ", "k4"}], "-", 
     RowBox[{"D2", " ", "k4"}], "-", 
     RowBox[{"2", " ", "D2", " ", "k5"}]}], 
    RowBox[{"D1", "+", "D2"}]]}], "&&", 
  RowBox[{"k7", "\[Equal]", 
   FractionBox[
    RowBox[{
     RowBox[{"D1", " ", "k2"}], "-", 
     RowBox[{"D2", " ", "k3"}], "+", 
     RowBox[{"D1", " ", "D2", " ", "k4"}], "-", 
     RowBox[{
      SuperscriptBox["D2", "2"], " ", "k5"}], "+", 
     RowBox[{"D1", " ", "D2", " ", "k6"}]}], 
    SuperscriptBox["D2", "2"]]}]}]], "Output",
 CellChangeTimes->{
  3.8427077961327925`*^9, 3.842708026619934*^9, 3.8427082554088497`*^9, {
   3.842710271946938*^9, 3.842710322124141*^9}, 3.8427104715523586`*^9, 
   3.8427128026129646`*^9},
 CellLabel->
  "Out[147]=",ExpressionUUID->"c8ad9389-f6cd-4523-9147-2295520664a8"]
}, Open  ]],

Cell[TextData[{
 "As the algorithm found a solution, let\[CloseCurlyQuote]s find some \
particular solutions by using the ",
 Cell[BoxData[
 "FindInstance"], "MCode",ExpressionUUID->
  "5cb2cb71-0ef2-43a7-804c-1eb9cb5d36fb"],
 " command.  Note that the solution doesn\[CloseCurlyQuote]t contain an \
expression for the L-species. It\[CloseCurlyQuote]s because we are assuming \
the racemic condition."
}], "Text",
 CellChangeTimes->{{3.842710645653183*^9, 3.8427107090373435`*^9}, {
  3.8427108227193108`*^9, 3.842710841829531*^9}, {3.842710892917077*^9, 
  3.8427109526453695`*^9}},ExpressionUUID->"9027ee9e-8e30-48cb-9f7d-\
a99d8dfffa5b"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"numberOfSamples", "=", "10"}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{"feel", " ", "free", " ", "to", " ", "change"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"samplesList", "=", 
   RowBox[{"FindInstance", "[", 
    RowBox[{"cadSolutions", ",", 
     RowBox[{"DeleteCases", "[", 
      RowBox[{
       RowBox[{"DeleteDuplicates", "@", 
        RowBox[{"Cases", "[", 
         RowBox[{"cadSolutions", ",", "_Symbol", ",", "Infinity"}], "]"}]}], 
       ",", " ", 
       RowBox[{"Alternatives", "@@", 
        RowBox[{"{", 
         RowBox[{
         "GreaterEqual", ",", "Greater", ",", "Less", ",", "LessEqual"}], 
         "}"}]}]}], "]"}], ",", "numberOfSamples"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"sampleNumber", "=", "8"}], ";"}], "   ", 
  RowBox[{"(*", 
   RowBox[{"feel", " ", "free", " ", "to", " ", "change"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"samplesList", "[", 
  RowBox[{"[", "sampleNumber", "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.840724507394494*^9, 3.84072455111475*^9}, {
   3.8407250398693333`*^9, 3.8407250403346524`*^9}, {3.8407250768225856`*^9, 
   3.840725207479194*^9}, {3.840725662333973*^9, 3.8407256625833783`*^9}, {
   3.840725704152712*^9, 3.8407257062224274`*^9}, 3.842708082251777*^9, {
   3.8427082119922514`*^9, 3.842708226144125*^9}, {3.8427082669463587`*^9, 
   3.842708276002417*^9}, {3.8427105181855545`*^9, 3.8427106209749403`*^9}, {
   3.8427107252626486`*^9, 3.8427108124470725`*^9}, {3.8427108741740217`*^9, 
   3.842710884001808*^9}, {3.842711087729061*^9, 3.8427110881659307`*^9}},
 CellLabel->
  "In[148]:=",ExpressionUUID->"4f55b2f8-f8ac-442a-8467-2f344bd413af"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"D1", "\[Rule]", "769"}], ",", 
   RowBox[{"D2", "\[Rule]", "62"}], ",", 
   RowBox[{"k1", "\[Rule]", "24"}], ",", 
   RowBox[{"k2", "\[Rule]", "74"}], ",", 
   RowBox[{"k3", "\[Rule]", "63"}], ",", 
   RowBox[{"k4", "\[Rule]", "11"}], ",", 
   RowBox[{"k5", "\[Rule]", "29"}], ",", 
   RowBox[{"k6", "\[Rule]", 
    FractionBox["5", "11"]}], ",", 
   RowBox[{"k7", "\[Rule]", 
    FractionBox["1341048", "10571"]}]}], "}"}]], "Output",
 CellChangeTimes->{3.84271088748347*^9, 3.8427128027475634`*^9},
 CellLabel->
  "Out[151]=",ExpressionUUID->"9c2ff3cb-4c08-4bda-83f8-5a5f9816e362"]
}, Open  ]],

Cell[TextData[{
 "Now we are ready to using the SACNA\[CloseCurlyQuote]s system simulator \
with the  ",
 Cell[BoxData[
 "ReactionSystemSimulator"], "MCode",ExpressionUUID->
  "82254784-73a1-403a-a01d-ca05aaac2eb3"],
 " function"
}], "Text",
 CellChangeTimes->{{3.842710988453456*^9, 
  3.842711072565322*^9}},ExpressionUUID->"783a2c8e-d5ba-45de-9e16-\
1889345b6d79"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"simulationTimeMin", "=", "0"}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"simulationTimeMax", "=", "0.2"}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{"feel", " ", "free", " ", "to", " ", "change"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"graficss", "=", 
   RowBox[{"ReactionSystemSimulator", "[", 
    RowBox[{"reactions", ",", "rates", ",", " ", 
     RowBox[{"samplesList", "[", 
      RowBox[{"[", "sampleNumber", "]"}], "]"}], ",", "0.00001", ",", "t", 
     ",", "simulationTimeMin", ",", "simulationTimeMax"}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{
  3.8427108316645966`*^9, {3.8427110916691713`*^9, 3.8427110950940933`*^9}, {
   3.842711472086096*^9, 3.842711472181134*^9}},
 CellLabel->
  "In[152]:=",ExpressionUUID->"05a70f9b-cd41-46dd-931f-3e0ccf159a7f"],

Cell[CellGroupData[{

Cell[BoxData["\<\"Species Concentrations Graphic\"\>"], "Print",
 CellChangeTimes->{{3.842708230399178*^9, 3.8427082780593*^9}, 
   3.8427111089564266`*^9, 3.8427114743046613`*^9, 3.842712802838627*^9},
 CellLabel->
  "Durante la evaluaci\[OAcute]n de \
In[152]:=",ExpressionUUID->"a9b7e8c1-2a33-4602-b289-44aa77ad71fd"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0], 
          Thickness[Large]], 
         LineBox[CompressedData["
1:eJwUm2k4VV0UgJEoSWZSQgqlKFMKrSUqSoiKhCTzUETEl+695uG6V+Z5nud5
VoqkjImSJklIioRK5Dv98rzP2WfvtddeZ9/1/iBmed3AmomBgUGXlYHh39/M
6Qb3nqCDRy+LFDIxbAhGBya+1kpeToiPvsX8j5cEvcvpvKJwVn5g/T+uK//M
0LFDCl5QV1j+sWp2sdQd3gPwK1Nxwz/e7jKun7BVAZiMUzf+41WV7V7VO5Qh
IUJ/0z9+x3ouo09cFcTcbDb/4/efH1nd5EXAnpUt/7i/78MvJoFjMMCqyvOP
W2tWqRFbNYHRXlvgH5cnbRXbsf0EDHeZbf/H6RTFmqIdWuAxXrzzH0fYntU+
LHYKFiXT9/5jyhnntx3iOqD4wVHhH9+QD3E9J6ELmVlp+I8rqANMrrz6wHfp
hd4/LiSNdtfxnQXb9ROW/zjzxrfYv/wGIP/wvvc/TrResTguaAiBG+3i/3Gk
MZs0des5uHcqseUfh54WXBwQOg/PEge//GPfoxL3t26/AIy9pN2MBHsfVAix
EDYCpZrrzv/4xq5jhnk7jIFLwvzxP3YQ0Bf+JnIRHlK9DzERbMlmPqkgZgJQ
btr2j01WHSv+23kJIt2GXdcRbDjn9d9DcVMIaao6zUywzseg4xt3m0Fmt+Wl
9QRrvojZoi9hDr+9jEtZ/p3Xk6xXsZKXob/t5PkNBAu9G352jdcC3m3gtWYj
OPbleyXuGAvgqD37k51g7mcTSTV8V0A7uGAfJ8G0p18ZLsZegbV65/28BLO1
L1iv8FvCcfvf0lsJDmz58zQtzhIu8efbiBDMVMd0QEPwKrDs1N4nSfCd8o0x
E/FXoV868t0BgpcLOJdDtlpBz7WGJVWCPbIELu9PtIKjm5bYdQieT97R3i9k
DaItdu/NCb4Wu3uPe5I1WHUam3gQPE3fRxPYbgN5uxuzowi2CZH/0ZhsA8ky
G2TqCR7zPWJsLmwLgs9mWj8RbH5bvYUx1RYeH3yVsGNjML6+qbUzZ4cdLDN9
plgTbHxdL0grzQ50jgx/byF40O7CzBcRe6hbMlXbxxaM+pZmZ+np9mCg4t9Z
Q3D3JataOTEHkO8e076yKRi1zjtue5HhAHU6SdsOsQdju+4NstdORyjZ2put
vjkYUcvr0/YsR5jTP/w8nCMYm9XJp1rFnWCLoHOtNGcwKqsElV3NdoLOqnWq
stzBWK1A42Xd7QyH5C35K3iD8YBMjFdhjjPkKnt39gkEY7Fk8rszEtegdcxg
pXxbMEqJZWl8z70GjxKrGf1EgzFbqDA/WvI6HM7gv31HIhhFeSs2K+dfh5kt
i+ZT+4Oxl8W0wZnXBeLjJXt4DhHxrFd3ljJxAd/gaWF3jWAsYJYQ+5jmAidH
ppO/GRD1sW7TUMonF2DLZ/ssYxOM/kxzwcbSrpA8+17uu08wujIOqfK4ukLa
doaG+UQi3wyNcz21rvC55Wj3QAtRn2up2cErrqCSpbXh3UQwHv7rZ6xx7AaU
eJwMesgXghKrdux/g27At7WJF2raIci7cqa1vucGlIeY31i6E4KMf+Tc3Xjc
gEu2/lN3VQh++y0gJXPRDUK/uB97NB6Cb36tvJ5KdYO/r4VebuMMxSc/P9Cz
xt3gPMar1yqGYu1Sh4b5XneQLH4rnXMhFLMXi34KurhDtloISds9FCMXIoqe
17iDgMDuvkf0UCT9uHmZ9scdbAKTjr0uCEWT7/B4XdBNsHpwgeHa61Dk/Po8
9luKByguDh7wUQ7D/8b/KLZ33YI/jTt1w8fC0O7j6Oc7XF7Q8NL6EmUpDC+M
PUo5bOQFFRWDZ2XZqHhglL6+bMwL3sR0Pmk+QMWJ1+JDCb+9ITvgYEatNxUN
np92vy7pA+lfRDKGmcIRBw5I7XX2gbMsV7z6uMNx/zO+N+OVPmCk51lN3RmO
G/rea5gcvQPbY3+OmKqHY8tTN57j50lwiLF5xOp2OPJ+OHMx/AEZ2I7cXx8x
FY4m/J4q28bIcM+mkstsIRzTTqcLFzBRoI6N0XhtLRz31s5/aNegwKubU0vt
/DTEsDiHlUcUWIPrRWbHaBjY2qoTOkEBS/PMzrc6NOxa/CwjyOoLP5MSchWN
aHjBQvWHvJYvnG8wrXd2pKGj4of/HJ/6Akrt3cMSScNyBzbz39O+cHXyteHp
JBoupclj0CY/+PLfoKhDNg3JbIHMWTp+8Hd+1FSxloax7/eGj/T6wS/12W6W
YRo+DHFP1X7uD3c9YuNKeOm44X4K+eUPfxgXampL2kbHMwsdlta8AfBItvWV
1U46DptvlaScDwD2UiW3IFk6fpO/V1b/MgAGX/lXs2nRUcF+8u6JXwHguk2v
uPsMHb1SOd0HBQOhTVftgJ0hHZk3XlWeuxgINUHp/nvN6cT9yfpA8k0gfAwk
qfW70tGC52BWzUogqAtyVRl40DFHyyRAQzgI7k5VJxZ60/FAVbH2ZfMgaF42
MHnpS0ePqSHpr3eC4FD2TigMpGOT8Nrm/9KC4Mz72gLdUDqeCD47EDsaBBeK
lDpY7tKR2uJdvYsxGN54ujkJRNPx2XxWbKVYMDD4l938EUtHfqmeW3gsGGRm
Rl7FJ9DR1GzJpNcyGGZZe3TXJ9MxI1JEzdQvGJa+jKsppdJx4rGWyHRWMEya
RddLpdNx36or4632YFhlkrV/lUFHV7mkj+s/BcP5qLsUzSw6aol5nZ5jDoG7
f53rLbLpKMppVDWyKwSaCox2Hcyh48+/CtseaYYAV5D/hXKCe79y+5VZhQAZ
Nq4fJjjnzdx0gn8ITOeLvksn+HZXr4F/dgj4Mi7rMxFs2FjceK09BDb63j45
T6y3tyB058XxEHg3rtBjlUlHxni7UA3mUAjiGE4+TcQ7HHhifv+uUJidjQyL
SaFj+c1dJoKaoXD8W2z7/kQ6BlkxPWSyCoV1x/e1LcfQ0dxwdM9Xv1DIN9u+
+iaCjkrH7t19mRUKtQdlV4uJfG8+mPz7QVsoODLOjSj70XFcxPtK8cdQEBcq
yULi/Jo4jJ/ErguD0VuBh12v0zFyVfEgRTwMbn9TWDG1pKP9DE+Co0YYuJ8S
nnUxoCO+/s5w4WoYdOzacHf8KB0FnvbZoV8YsBytc8qQIOqvvqR/b1YYPKA1
FQtvoGNHXpgyX1sY5OnJzu38QMOUWPv0tbEw6Lwp+cqzlIbuASc3TDNRwbDd
eciK+J503He7DO6kQiOEHtjBRUPxq+uG7x2jwvvjolHWseG4fPYDFFhS4dn2
GA6fOSo+w/t5Ub5UmLg+4N4rQMV82ZQtdzKpsKdKNJ6HOwxJO/7ztHtIBQWO
6QKzPyF4YfPF9wZjVKiNvdizYzUY968onVRjCodvzl6HzioEI/MX3jLJneEw
/iaSzS07CN+8mufnPhYOEVtPunOoB2FVZ/+dlSvhMPiz6Crvn0AMrSudmKCE
Q9vOkLm5jkC0zKXqPssIh1eHDXLkUgLxcIxDbdODcJjZG3DAzSsQOf21duR+
CIcw0yUJ+YuBOHlDIjCCkQa87orSHCqBeO8K8zdvMRr8pyk+d3RHIDpBa4ve
FRqYJbStE54MwCfLh8x+j9LgykT9va93AjD9M9+jjwx00PuUw/zWOgBvDf/Y
1ytKh29dOXckzwSgRG3ZSqYFHVJXhJfatwegr6tkss4oHYI8fBJ/3PfHHe5h
X/uuR4CnY3D2X15/5O8euCJCiYD0/sqMw2t+uHmX0ItrkRGwVMbf2PHZD1ee
59/bXBMBI4KtcgP3/XBEvoN+ejkCfkVljlOv++FA2GbmpE13QY/pOeMhUz98
8vHcrentd2E+L3lqj7Yf1kd9tCC+NnD5tH/sk7gfxvxgkHvsfxcqnMNDE9/4
IvW0Vi5/7F0wsB19cK3LF/2z6EI2eXdBn8H0h1+jL94w3LFu/dO7sBquN+Cc
4Iv6VSqDx7ZEwq4fzv2SJr7I7ubhcS8hEqp5+MyCJijI3NUyvbkoEkJVNt7a
9IqCf3auv2zWHAk8F6UC2rsoOD0QdXLlXSTYDDCsDVRQsFOuQvDIrijIZEye
1SdTsDX0FzVEMQpC6SQmJ3cK1o0B46sTUSD8Zsq1zo6CuZG9nz3toyBeQNDk
7VkK+s1/aawpjYJNrmcLjCQo6H1KXnZ9axQYdit+nNxGwRuZ3lnnnkXB8WLL
imwuCloYbKT++BEFfYUBlzNXyXi0UsLs4OFoENt39VfmSzIuu15ZK26LhvsT
mkccosj4ald73eDzaNAUcOPZTiVj/UsJl5WP0cBkKCM450/Gm2ozo6eZYyDu
46H3qx5knNvg+XBaMwa+NJzzKzIlY1/TK2/u8zHQr7LcaX+BjKXXVOWPWMdA
XSbfNy19MjoNMmaHBMRA/gtJC3tNMk6mUQOkOmLgw343olcjY4fBrJr+ixiw
TK/snpciY/Z6gyXPiRhQ9DwbMyRORktHAdvHLLGgEfKs/c9WMqrv8BaZ5Y+F
3JFNe4CPjKLP3rzkl4yFqKch7ZmcZHynlKllczIWcuxDHj1lJWPLZ2ZGmlEs
xM5Hn6SvI2Nysm1DjW0sPGnydJ/6S8KLTPv3rg+OBUavoHqYJeFgT92m7M5Y
YA7deZr5OQmryELtXcOx0GAcgcndJIyU97n9YyoWuEKKJjw7SKiXcOzrsY1x
UHxII2+lkYQyOjk5Dlvj4OyC1ba8GhKyr7GaR+6Jg1Tr30tx5SR8atXT+0E7
Dhb9axz080hYIHAgaKNJHJRlZv3ZmkXC4KeRcNAhDtQPaEzvTyOhrc/iT2Pv
OGD+/fRGeBIJTxwwLieHxoF5wP3Zw/Ek3P2x0S4/MQ4u7rgxohBDQuZYYbH+
wjg4tG5/DymShGNa5Fc/G+NgSN8ldHsECR/8Gbsr0kVwRctfdhoJ00uPnzr5
Og7osfoahlQS3rmSz3T9SxxE23hlfw8loRnvpqbYP3GwP8g6ZzqEhKqPnd3u
bYoHrkltVnWCt3n3S09si4f9jou9P4NJuLxPfnzzvnhgoW7Q5Saev3ofk6yo
Gg+y6xWlowmuj/x1zkwnHnRc7zlQiPnjjl/aHGAaDzmXD3m/CyOhx6+WR8VO
8VB+ZxnLw0l4rkj0zuDteJg8lia9QiehvLmf0go1Hj77dEAnsT9urolv4inx
8PTviwPbYkk416aVd7okHj4YLXqsJJCwz6PosltLPBT/vOzsnkrC0j0cgkk9
8cDvIONGJfItqPaEU/h9PCTE1GUMFJDQT99/Y9oc8X6AsOMccV7frgKTGFMC
PIhyV/tZT0Jjz+XlTJ4EGF1oEP/zgIRtoTU/du1OAB65vxo8RH3IpLrM5Col
gPPWQR+TlySMr5D+JKWVAJ+0ghXmPpJw3aOJt4UXE6A24bHa7+8kvDac8WKf
YwIEbi6k9jOQcfiLaV/p7QT4umDyIHwjGTXWBDoP0BLgCytJ0ZCH+L64n7dW
phHzPXmmcWIHGQUlaA0KFQnAbV+rF72XjH6HtStrHybAcFP6krsyGb/pMBcp
DybAMsV6eZ8WGY0t7mc1fkqAU9VPebhNyPjQzTtZ9WcCXPAx4Y64Rsb9QYox
9zYkQsQXvxrZQDLGJ86Fo1AiNOgG3UvLICNTaVHgQ+lE0InwyW99QEbnBzYk
TbVEiC5m5K2aJOIfFLvVoZsIbzlOmUzyUvDY1BsXLYtE+HN41lLqNAVL/sTZ
P3VNhIN4Jj+CSkHBLYaWOn6JYK4cTYLXFPTdyXGpNzoRCpUGgm4p++JXxSeG
+rmJcDXk78/GTF801vbXGahLBEF1q13cPH740BSOn3uSCJvrnZprbvvhfpdl
tRcjieC6bBK49NwP4/1qlIxnEon+yeZ0oYA/MsW5yI6sJkLfhsX94nr+6FQo
LWW6JQkqdY6/303xx5ctE6LvRJNAyk7l6IdyfyweN+Ue00gC6o+vN7g3B6CR
nPbi55AkSE5km6U1B2Bxj1jTb75kCHzmOWu1GogCH95U/SeZDF9YHkVN7QxC
34W44lXlZHhk/sDzw8kgNNrGkcpomgxSD9hvqUYEIZP9MnljZjJsepj54oVQ
MBoxPz+xVSYFNqT+KL22NQRD3e18tSEFWj+/bG9RCsF746stXvop8GB9wcFc
wxDc9UhKceRGCnA0e1hpU0NwPuCOeFJdCuzcqvOO6XcI0lj3Mgirp4Le36jX
ng9C8aHnfZUzBqmg9WNHJOurUFycPOfpczUVCk+v7j4xF4qmnaRvbwNSIcXa
/NKgcBjuDRl6k/o0FX4XOC8Z3AzDDjZKg+i5NLBef2BvHT8Vl735F/Wt00B6
5NPJsj1U3P+l6ADFIw189k/WWqtSMbrrRd6H+DTImYp7wHmFipbUfbGZb9Ng
tDBX5mYeFddYnA5HyqfDFm7jToE94Sh4X8lor2o6iJ4vv3ZGORzlPBlvPtRM
h19nPwTrnAxHm8nY8vnz6WBTaGxdYBWOPY8fSBreSoerM2piX5PDMSlYgJ+3
JR3Ws3LbbmamodS32fOCj9JBxaLg+6ktNKw17IzZ3pMOW+Mt2i4L0bB/hxff
7rfp4F8668V5gIYsNSO8SqvpYLKJ50rsRRpGC1WdO7I+Azi2g2XsVRqKkcOi
j27OAKa6kanrzjRUPa3Ke1I4A9p4cj3LyTS88SGFx1gtA85kYY5zDg0ZTnoY
mh7PgLANtjNA9KfhxbpRFmcyIOCIldFXwtfyPde47c0yIPKOoPzIYxq+23yF
29snA+xUdEPWJmmofWQXV3JLBpSwO54MEaPji7QV/fRHGcD6OrhUUIqOVuuH
IrJ7MkAuZ/KHnwwd7/QHcJa8zQAz5lOpX4/Qsdpmcsu91QwQOXUheAPRbx/r
vq/3cH0mVDUWbL9hRMe+g/H0js2ZsMT8obfGlI7TK1pb+oQzQdxj78ITG8Jf
ogo5RtUyYXDP7p0CXnQs/eWrO348ExT8lto0fOioYn6JNnWGeN+4uP04hY4X
9rBzfDfLhNJBHaaOYMIPaONnFq0zgUlVhfUYlfClhebw386ZsMn67zyNTvja
fefNTHcy4Xy0kncM4R9Cu0+cYQnMhMj1Himn4+mYF7ojnI2WCY1OFwu6CF9R
mFvq5ogl4suzOc1D+MzD833sPKmZMNTb8FEkjY56TXk6ArmZMPnlgdc3wn/e
iJKp20ozgXf6efF/hB85BBp3i9RmAtufm5lthD/9/HKAfde9TBAJ7fz+gPC1
pxRFp6GOTDAcD4y4TfhWqsCR7sC+TAhrovI9J9i15Og+5eFMcMxay2smWFND
g/p5NBMWN3P1yhAs+OrkTOLnTBASamQTJub7ck1HR2c+E1gKL5ndIta/x3y2
eHU5E0StgqNliPgiE8+zl63LArX4qZt7iP1YHzBxsmDPgi0ygcFnCD9V7jDv
5uLLgvkuffItwmfZTa/uaxPOgmqGwLU7NDq+/25LdZfIgi+DT+/sCaJjZZDT
zG7ZLOgIuj0oe4eOgcKuOi8PZYG01+FmOTc6Xqy6WRyMWXCfKgeV1oTPanuz
H9HOgg8GVw6vnaMjw/s7Tl/OEuOPyvLvRjo+d/frTjbJgqSi8k8du+mYyxa8
T/dqFkwNyYhMraOjdzqVuuaYBceuH0+MfknDM0p3Z8rdsyB9TjbcKJmGot0x
OpY+WcB3dbrp5mkaLlxJLOYJzAKB98FBW16H4+OfqeyPaFngfi2Pynk0HBPD
s5w84rLgxvkWnhZbKl4Tz++WTM8CVqcFhfNGYajeULzvVX4WnOwuj9OWCkVe
vQpqaEUWcI3rDalzhODUeM2MSmMWlFHCprMOBmOTd6PO14dZoND0+dL++CCk
cd4vTu3KAuE9L++FHwwi/KqNXX8wC2wlzS4OTweikmqnE+PbLLA5e2TOoTYQ
Nw50d1d+ygLq4ENJPmogvrF9ts/qWxbop/z6fcY2EMtXh6h8P7PgoU7CqYLj
gegXNTLTsZYFr16V5Y7uDiS+h/c6tzZkQxj38WIt1kBcPTfF/nprNnBL1p52
7A7A/ukZJ+rObLhZ4XXtdVkAZpO/d6tJZ8O47fqszqgAPFW8TE1XzQZ1F7X7
y6YBGL9u82aby9nwNGGm1GCB+P1K4HIWsMsGLz71DeKv/RFk+Xs6XbLBZTZr
zPChP06YiIRL+2aDn9BIXv9df5SvPLj5e3Y2OGWqDmxS9Mdeiwubb09nQ4Fb
8UuDMD/ky7ajJ8xnA+8NpZCeW35oOunNVbecDQqvk1JDbPxw2jmNb54tB/ie
ZV19eMwPWf6bEraTzoFlnTiLHX99EWK8Zc455YCykmhSL8kXA4ep5a7uOSA+
/TJu1cUXe7elydFv58DY1gupVyx90TSzTekpNQeaVsZPdBz3xVtl7IAlOaAd
1Zoxx+GL5U9S9fZ9y4F+qy3t2oUU/Mle8Ux7KQekD+aw+qVS8Kh+m6Ht3xwg
o7fnVCQFu19MGmVy5ELBqX0sSrcpOPXxgIWgbC6w8p2M6dOnoKykxpjioVz4
LMzzzuwEBT0czlsZQi4cO0Ga4lUl/O67lx1NLxfKGHsa/0hSUPTvQxdml1zw
7f+7M5ORgrbqQ/Nit3LhgvZvRadfRD/mP+kO5FzgXXM9ZDpLRtVN7F7eEbmw
YUH2cfFbot8SPE+ZK8+FdbrO71mbyXhXbvLum++50PLgvL0jiRifbaP47Hcu
7L773j72Fhmn+CaGHzHmwSdZypYxV8Lffo+LlHHlQU/brdwRKzLO3B8roRzM
A+dvPJvO6BD92UHLsx6H82CsjmO/1wmiX8z6sOCgngeOVxSm25GMiYGjKufO
5oHYQORooyIZtc68eyLhmgcXo34yiYiRceGemfM2rzwY7jshd2I7GdMOvOXk
pOSB4tTfZKoAGZd43hj9jsiD7M1GBz05yJgZcOnP1/g8YLh10mEbGxnP/BxJ
HUvPg7BdVavv1hP+NvLqU1d5HpCtAlaD/5BQX+diSGt9HrDcZznc84OEf1qG
99W05sGub0pf9GdIaJDx0i21Pw8OqFW+F3hHwr/cRgJRw3mQNcry/BLRPxf4
v2gMGs0D/lm39NF+EjLYDTG6zuWBBfyqKG0nYfGrcznWv/Lgx7te9t/3SGh0
elDLhCEfZsxNXQIbSMjUYjijuyEfdj2OoxtVE/2/zHO6Bmc+ON5YknEuI6FJ
uoG8smA+bB99uKuzkITruQde7BPNh5X1Tqb2uSQ0XewX5j+QD+0LUaW+hD9s
sNV/wKacD6lJOfyriYQfDvdZrUE+7K7+ZfYwjoTmp/Q2LJzMh+flbnPPo0nI
1txbNKWXD/JZ2mbyhK/U7tfVe2uUD6NDvsZjhM9cSeuZf3Y5H/4uczePEb7D
znUmtsM2Hx6dp1GVCB+r9+0+3HQ9H7hF3jCMEr5ktXD6bZlnPvh1Wfp9IHxq
i00XOZuUDyR+3Xo1ghtfntqVEJQPbbEHAv75mI3208fh9Hx4oZ0s8M/HuJu0
HX3j8mFPjsBMBMEt+55weKYR6718/MKTmN8uVavSMS8frmzU4u4ifIyXs/O8
RVk+1D3sO0kn4mulnPx9ri4fwk9dSX1CxO/4oyNZ+34+SL9/2v3PN/mtT+DR
x/mQUTW+p57w0YcvHn2U68sn+kefdi/Cx65pHQ+SfJkPaz+9fbpTSLi1sX3v
9vf5wO/ybXdDJgnbpTV7OSfz4foKR6Z2PgldUtpc18/mg7dHCn9IKQkt4bpi
3s988PA/KbS7loSGH4R+azEUAFuiuFY5cf6afh3N0xsK4PHWg43QSUKl3TfI
VK4CyOa6MPxlgISSj4U1ZYQKoDMP1j8j6k3Q/glr/84C2Ook4chJ1CPbpptd
rtIFcHeSxPpsmajXYlE6j0IBnJ3r8E4n6ntGt9ugRrUAvEer7nYR38O7OU9+
o+MFIJH6pIptKxn7IsVHfp0pgGaG3TkBu8jYqtCXknihAEw22/c7HSRj5Qvv
K6qXC0B+/7nkP8StlXVLYvc72wIIsb8S+Z8+meg3B6ZILgXQ/0TVR+sqGQOb
fYrFvArgZcDzL0PE/XDLfI9LG6UAjr5u8Ki9S0Z7hiF561AiPs39RjmlZDTJ
JP9kiSqAEdK0R2Q/GXU09zXlJxWAT8JabTlxXx2deHnnVHYB9CR3VflJEfdh
sN+xmeICOGR3LWX8CnHf7ZVlodUUwH7tU/mTuRTk7h55InuvAKLFnK2v/Sbu
x2uB4c86CuBq25nuDSa+uLhF7qxbXwHUWydE9T3yxYmKt7x8wwVww4PSxKPg
h8OGIcO1o8R+5t781xPnh08WFZKNPxdAgNuc3ZYpP2yMG728/L0AWi35hHok
CN86TBVPXi6ApVF1o4JL/pjy+tCk2rpCWLPQeKdB9Ueaz8fC95sKQU9f6uW6
Jn8ki9CvUXgLwVcsvq9qyh8tr04stu8uhPjc+OUG9QCU+hLNrKNVCNIJ5tjy
JQCrl7+LmYQXQq0ol5+0eBDmJqd8+hNTCK9C+QPSCT+LO6pdkJJaCCTGvukI
xyD09k0/8KGsEHYWXX88UxGEwKYHdgOFoCRxQrNbORifbi029RAogvKYZ97v
D4SgrL31MX+RIjjx64HqZp0QjK7fIRUpWQTse/+8/2ATguZGd3+UHCqC7jjH
p/5JIfgj2iP0k1ERNAYPnH3OEIrbOdXrz8UXgaHBS86I5lCkXF5OsUwvgmuq
Lvx1A6E4UVrl55JfBK7ffaJjp0Kx/IyEHrW+CHyp7qW+PGGoGbZpom24CJ6Y
zuyTsglDZ5YXPPJbi8FuiePzlbUwHDhP/41ixbDB1zHMg4uKyjla73X3FEP2
Lt0IfXEqMmk2FTocLobankxvoxNUjKWkq2deLIZwnrC9bSFUvLficJ0rsRi+
CMrkJLKEo7jOrvMimcXgPLM1T58vHIOT3h7ZX1gMIewHwofEw9HgiD6LdmMx
LNLb1uliOE56KqaQR4rh2lNcYfEMR84fa09nhUpA+vkK4wrRDzbd+NRfKF4C
7kFhTc+nCN+bf/rCel8JsEfLDHkthmPz95ix12olICfhNC3HQUO7OenlxxYl
EKa3Tt5KjYY8LlwMfvYlMEjlTGzUouG92aX1R2+UQHvcF/qYIQ15Zx9wVfuV
wN3jweR8exq2fjXak55bAro/pnfwRdHQ0VlN9lJZCQxpTjYzpNCQ/+tORf76
EjjU2ny0NZeGTjNfkfqkBK76+z9raqCh4Bc/41szJVAmxONb+JaGbQ725vKL
JSDeUpN3ZIKG16Z1rb6tlsCz1AWW9G80bP+81cVqSyk4NfM8mP5LQ5epsiB9
uVL48J/AOoowHbfZxYRvUikFsk/hUtMuOnZMekd1aJTCJ325Hd3SdNw+eTxN
9XwprFH0vBwP0/GxjXTOT7NSoP9ar7sMdLwxwVlUaVMKjJSSWLMTdOz89LpW
6lYpXNxgfSad8D836wfNH8mlRH+TxkAypuOOT7kPU0NKQbOpuvSAOR3dx117
eZNKgWXg0hs2e8L/PrJOMNwrBWGmnhNBt+nYZfn1S1NHKWxTHVmcJtPRY2zg
u0dfKTzTYuPeFkBHMcv6nweHS+Htps3H+EPo2P0hZXVmtBQOGuUzvCb8z/OK
37r8z6XwWnt3nG0EHXd+sNt4db4UVhOV+Ruj6Nhjobtlx59SeNoocaY/lo63
RuX5Xq0rA4avp1vzCB8St9i6LZq9DPbfY09RS6Zj7/u/onp8ZbC18mIRLZWO
XpfHJdh2lAHHoeOqcYRf7Xr/ZN8jiTIgmXDyGRL+1WdeJkeWLYOrJmHnWwj/
834XrayiXAaHzKWN+glfkzD3PrqEZTB7gBwYQPjcs7eXNSu0y0BJec/BIYJH
wyodNQzKQCvx2cc6gucOr48aMikD+addb3YTvDZp1Gh7tQyMWwZYeYj5OGIL
P/x2LINzVclfXIj1d2iubqC6l0HKJzOWf/63f17vwA6fMmj+8oZRkfA/1fRM
o/KAMvixYBbpSOxXR3fxzjFaGbQO8TNVEP5nunIydzCWeL9lw9Y3hP85Fib2
2KSVAbfyJa16wv+8jb8u/Morg5sGUhGMJDqGsuD2sPIysN75Ps3cnY6J1ZEa
wg1lUJd8XNbYlo4Flp8cyh6UQSddf/W0ER3rOZUj1Z+WQRCP05aLGkT93Att
eD5QBq8kDo3jXjoOO70dtX5dBqfbinkPsdFxUujAhl8fy8B53+3+6FEaLnX6
yobOlAFV9n76lQIasngOXdi+WAYqg1MPss1pyLdb6k7pKnE+rTuH7/4Mx0j7
FgPRdeUwLJcrtd+O8L9WGxt71nJ4vY4nnJxFxUwBTu/KTeUg6q7O5pYdhoXX
GsL/bCmHob0nxM77hGLlI8sMTd5ycI7OOjh7KQQbt7PXhAuWg/J2DbX114Lx
gVtN54vt5SDk0y/C3haEnU/N34iIlYPIwEhwkl4Q9ottmLPbXQ7/dd5cmGMI
wuFbFesq95TDHr/btmuPA3G0z0Tgz/5yIl5ggaRAnJJgltaUK4drXKf84GYg
zvmUHA1XKgc5co/8JsNAXJNmsBGBcmi9qYA3eANxR3BOtYZ+OfQO8/TdzghA
ife6ndRz5fAjb9p8Y2AAyij9ej1kXA77rZT2MDsGoNr4qXV2V8phSwiDjYJS
AJri3FnqjXIwl77cfuSZP1rFJVgPeZQDz+J3t8/1hP99O+a1479yaLtY1PEj
3R//S45JL/crB5J8hh3fDX9M/HVkdjC6HPo+P9SxFvTHl+UBVOG6cvg6X9Yg
4O6H8e8UK7Y3lQNR/H/2WPqhCfvE0Lb75dBYop7ore+H72xPiAg9LoeEqZmE
5/v9cHwHayX/y3LYWLT1gu4XX5yjBr/c8rMcfJepv1oJv6tsVF7h+FMOHrYs
uWaE37lNTYlyrJXDuTGSzP5zvrikoe3AzloBES+UTCyVfXF1eePqBoEKSPl8
8RfvOl9ksw/byXSoAt63m4SJZxA+F6tyklGlAka556OKYigY3v7FkQEqwEZ8
TMQ8lIKcojo1f09UgIrD9AZ1dwryv2TX+nOhAuhDZyLmtSk4zNzitGxSAYXd
h/nagIIJcs53f5tXwCGRbZONihTcTusZ+WlTAZO3zzKK7KSg+HGa84JHBbzO
Y/MoWyHj+I2jkT+8K+BnampD+Q8y5qZ/q52/UwG9MscyXkyTce+KLsP3wAo4
cjfgAP0VGQ9UbYn6GlsBFTLetKJ6wu/E7tZP1FbARpcQMRMfMoraGjmrNhH7
ffL1v4WbZFxfIrwz8j7B/XJBNdfI2KtcGKbWWQExK5vHCi3IaKHfZh79qgK4
qORmM8LvNGNDeKbfVkB/ymKSFOF3e97odcJYBQhsVJ4UPELGeds3B79MV0B8
jMJVexky+pMWmY+tVED4w3qNTkEy2j1qaohjqATr48pNzTyEv23yvfaVuRL+
u1l99gXRz/LHcQzHb66EZK2TnF5Ev7v8ZpD6jasSblwjWzAxkvH9ziR1Tf5K
cPxDVrf8TcL8Usmi2R2VsMcin31tioTUha+Xj4tXwrkChi3wgYSuR6p5kyQr
4XZFvmXXKxIe6cA7Jw5UwtcfCUJdXSTcwc4qn6xQCVZ/tjTCIxKuM+iZ/K5c
CW+Z+8TX3Sdh99uLZ1PUK+EE7C/zqiJhubgoy4/jlRCg71svQ/hAjP1Eo9ap
SrD/8NZCqYCE3mXF11N1K+HkXMCHu9mEjy3e2LVgUAmdX35HHksn4TGVw6+0
jSqh663Ad+1kwgcoa+Fplyohiq8mpSCe8K/Hj44tXq4E3cZG66uEv8yxU3+e
sqqEVdZzx7wIvxk0MChOt6uEyWtapl8J/2mIF7yy5FQJp19cFXhI+FHqu3d8
Oq6VUGTximeZ8CffXTlPM25WwiaJeMV4wq9sHBxJP70qQaiFrTiN8K/T5QcV
ztwh8rlmtMxD8IGln1OZvpXQ2mLD9JvwN17Veym/AivhUGfhFkPi+S+Kv4Fu
WCW8ejf0SYKY7+3jU6zZdCL/qnK9XsR6DzdzNf+OqoSJhMsFZ4l4cg1fuujF
V0LVzgTWGiLe0ISU3TnJxP5nitWKiP1cf391ZDm9Es7nvfdTjSXhud176fo5
lXA/rlvgBuG3yo5zGrkFlcBOHb56IY2E2ytqf/0pqQS36KWDi0R+GX/eLjlb
WQmLJPZPl4pIOKGqYZlXWwnmop+bEipJ+NR3o8BqYyWMHdKRbm0kYVlnX5fB
/Uo4ui5I42MbCaM5Ysn5bcT5JHXICPWS8NY5U8W/j4l62Gs3QCLqxSxx57Rh
dyV08FwNl58g4UrtbNnlfiLfviUepj9ImPi8+abjYCUkeF97vMhARuW5EBXP
4UrYtcC1Yf1GMr5gN2L0e0PU488dJgtcZHTfs+sxbbQShjOKike3kZHnxHdq
4jhR/3sq0mYkCD+zvGeQO0XkW3d0Wl2ejPqkMMHKmUoIPZ0lw6NOxm9Jxu9a
5iqhBdu0UwlfC6/fnf1koRI0I297yFqScd/QvP3Qr0p4WGp3arcHGZ9+vy/7
YaUSQmqOLS5Sie+PI3xxhqEKxtK7VxXzyMgibdL0i7kKZg+ROtIfkTH7pCSF
eWMVqB9PT9v5mYwaVgsnODdXAVy4ov+Rm4Jj5Afs27mqQNrPWO6MJgXJKbQB
Sb4qON+JRSwkCu5ovBQvv7UKGDV/OHW0U7D5hZQ5CFfBasqK7nN+XzT5sSh+
WqwKuI+87Pvs7ou/t7R9vrC7ClyVpB7feO2L8fsiyiz3VEGjTIGI2DE/VNI2
u3ltfxW0xl0XZU/1w0HrvSreB6vgsRjHrzDC39x8fzIEKlaB5JHV+Sxxf+RO
a++4e7gK+LV7f9Sc98fyprvUFLUqUFmIcsz380fdYXODAvUq+Cg16/+gzB9n
FqQFa45Xwb2/QVUDI/64R6Yjq/tMFUzSq42fyARg56ko++GzVfBM4cLf50YB
aGNrITt+vgrGx5wStMgBmJm+3PjHrAoOeVS0kvsCcDuP7MDea1UQW7pQS7YN
xC2/4hhCaFXwIeuAdBspCEt5rTuiI6vgqKisYEN6EOoclKOmx1bBr4ebdOBB
EAY7dAvUp1ZBem8FdR1jMDK9ZZCdLCX4t9JQwn/BuPjA3ux4XxVkdjEsnjMP
wdolnaq851UQ96hv0/H/QvCW9IGNbMNVcH+3vHhvXAguRy9V945WgWd5Q3ZF
Xwgy2PmxG88T+/PmFp86EopsHClNDnzV8HofY+UphjDsPkbm6tlaDWGKVds8
BcIw3POqreyOahgbei5hIBOGnB/28CxIVEOTWEOd4KUw5KuudfBRroaySLXW
9RVhKGrSvzXiUjXMXNVSOqpHxTFa1fX5y9WgO67B1X+FilltsY/OWVUD9fo6
TlF3KkrsN3Pd6lwN9TkHy1bjqCjNMN2ZeacaFO7orH/0hopKuetu1WRUg/bZ
nz7il8Lx58hEj0BuNbhv3hQ1ax+O9VueinsXVkM21f2V/61wVPGK6DtaVQ3e
Abxqm2PCEXWEJTvbq4GtKMM9uyscT88rvRiZrIaGzZ/MTGRpePRef7PUTDVE
7+xqaD1CQ7lQhyyPuWqi3+qj/D5OQ6GdqS7cv6uBbym8/OMlGk6dXb/pFFsN
zBk91skKoOEb4bTvcRw1sHuj2sccOg37PisPf+KugcVE4+M+CTSspTjlULbV
gF7GgklRMQ39K55Dw74acEl38WF7RsNbPs4SrAdrwEYv7kjDK8L/tFk3n1es
gY+jeOToGA0NPhwZmVOrgfZ8A4eueRqKcmW6S+nVAPnYN90FLjryvlW55GFY
A1tP0dYubKUja8GQertRDdRRNh2KEKXjN9y4xcKiBu4JvvgYIEPHZheXgjjX
GvCT/czqrUXHclW2iE83ifl9r3yj6tIxa0O2h7x3DdCayG3u54j+Pf2lRp9v
DYgJ/op7cJmOd5xc9woH1UCH56uM3dZ0dFXexOUYVgNr5/KLTB3oaNx/9B1L
dA38yk1lVyf6fZ3k4fZz8TXwdMH6+cwtOoLdjaLMZGJ/R6vc7HwI32HIvXU0
h9h/8NLcU8LfhLrhMrWgBkoqGPTKCH/jiH91fKSkBpx3tZDMw+m4KLuZx6OW
WE9v4w1+wkem/uT+bmsk1vt5SnZbHB3fPMZRrvs1oEKTzRkj/KU/aqTjclsN
dLVR+B0IX2u/7F5S8phYX4XXupTwtXppjug/XTVQb3+esZjwoaKfed7a/TXA
SWN9YU74Umqb+pW4QWJ80WvZh4SvRdJfn/w0XAObw1TT//la4KWbMvJva2Dn
a++XfoR/eUlu4aN8qAHLDPLNQYKdfuT/6f1UA8/SyP0NBFvcPza2fboGON7I
Fe0h+FzYm06Hb8R6aUcGBYj5Thp5lNXP18CL2fbCm8T6R8Q5Y1l+EvXyXMvn
IBGfzGzB7XN/asChv6Pyn6+9uXvK3XitBk5/j1YrJ/YbovDF0XRdLeyd2rn/
YgwdlV6GXbVgrQU383jrLYTvjnvtu2S1qRY0+UItCoj83t3eY2C3pRbyFDPs
5yl0PHrf+ZQTTy0MUxdrc4nzmrnCccxFgOBsmyFnZzomMJcddt9WC9vKKxIG
iHo4kad38JZILXDl3t1zSI+OC9pzUrfFa+GDmgBf2xE6ZsxEiJIla2G+m1FE
S4yOuvSDgv7StfCApdRRkJGOKwcHtgTL1kL/1t/eHS9pWDB4g5UqXwup+ice
t2fQ8IInzxr9UC1s4Wx5/e4iDZmFqpeiVGpBPE/hStqvcKxsPvctDmph9r+2
6wLu4Xj58uKnJI1asPfZ/c7tARXZmWLfpp2shZlDu5N4X4dhY7bSUNbpWsjt
UdT51BWKtidfdufp1UL0EfvO5poQ5J32bC8yrAWLOC8d8YfB+JAq2FxmVAtM
9tuY11iD8bpsQ1XVpVrQO1GqtSEgCLcPXCyqu0zE16gS2bI3CJ+6L2c2Xa2F
dw6bT3tOB6KnQFLifdtaOHir+XVJQyDuIsa1OdaCRKnuwtDdQBwwfRPy+Hot
sDFsSRC/HoiktduULrdaUOCLXHdTLxBHNO+5PP+vFmI6N+vPEz4XPGlu95JU
C+E96/O2/Q5AxdC1y6/9aoHyyPfz+NsAjOhDvY9hxPuKoZ9n8wPwuEnb/h9J
teDy2fNvl0YAll/vnOZuJp7v0Xb8EuKP5tz2Y/yttSCM3/m3ufvjppqNI0Lt
tcDuKHsnztwfbZZPPdnZXQu+C6UsNxT8cVtAT57cm1oQYQkqoH/0w8DEASuD
lVqYMi0JCNf1wwvnQ2aKGepA/tZPtjgVP5TkRHfW9XVwO3LWdkrKDzsDSvya
N9eBu3pfrDmzH250Dc6UEKmD8vN66HPPF0ekYS9FvA6cT/d+LSjxxcKJxYrX
knUQGO3Ty5/ii6dMrz6IOFAH3DWxzSW3fZF68ujosnodKKkcVW846oumTIu2
50/UwdXoxKv9sr64r6VotuxUHRTUbjkrJuaLPXJb16wM6yB16kOBM7MvcuxY
EO6zqgNHfjXelB4K3l0ouJQVVAdGZLu4TnsKWpZZfFwNq4M3PWPv95tTUM5B
wNE4og6oEfXCbQYUHHjv7705oQ58five/k+VgrxdlxM8C+ug+f1yID/RL40H
8IsNlNZB+8gJiW+sFKzGnvx9VXXw0GmGc36VjOdrj9R/aKqDyPWP9/kQPheb
wffydE8dcDwq+BhD9GM2pt3muc/q4MSX0f2Pmsl4SMBvguFFHbTWc74Sribj
MHVuseZdHZh18PCdyiLj1ltdvKJzdaCh5CYc6EfGaTnfZO+FOhh/++ncr//I
2PhVedfQrzpoez3detedjCZXc+VDGevBK+PEpcM2ZEzWpRgscNeDP21c/8Jp
MkqMHv3CLFAPjcsGnrbHyVjuuuLHt60e8LtZYgKQ8VG0Z42SeD3IntT3sVAg
+tMRZ0Ev+XqwD4344SFCxltO0hUhh+rhYZm9FE2IjEx/p7QTVerBO+XJ8iM+
wvfErP5r0qiH3hrJsDh2MoKtybtVw3oIS5+IDPpJ9O+/BDw5jOvhnXYh+eEs
4QehQ1tETOvh2RTLayB8z65EXx2t6mGkyEBm3QgJ549yjOjb1UPMvPa89nMS
3u7vunHFiYjP/HrjYDcJI36cyPZ1r4e9HRoB9a0kFApgVou6Rezf6EQHdxMJ
s/kfDmXdrofpw90hVTUklMknXasm10P3okpyUjnhW4fVWB/514Pc2+W3XYRv
aHYtpw0FE/lyndU4nkfCXtN65QlqPUwuar7ZkEXCMZK8A2tMPax8O3bJLYmE
TlzfmQQT6kF97crkdsL3ljJLk6RS6sHwRO48H+F7ZAUnhcMZ9XBs8JSYBeFH
mzr29Gjn1IPjtkVcJfwp1mjS2qSAOI8Y2qlZwq9EP2f/dSipJ+7PwqvKVBIW
elvG/VdRDxX+XyZGCD9TYBc9QK2phw9VwvavCH+7l/K2M7mhHqbSvO4pEawl
m3SlpKUehAN7GZYI3xtoNV5ueVAPPucYEoWI56YG/FG9j+pBHtl08gme+Phc
+v0TIj/V5MNZxPwuN++2z/bUQ5D1xfktxPrLLHpmDAP1sGdkOuAHEV9APPsS
54t6SFeWpxlGkJBz71Oa2Eg9lAk/01SKIvypKUhS7l09nB3his8k/G/XmeOt
x8bqYS70jGY64X+l75guGk7Ug+sr0R+HCP9Tdmn9fnWaqD/Tl+ZuhP89ZLwT
6v6tHoZNJ73NCkmoE6UiHjBfD6UK7wuYKkj4YtfvppilevDVjFx0qSehRW3t
udzlemBW/Hjx3/lPn3T/WvuXiC9GVPjLExK6vzoY+JipAb6GxCjvGCThmsPs
jmGWBoh78/2t/XvCX1eK66bYGsBuTpZv+gvhxzQH/d8cDdCo3hRw/zfh3yJS
nzfyNADLiLFyMDMZpSo+UYQEGuDopYjvzJvJOP7qYhH/tgbIOHz76VF+MmYw
9Q5yizTA0DpJzduiZDSXPvaXQ7wBmC/xHPkgTUahc7WSmyQb4EG3/cd4ZcIn
b+89yyrdAFVfh0pfniBjZE6q9zrZBpAXnqt+e4GMur3c2WtyDWB1SubTbzsy
bvoZ2PNHqQEUP+mJ0HzI2CnyZ+nnkQY4sxuovDFk9Ne6LrpwtAHcq4LsJMrJ
iK4fteeONcABpc8u/n1kXEkwcps50QD/7R4OE10gY/3DruSpUw2w7vqIgqQI
BW9+gY5xXWK/YUKD64j7UI63enbUoAHymCrtz9Eo+E1VauvbCw1QfN7heuUQ
BQutk4+9MmmA4LQVQdE9vmhL43QaMm+A88+0ykeCfHFXnX/MM8sGCJdSyU/7
6ouj73/d67FpgL5tnU3NZ/0weYPz1BOHBngmzGD9qcAPLx78wNVxrQHMNJyp
U3N+yG9yXuXhjQboEd4oVLrHHwd8n1jd82iAhBsF6ldM/JFWpEZr9Cbibf1h
axvkj6cHK+pq7zSA4AHJxy2V/ti+O5GtLLABLL78N3afJQBrOh3K02IbIFnf
7JduXgDe+P7uVVJiA2xZ6bnA2RuAMkKG6+JTGyAif6b11EIA5jqqXIjIbYCx
m42dChCI8RzsK+TaBmDoYNy1vS8Qb58rOWn5ogGk06oY5oeDUNlHzNV8pAF2
88t44q8gXMyJSTR51wCSs7/4JQWC8dpPn68GEw1wz7mYs80wGC8n6kZpLDVA
/kxj4+XOYDw2OvtuF38jSCx1llqmh+BOMe94T6FGmG606mduDkFGS2aDpzsa
gVXq/vETL0Ow9aPgo+uSjcCkvP5rMXsoqk2qFzUqN8KrGbtMWbdQVP4W5al/
qRE6/zotSB4IQ0HZHQezLjfCa3uoNz0Rhj+v508vXm0EtqbFdE3TMKz93myW
5NQIX1/SVg8GhaH84ieNCZ9G0Jp9F5z6KgxlVg5x3k5vBJW1HcthrlTkUHv4
pDe7EYb4MrZa+VHxq4+On1hBIzAo8KWuRlOxeM1iqaOiEV7aJHR71lFxz7rQ
N1xtjSCV6JCX/JuKu9je5Od9It7vjvJVcQvHdadtLJc/N0Lb2kep/yjhOBY2
t+3Mt0ZwKmKwC6SHY8bm9fT5pUY4+jykg7EoHHdwydxU29AEA/0KMwnvw3Gr
IFn9+d4mEMkw660GGlbKcrG/kWkCg++uXFKnaKhzMvPFuFwTyLLrV7mdo+Ed
j3bHpSNN4LkQszPGjoZjgxtit55ugt9z0lRWwv/+m0mw2KnXBCihXqUZT0Ne
ZmlpacMmmBaI4TUl+tmT8mdaVS81QYTxWRSqomHx3bvTlx2bQJX5dMnwIA2P
F+yssbveBA2a3ntn3tDwXWsVydWtCcIaNrC8Hqch19wQr99/TbDty9M9pxdo
6KErBLlhTUDSyvLxIHxwi03RxjJ6E3y39rhsI0jHfB/VwbqoJmi6vfr8oAgd
Xxeb2z9JagLux2Jyl/bRETdlRc0UNcFCXQF9QZOOr3YqmC+WNcFF24XFllN0
vHHkkdTfqiaYnFKtv6JPxxz7yZYtzU0w068qeOgS4QuUW8GCrU1QNnvir60F
HYfjNxqKtTfBN+nqPlfCD9k6pafkuonxGi+VOa4Tfvm+uVKlvwlWNPOL0tzo
qPrzjI/mIBG/sVcLK+Eb1yVcuC+8aYKCuUs5xmQ6bjjK+NZ8tAna1JlqwJ+O
mecj82zHm8CQv/fZ7yA6DvpXq3rNNIGQ6X2bMRodnZOPs/rONUG0Q4kwRyQd
WapfPAtdaAKLwA/nWAkfSu+yTY761QQPbl5X7iZ88fDHXzbJK01wQdKg0SSR
jgPLIQdzGJqh51dUSDnhi07c21ZKmJvBvtV0Qxfhi+v3FnfUbmiGavZ0yCN8
LFVd7e599maQ6QrvVyd87dDF3kudnM3w1apkLJbwxX6XyxLPeJshrfQjRybh
d/bBc3OvBJvhdIq5pjnhf0zplKax7c3gr9eV/4jgpDruwC+izaBs3n/9GcEK
fVn6C7ua4c6qXqHXv//Xm1DYtirVDDmdVJYaYj7bv48+rd/fDB8t9pFuEevt
knFG64PNYBd8+FFoBh1HzXiT2hWbIUo44u4MEX9yeNOi+JFm+GN4ny0gifD1
Fkt9v6PNYPlO1VCRyAfv141FY8eaQTJPI/7FXSL+7RXrj51shj17tZwPhdGR
qmNskXG6GSIWr64J+NFR6/ZaI4N+M7QOHcnY5UVH5uJcPotzzSCQPfroqxMd
W1+fcblv3AzCE9w/XpvR8famxac7zJph3vWBk/BpIv8qybvvXGkGlSvlMSHy
dFxy0CC/tW4GhwXJFjc+OlYmTo+oOjTDN1tVxqvfaHjt6V3F5GvNoGby9Hda
Iw33LitH/LnRDHnda4ZB7jSc2DM6beLZDEbNpHM5PDTMvBh0vPG/ZrDY8Fhx
MzUczUNk0reSmyFhs9/r1j4qbmsYWr7l3wwtoCJt9yIMh6dunx8OboaiQw6H
MktCMVpwV/mh8GZwZlN8LeIbgvpaXWxxd5vByV3a7VtgMLLfumG9FNMMLLfC
5dSeBWFn3tbW84nE+PIWWUmjIPR/2SpUk0rU07BK3QvmIERWu5u8Wc2Q0fQ9
4vOTQFxR2tLvltcML95vq/iTFIj1NrV7nxc1A/VeEpf0zUB0jzULkCtvBr8T
v13OGATi18WiI9/rm0HK/MxJKncgFu42jNFvaYYHtJnac8Tvj8355dmyB83A
/qa4/PmLAHxXrZVz7SlRn1m3D5BSArDX7dOWmdfNcNzE6ovxgQAMzaI6nB5t
BhENvVtC/AF44rn8o8LxZvCdVB9XX/HH+3K+3vZfifxqdg81PvHH8u87Pk38
bQZGj/8UJez90UmsA06sa4GzzhGRE2f9Ueqsc2IOawvQZ/V61474Y0Z5k54V
Zwt0qjkrHOLwx8jrxo0fxFrg4d3iM9H1fvh/RXceD9XXBgBcRClJoUVkCZWS
SoqU51GSSkVKUj9JWolCaDMz9nVGlLVkiRRtQhGzrwppUdbKVohSIRTvef98
PnfOcp/nnHvP9587vn1XGc1WlfChPiTs14IQdCv+fnHxtkrIemRy/598CNpd
2nncZ2clGCyWkd/xh3hOXn7jVMdKoI1H3C14F4xdutQe4xOVkHmnu8QjMRjf
9ra8C/KohNojFaH+IcHIKzLnSLwrYTRGI6PSNxgzcTj5cGAlfN/bG/9vbzA6
H/LaEhNVCa4XMzOM1ILRZtHLlfVxlbCvTbpyikIwrutZqq6dUAmqJ1r3zxkn
vgvs/FmaVgmmVPcjb9toWJ14KLOtoBLw14UV3Ac0xBfbx8xqKmH1oUOS9t00
XJGQ3xX6uhJ8ZrhgsxUNNQ7Iva6tr4QazUtW0utpONrFyT/2sRJmpRfov9Ol
4RNpM8erPyoh7Q9lf/RfKmZLkiybf1fC8PT1i9t/UjE+/vfyxSOV0L9m0Ph4
NxU9Fz6SqZzEhDD8e7W7nnht/eLHX2czQd30XmPTEyqqTAq7YTyXCYiOI5cL
qCgjbosIWsCE+61Oz7YQL37al+GiosuE3yzlcdtEKqaeU1VAE9IfNzh52Xkq
Rpr6DkebMSFrkH5N2ouK/hOv2t5tZIL/1JztE8SLe+JiyzysmfD95ObFpw5Q
UeGuzInk/UzQF1psGCU+LLY+eTTlIBPWqNgXua6n4qGOl4dTDzOhSnXrpC/E
i/c1k5zSTzCh2+BHzx4Dcn5NWrL9VgATBC0Zn/LI+XjIOM468xITEibG/02b
TcWMuoFNWRQmmOzLlNDJefq7wnPznAgmxMzhpQ6S83Z8yE7DO8lMaMtxuBXa
Q7ygXbQ0P50JY8mTvu9op+An5hz9u7eYwJGdBXubKbhq9OPCgjtMOK+YG7i0
loKNyVYLCgvIfKpx17CYgsEmd+fef8iEU7IzxqfwiI/O+ig9fMoEmSPH3H4/
peBFxfcKj54zYenh5kt1RRTUKTSXf8xiglma9Ibf94lft2XKFvHI/O5sDfnv
LgV9vkyWfiJigkhLa5ti7v/9eWr8yQtSjzC99ClZxDM6NaPFtUwYyN2dtf0m
BU+zVw+XvGFCQVZpxodUCiq7JP8qfc8ETedjP4uIlyrGxr4/bWLC6folC5qI
p9xTXb89+8gEZ1mFyj1XKaiwTvC1rJ0Jx0vuZy8gfix+u7Sz/AsTDDnRzHXE
Z4d86J+f9zKhd6fq6rsxFJys9Kul4jtZP3/C9vgQ3xXe399Y+YsJtMd/C68T
/+3dUVHPHGbCrZwf0+eQ+O9XrTesMSYcSVai/t+Pt8PDatkTTHh5WOrEenLd
VrfnBUeGBV/v3fTpJPEgZ5eYO4UFFydmF4+R/jMOP+HzprNA7anRPRrxo/W/
uRz+TBbsdcYdl+kU7E+7XClQZkFjd+icAeLHJNPPZcK5LGD3Nul1kfu1qN9S
KlrAAgeTV5ZuycSnvveKxJossPjsO+ZJvE2fNfOhZBELxrysJYqZFFz30Leg
ajEL6GuLF9uT/H+y/XDnxTIWZH0f41kQz0f2bLj90ogFmzruFbQTP66MzMqs
NmZB2MCRkJ1lFPygJ3ezZh0LXgwsqY7hEK/zTqfWmrNA0NG84VEVBZccqb3+
CliQfPOSRi3x46tx44S6zaS97KKXE8SPF26k0F9vZUG3n6Htf9/Ieln/L/rN
DhZEWJlMmTJK1sv7IxFvd7OghFtaH0/Ws895Ycg7BxaE1LUZf1MgHlReRq3f
zwLt9xI1I7I/OsW5CisOseDV6Ir9R7Wp+ChIKzXMlQXeW309Rg2peHlNul6L
OwsOl/o/NNxAxa09qkVrTrFg+dRbk61sqTg7M94i9gwLdHZMb7juQsXWfdNf
tJ9jQTvH9nSCLxXvTg/fb+7Pgse455Uwhop+HKmOhIss4K/egV/uUBECLp3t
CWLBh6rj7Y1iKk4zHPprGcICj289y6u+U/Fd29mo1AgWtChMXDVcSMPMlF7V
gRgWVHpIP3i3j4Yeu45n28Sz4F7clPMNKTRcO/nzisxrLIiHbOsN3TSULj/4
fDiFBfk6l5b83BqM1d71W3ffZMGp6oOHm4qCMUXP/m1eFqnfD/P89Toh6N70
wnU8lwU3p7Z5akaFoNFV675990j+HOe0zWoJwVFrzoX7D1iwQLv10+GFoSj4
ay4n+4QF04sKFOP2hmJ8UWnCoacsKHjpPVAfFor6CwsLprNZQNmWTNFuD8WB
N/qmR/ksOFTNkHFRCsOKqCx+uZgFi1f8hpYNYegwmNRyqo4F8+Rsj9ckhiH1
JW2muI0F4Z6/KuTXh+OO4L/pml9YkGFw6LWKWzjOMQ1YEtDLAvOv1KzoqHC8
n+Npqf+bBTP8Pytx6sPxTGWBGVeaDfcfLjp763QEpl1L8tBSYcPexRd361yM
ROr3N6ts57DhlP51paHUSDy2fdafgHlsMFJboe5UFokrpWJDa9XZMFjptqNm
KBKFHrSbQXpsKDE0dnviGYW/NnnWNq9lw5vqkmT+lmhcK2+Y0W7KhqYxBjvh
v2gMrO3z7FnPht3zWu2Uz0fj+EHvaX8s2EA9/KnOKCcap5732aK8lQ1dAcd3
/RyLRvU7gc+37WeDIje5/kxmDLqcMYu2O8CG50lcq3dPYjDLeNRp/0E2WF9y
ufVPGIP67EtD7ofZ4BjVseTatxhc2RC0inqCDRWTLeb0rYlFq+lhd0oD2HAv
6N+zL+WxGF63xb/yAht01z+yLaqKRUmy3Bb+JTYc3rU+0KYxFnfpRrbVUdgQ
sYX9tuFPLDptjNHoi2BDw/adz24Zx6Gn99XERSlsWNG369/izDh8YLLHzSCN
DdJ2to+6C+NwYGz2qlU32DDkEVIRVBaH/pHXaiwy2fBStDtQ93UcUrOS5Z3z
2WB5v3DBqUl0vPbmJiX+GRuusw5q6DrR8Wxn2Zy4cjb4Dqj7K7vRccfwu/tR
FWxwNx0ebPago/QCxeZgNhuSJcH7J4LoeM4tyPS8mA0mXLn4iJz/fy8irfZc
FcnPqyrNXYV0XBJeetzrJRuqZM29fhTT8dPd/msnXrGhvG7oo1hAx10DLgMH
PrBBJaTlxstOch6WuRTp2MiGOYq55X59dJRVTdZ0aGbDa4+jASPEixWmtTtt
P7Fh7Mz7sRQZBi6jwj2Lr2yQcy2JWkl8KJdw0NK8hw2jatlKTD0GtuUEfFj3
jQ2UL9KaS4gX00QP5Vb9YIPzNln3q6bEZzO1ji76w4a3r38qF+9mYIfWhlHN
UTZM7rpL0d7HIOdHp6vqf8n4L9jvTzkz0N8xnqUqxYGzDS1votwZuOdkoeNs
aQ4olMpmuJ5i4IqL4j7FyRzIzcm8qeTFwM6bUupTp3Jg4kpL74g/8cRD9SeT
p3HgiTCia9Ul4hmO6fZJChz4vCznNFIYuLfzbODoTA5wnCdfaQln4Mrh2JnD
szgQcn6f1OloBk6Xv5v3S5kDjztO/hDHMZC7/PPbb3M5cOJgY8KfROI5i38e
3fM58Ke/bZ4wiYEX7ObLdC3gQIuBw53DqaR/N5O0Ng0O7N4Vqc0jflrpZ7/q
oyYHLhi46fffZKBC+BlxkzYH8rw+y7beYuDX5KjDHxZx4KhRdjGDeIx/N3fo
rR4H3PLMKiaIF28958TVLeaA/qzIpQbEcxerW3RrlnKgcg/NfxrxnuPHkedV
yzjQNN/DO53EqwdUHUSGHFB+fk7pPYkVZVb38Iw44Lzu2qFSEveo7KKxV3Fg
aIvlsv9/70Wgf3pepTEH6Pp3OzeS/jNNwx+WmXCgLrxzTR0Z//L2bOvSdRzo
XW2U1kI8e+qkRK/VjAMrx116lYkXHcN/TJbbwAHv+HN/goiPN9+e22FowQEd
95y9E8TTK7kWvH3IgbAfP0PPxDNQ49Ox7CubyPhGXy2So4j/x2NpuVYcoB1P
SDenMfDPgmLXamsOrLh+LFI2gNTXrAkGbTiQUt2QH3Ka+Hu/tKbGDg5c3tBm
rH6Q1Pv80nGrnRyoXejpObqVgfcT7Vo8d5P6nn/YNWBE1uPjgIpr9hwwLGve
Yz+LgRG1GekVDhywzLISpnXT0a9PcLFjHwdc7+jqKZfQ8cj0vgMKThyICLW4
P9+L7J+lKmZrnDkgtXuOgp0CHc23ms87dIgDG1x++CqExuGSY27DIS4c2HtO
bqxDFIuqIVH1Ba4cUCk4oLb3VQxKZz0qeeNGxrtjfW5tQTR+Z76/NubOIX77
2FMfEoXNzeO+i06QfIQ6q2+LicSqUT2HHac4kBWtcdKhPgKfztu52teDA5OM
00Q/Dkbg7bV+s9LPcMDpKs9HQz4CE/am/+B6k3w4mJ96Ux2OFB9ubc85Us+J
LCf2rXD0jO9+MNuPA+qCwfg/geF44IESfb0/B8bL8q02O4aj9ct1Z9wCOXBV
byen2yQctaaGLyu6zIGahYnS80fCcIb+/WmNQSR+W7WuqykMRze/7Z5EI/1x
WptsWGH4lqKTbx/GgTPnVQsiI8IwapipOxDHAauqHFdDjTD82TWssfIWB1gu
4yYc51D8OFnz3/4sDpyOb9kwzSoUX+pYN1NyOKBH836bbxiKeS7X0mrvcCDq
ygfXz5NC0bl+5VzvRxz4YT5+Qf1BCPIEp5QecDgwN/P+5BKVEFTcrfLnEY8D
y+IUmMMyIej0gfnxiYDs38JDa87/CsZvPcoPyyQcaJ360E7jTTCqKDF3CurI
/lst/DrjejC6O8+Oaf5M+l+vfqVBJxgftFf4fGwn+7Xq/VM/1WD843nCua2T
A4Hd2oY4NRhjKRVLv3aT8XwmZx7rp2Hx7ePiXwMc+PhG5VNTBQ0nfy+XnS7N
hf2Xs1Tl3Wi4K/BY34zJXFBYl6fkuZ+GKZOU3inJcYHZd61i2JaGy1WO3Z4z
jQthL8RpEaY03Gs2c7PObC6Yn/08jzKLhhncMgM9FS7E6G0w1phKw6873Gcv
mcOF5ZlLtT6Pk/ObS9lnQzUuhJ/xWN7wjYq3Q45SzXS4YK8nnU2romK/guLJ
DbpceP3a6N0WLhVNk57tBn0uRPSviDQsp+LL/BmaWwy4EKI54Hn8HhV/Vz+t
tFtNfl8/khsQS8Ut8xTGTmziwoNMv4oeRypm3ucYJFlx4fBVA/sddlT8uynA
mW/NhcbWfNXX26j45ExbmdYOLmgP775jv5GK2rxngQ0OXOh9S1edo0/m6+SV
P8WRC3j4rWmuFhU/9C36YOLEhfW2KV0HFlCRMY+xLuEQF047/24znkXFf2eO
DW0/xgXL0YgF+/9R0Elmgf6FE1xQk3qw9NVv4pWUV/vunOIC50ue73VyXvbg
mZfIeHHhZlHDJrkWCgqdBjpWneVC2my1J0XvyHm6P0/F1YcLA/Sz6+7XULBh
3my/Cn8uuJjUz2GQ8/qaB6KcnkAu/Fvp+jPgOQXjN195M+8SFzT7HTsfl1Dw
24fVMluvcKGoYm3vxkcU3Or1dfV5ChecnquraRAfZMtkuOXQuOB2vDjHLo+C
4ykOCXUhJN9UpaYG4jfnFfLciTAuHLtMWVNO/FbCYw4YRnJhqezrHb+I35QO
+GkfiubCtmsHOsOJ3zz7l9pHx3Jh9/lFP/yJZ8QhH6nP6FxIzgmkC4h3Fs2/
/qgrnguLVz5UO088FPRg+yeVRC6s3LzTIJJ4qXGzlNLm6+T+Q9KTJhG/rW0o
gXPJXGhxzAjuIN666uXhfSuVC9ulQo+tIfE3Ge1b1elcUJKLnz1IvGaTWl8z
dpMLDye/FBqQ67dXxI4vzeTC0Q7+mkYST/AsVzhlc2H6DaurU0n/zgeG/wu/
zQXrTSN3n5PxS/sL44rzuHDhmO7wCJnf7FC3yrZ8Lvwt0nxSRfx5Zv68PqUC
LlystxoxuU7u70G1OtznQsXHLx1WJB+6ViG2Zx6S+NfB55MyiKcaTC+nP+bC
wkJTtcAcCjZ59RdInnBhWFS6soT4ee3k203DJVzw1nOWE5P6JKQemK7/jFwf
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
p6J38ampEnCyVlRcdzMa/wcJDS+N
          "]]}, Annotation[#, "Charting`Private`Tag$27946#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1], 
          Thickness[Large]], 
         LineBox[CompressedData["
1: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
MfBZBOy3j4bzA/DksRYdT8obFpODo8E3tjji+0U6Nq++D9/+PBpU7UvP+9vR
MbnwxOlTb6KBvotK1bxBx3tXsxlvfo2GDO3wDe9d6KjScf1W49YYmCmdVIu5
Q0chr5cyk0IxcOZms0UZiY4rexU/su6NgcfxewtTqXSsjli+aKIdA2rXq8i/
g+kYfeIKq59xDDT7+cSa0ujottzwJN8xBtZ9pC5EhNPxYt6Oe/13Y6B7vuT3
w4d0VDSlHlwLjQGK58dhi2g6cnFOzu1KjAExWl3oSiwd51s1s84UxACTmUT3
5QQ69rjlmd1qiCH6h8gN9x7RsXAPG398dwxwz66etUqmI7/qUw6RdzFwlyJ6
b08qHak6vpuT5mNAn7lSNjGNjnOWwCjGGAutLYGtNel0NHRfWUnljgWOeYdy
jww6tgZX/BTfHQukhb0mvUSWfeQ0k3kwFnZ4KjY2EDmmROaTlGYsqG/dv1ee
yOufTI7lXo6FfRpVX4WJ8W4MpwzudYiFJNttBa7E/MNfjXsK78bC7LD5iDix
PvV/fJ3yNGJ+x+Qi3kRi/Vx9TaVJscBUZLJeltgvvwStRqkkFhwF98WeIupD
PaxVWtkSC66u2f0HiXrOaTPlKfcT94dzOLT4E+s3f5xW+ykWlPY11CV507Hl
lleCylIsjDx4u+ZAPM99AQciGzfFwRnFGK5UK2L9cfNhKBgH1X760iF6dGQs
zPNvkYmDw+21ixJqdLzebE3SUI0D+1SLsxt2EevvF/NoPxcHc2Ey2ewMdDw+
PeqkaR4HRp59sjt6aViwGm33zDkOBg9v3OnxkIb87HoW2tQ4eHvRS2QaaOiz
k+3Ki4fEdW+DmO9Pw3D2wFM9ncw42Pdg8eAv8TA01PLV7q2KA2P/48q5GqHY
YgwnLj6NI7zbZ+QgE4L7nFZUB0fiIKaZ4fbc7yCMoVYcNJyJI7zkFvn6E+Hn
aCe5kT9xYLCesfoSdyA65spIGbPHg8RTkfQt1AAcapjc8XZHPMz9SZ6o2xmA
x1+lCJgrxEPz8FWLF+/8Mf+jMdd79Xjg2Ptb0bPAH/mW+bZa6ceD4WSMtKqv
P/ps7Vs/aR0PPO+vjK4z90cDBa2Fz0HxEEyRtPws6o8tJ5jmHOLjwXRjWe0F
Bn/ce/nx5Gx+POF5XWW/937ISD4w/L0nHpYGyQ8qs/0wv1us7ve2BDjLCzJt
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
C2I85UnHvQM/7AaWS8FR5O8C3w1i/98fy02slUIlz0KEL+F9W7awhRmGMhjv
tO2dPU/HDTJGdctMZTB6kuGMJ/H+pZ+SpDBtLoNvZ5KcFsToqG716yQHaxk8
7YvoKiTe7/fkZhZhzjJojRGWlB2mITmR1iu5rQw6alK0BlJoKFp7JUZRoAwK
NVov6BHntX5QyhREyiB1yUSQeSkMjX4u7DojVgaXHz6QrHcKw9/srZ8v7S6D
YJ0LhjfqQjFm7/0iiz1lwJNP7ct8FYIHtUxu39hXBib613gNHgdj/zXpo177
y0BP3M58PCsIb/ksMfgfKIPHbpkmFysCkSuprT38cBmo+dbLR/4JwOK68NBE
1TJgzXN7we4dgOeGTXVzjpUBZvW+SBYPwJlfMvwVJ8oAPA0l6Z/8MZjz91iT
Vhncc3vw3KPCH/fItqd1nS2Dw+s/7fwT5o+dpx/YDV8oA1WLhx+ciO+NtY25
3Ef9MqB+OMnWecYfU5NXaldNyoBh98uOHZz+KMwt1yt9oww6xTtuP0r3Q/bl
aIYgWhl02yTzMb7zxUKea+0PI8qASbWe93WHL2rvVwhNjiqDEgxIZizxxUD7
Lr7qR2Wwt5z4YPv6IuMYg9xUYRnsOu1td0fWFxea7UxO9JSBP7teQfD9//7+
Urssq68MZEsM+tzuUtFDRn7zluEySBf66F9kS8WVh4vlL8bLwGMtiI3xOBUZ
bKkshj/KIOuYmiPrsg82J1hb1C6WwdqTt3SY9EGfV1rVwqtlINYYNVzR74PM
RzmsJtaXg6maFqdDqQ9uYUuss99WDj6fFN69dfLBruNkzm6Bcsg631jFf9UH
w9wtbeREy8GkLLGEfsEHOSb2cP+SKAc5ZOjar+iD28or7b2Vy0G3IOPO/t8U
3GH0UuD+lXK4pHBlxIdOwfe0sps/zIjxohzUlKkUTGuNenLRiphPTvr7dqLf
kdhn4ixwvRxal3Q4fc0oKMPwpTP1Xjlsu0ZKvK9AwRmlblFmajkYbNzS9FSS
goV2xa42AcT8h4XF94tQUL7Pbcfe++XAmrJhKpDorw5mrveoSCmHCQsGss4E
GZdGJrv5MstBXv9t07chol9jf7bLK7cc/rIa/6t5Qcajnvd71MrKwSlrkuVF
PRlRW0Sys60c8rojD3+NI+OZHwcHR6bK4ZqfuEOtKRnVGl/WS82UQ3vZ6m5m
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

          "]]}, Annotation[#, "Charting`Private`Tag$27946#2"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {Automatic, Automatic}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 504.5598321557927}, 
     BaseStyle -> {FontFamily -> "Arial"}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox["\"Concentrations\"", TraditionalForm], None}, {
        FormBox["\"Time\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> Directive[
       GrayLevel[0], Bold, Medium], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {All, All}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{Automatic, Automatic}, {
       Automatic, Automatic}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"L1\"", "\"D1\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Arial", 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Arial", 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Arial", 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Arial", 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          Directive[
           GrayLevel[0], Bold, Medium], FontFamily -> "Arial"}, Background -> 
         Automatic, StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontFamily", "\[Rule]", "\"Arial\""}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontFamily", "\[Rule]", "\"Arial\""}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                   BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False], ",", 
                 "Bold", ",", "Medium"}], "]"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Print",
 CellChangeTimes->{{3.842708230399178*^9, 3.8427082780593*^9}, 
   3.8427111089564266`*^9, 3.8427114743046613`*^9, 3.842712803120325*^9},
 CellLabel->
  "Durante la evaluaci\[OAcute]n de \
In[152]:=",ExpressionUUID->"47c40fe7-0e69-48f9-ae5e-cbead1e7af39"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0], 
          Thickness[Large]], 
         LineBox[CompressedData["
1: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
s0H3e1Ur4LOBo3uwvDCyzJ55qGhUAa2JIUn8L4Sx79vHBoHLFTDPeGFqbVcE
Lzp1t30NrgCHvfGTzfqiyPatoCcrsgJSXhyju50viv7Tfq/o0itgKPlqSv15
ou9+3TdD0lEBuuOxlP6vxPGF/eKP1t4KGD5Oyw3MEhjw5c1ywGAFvL26eWFV
RwIHpjJ3FiYrgG9NWGipXQID7cLIir5XAOuFmyO3NiWQa8r1gMNKBfRRLXo5
H5fEy5PShPdklZD30KR2okESuW2ZjiVSVcKtv03Hlv9K4qvP/zh0CZXwezrn
puZpKeT5/FzkKV8ldD9n8FGalMJB60qpYPFK6LhXG10mI41BnxLlFOQqYYi3
sZAhThqHJmxOV2tUgodZaoK/gQxORtd4qBpUQqQXU+TPNhlcOrn3/oh5JXyV
DwYd8eO4O2vS4uJQCSaGu7wdJcfxcFLJ1B+PSrgfXLdbICGLbKd39sf4V8IY
w0/VbqLPiq7oSrBdr4QGdd4/Qg4nUDE7x6TqFnH9nT3TEXRyqKWzfkMlrhJq
PTqO8H6QQ8tttYK3SZXgprR8W6npJHqUpL10flgJCn6VRlgnj0Gmi2ubhZUg
7vxc89yIAkZRIEt0VSUYn2W5/pJHCdPq7qmyNlfCjJeGQnSlMhbbf3Ov7K4E
uWtC6rdVEZuOyN071V8Jyyx0eRt2p7CvI6p5+E0lnKA8EV/5RAXHPCcmnT5W
wsqATqrDrdM4yyyxf/NrJdzbeihi2X8Wf/eFikctVEJgIctKwEsNpAgcMWZZ
rwTrH3pzl2a0kcArcKNipxLmBZvzO17o4z23dgMOsirwyXh9RvC5EaZ1OTu7
7auCHokC6ZlzFpjDcCSo5mAVuGVrcdOctMMS7+bYv9RV8Mxy61mzoRPWPLV/
dJquCuiVq1xITrthCwtVfSxjFSiOcEv/MvLE7ov1faMsVdDQMCajet4b+/qt
x9k5q6BY3udjpDfRJzn3L7nyVoF2SsXG0LoPjl2uJqsRrIIzomub12h9cXLQ
nOGvaBW8Itnz9CadL87xkQuflqqC1ZHIoAMHfHHperlyrGwV9LL95oWfPrj5
1thgVL4KdoVlO78/9sFdYRJndqiCT/+o3vgm+SBFWPEVV9Uq0LCpe5ji4oOH
PxjEVqtVgdzqJqOOnA+y3cmvU9WrgvO0Gir0H7zREpf0Yy5UgUQyt/ruRS98
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
9LEtXbC3YJni2T4+1NwYKY9s64IQnjTyURk+JD12eDy0qwumJb0Xs+7yoZ/9
DblLfV2wxp0veEaXH7X80wb9+ruA0UNOOTiYHwUiGpy9B7ogoUN+1bGGHyeL
fya6vO6CnmZeTmAUQJ1l62WzsS6oMXDsfr0ggEJkV+8Yf+iC0ZGJzGVuQdxL
SGY/P94F/olRV35YCGKb3KC21mQX/DvUmnbnlSAKB0OJ8lwXbDT+OGbaKYT7
qTkcuDe74Gr6GYHhMRGc5lDcYt8i5n/lEZculyh2SpkmsGx3QQE3xHh6iWKA
8d1OAkk3XDowN/11vxh+yyRh2b+/G3Tks66mm4hjVyVLLTllN4iaOqgsV4lj
RrfcuT1U3cCYuVnqRiGBht98L29Rd4NMCNP3S84S2CMy9XaBoRt+F9t94JWX
xCzlHY/vTN2wPagqO3tREq/oMZHNHOsm+uwP2e+Vkijhry/5mb0beHaqtq6K
SyFVhFffR85usCNXXgm7KIVzyZE2Y9zdwLG3VLG9RQoftnbHDvF3Ayv1+kMG
Q2kMejnB80qwG8hJostIC6XR+POf1n7hbqC1nf7Z+E8apZYJ55+JdsPkt0/P
+ixk8DCZ1Pxj8W7IyI5S/dwhg/N0OiFdkt1womTX6LHAcXzK587YLt0N8vbf
x+3SjmO2XERl8/Fu2IzcpzRCJ4vXzuWcbTjRDd1fFzx9U2XRzfU576eT3XDX
zqSiWvYEGkcskVModoMe6d3F89MnUDWPYVpUuRtOmYyWh+XLoUSP8mMjJMZ3
1Cte/cZJZJ10yrmu8l/D5R1P9RvFcRJJKpnZW0L2SKpzQkiSmZF0XaPMK2RV
RkaRkIoyUkYKWSEk3H2vkqYiIclPSkOJUvzun+f1fZ7znPM5n+/reT9kGNHy
mHsWuQ0FlrKSKy3JoK62IDyVZYYL0s2EPisyXIjtEkh+th0/mL6BORsypOu8
l21x2InP3FbIy+4lwz89suJaQcSe45uXLPeRQZpve8t3+V1456LD25D9ZHCv
5CkpiDLHwsaYzkuOnPhX7jMlJUs803+tqNOZDIRfM3PxdlYYNUOPn3AlQ47A
Eebk5j3os2bGQ9CdDOWryhoXBfeh/WZRU0NPMgz/Ny3auNURzazNNnp5kaGD
FTC4doUrqvsT51O8ySDK8+JU8W5PFEvJGKghkOGy6irx9iICrrjR0PKcSAad
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
9+PNLydpoJkf9Wj1QU8cPy+48COBBkmC2iZFwQQsc9TZ8zuJ4/fCDdEHtvkh
UcypcOk0x4+SXf3sDUdRaTDqE08aDW5deuNqty8Yx4sLtq8+w5nf14NeLy6H
Yhmh4/y6DI7/KPUbCX/CkKjydkTkHA3ax77eK2wnodLUso7keRocKWqsDOEP
x/EapWS5HBrEHD/TROfwdBlp9zPlCzQg2yYKm3B4m2hwVHnzRRqY3JE0juQN
R6X5zCjtyzTQPZk8fvY/Eo533KEbFHBi7+CcNd0k9DH/cWRnEQ3MrV14+o5w
+JpPvN2ihAYO6f77DTk8PcbeKrCnlAb7Lxs8KF1HQoJjQq1zOQ2q7BeD7VrD
kEBY/f1oDcfPFPN6tgAnTpCPv3ifBhlPRZRvsEPwcMferKk3NOhVqOzKvRiE
uplxqpIjNLDMEtwTHB6EKzyruvaMcb5XtAaU7wvCit8rvldP0OAvJalXdXUQ
Tm/tcA2doYGdfFWhVWogRt9Tl59dokHitP2N6oyjmNXM27SoSAeRk8eiO5gB
6J1qsFdLhQ4/hMVdsu4EoI6Lz4SXGh00NvaI5F0MwGc/OsW7NOjg8HBGyIgQ
gBsNok4kGdAh7fdqYueiP5Y3jlvy7qaDRdR3xrdt/thR1/1q3VE6ePYdsBZ6
7osqvTamRkF0aAwSgecPfDHnw9PCgyF0yJksE7h9yxf9ZCYO3QqnQ9Ob3p6z
Cb64LpN/YlccHbr1pbsXNHyR6O/4LSqTDryzpupJaUR8lDTkWJRFhxYJa+63
4UQ0Kfa9S86mw+ZzaZImXkQUfH48et1FOghffFPzRp+IrVj4t6qIDsUrl+Lu
jPrgGpn3/G9q6bCieIkIRj4YbRISxF1Ph2epFqOO8j445jT3cFMjHVa5+QcZ
rPbB1oxVOVEtHL0S4zL3DxOQMK8ptq6LDlL9pwMsEwnYK9wSbdhDB5ZSS//m
IwQ00t752pPC6S+NdbPKnoAC/g5FVQw6fOh0OW8uQ8DmZ1GKu/rpsGXo7ykB
n8Mo9+Xf6SNPOf3Ac5e0TYcxY/WZifPP6XB6aY+J8Wdv9MarVUOv6BAnsdRJ
IHkj66DSau4hOjxeE6viscUbDWJqgjYN0yFc9ePb5KlDyF/3YEvUGB36+LdO
jbocwgi2VU7hOB0Gq1PWqvMewrcT/d96JujAB3rWXQ1eaMPl4fTfJB3ivxek
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

          "]]}, Annotation[#, "Charting`Private`Tag$28011#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1], 
          Thickness[Large]], 
         LineBox[CompressedData["
1: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
U5KX0R+6VvjoMpCA3+XwLo/ot/0HW+FRwqmbvn7yKFo7G8HO0grDexik7Hbl
ceatZQUzRyt8ms6aHchUwPukw28YeVpBa7TnfoO6ItqJq/2jE2iF52k7jOu7
ishu2iRCLdIKX1VNlzlGlHDskpgxhXgrkCwl/WnoUsbUortheyVb4fv143Op
z1XQYJixcFemFcLJD6zrkRxD6t8xQ3/lW4Hw0LFqwe049vP8/fVbuRVC1e33
BexDjNLy410/3gpe+6/laJGeQAyY1l5Ra4ViOxe9Tlk13M40P7d4qhXOD5tk
jVWqY8vD5znzOq2Qw6vLGH1dA89/h74ZA2I90ufvlH3TRBmmhh+TJsT9fYq9
wkKti8uqomwfz7TC2rMRye5jhljumqP21qoVnCnnQqgvmqB7EsPZUbtWGOF3
HT3jegYFm6PuvHJqBQfHK1RFpdY4+Xmza8itFd4LtriySzhiDqXP/DOvVqCw
XHmluO2CltJTB/p8W6HFdit4uMEDma3MVB4GtoKGRLJya5c3jkQ+c+kKbgXa
x5zyDRM+mFRxLKktjJhvuwQ+4PRD3Te1zU1XWmFGwubBy34/pNwRmqqLbIWo
n7wrlNT++Fgoi6o6phVSdurM9zD7Y7gB3dGKuFYIJh90CSL6tmpIpG1JUis0
3MEmF6Jvb977FVOQ2gr0pNWkkUTfbuz3qrmX1gqRZQWhZzv9MHD109vsrFZI
MHS9tJTqh0fYT+/NuNsKnNFv5Mzc/bDYW+XMzeJWiObxTnKj98MMOprt8KZW
eEriS/nEyRcvmVZpOo21QnlIqNgtbh9Um/zxSZC5Dc5Z9i1STXshP19YRgh7
G+hdEMiM7vbCPU5kJgPcbWDqrHPYPscLe6ZZn/iJtAHjmJKXqLkXHvt6oqJN
sQ3yu7Puz730RMXlWyFG1m1Abah/7tFrD2SV5JYusG8De+vXQ0GNHvjbr3Rh
w7kNDOdI633SPbBptcM2+2wbODoHM0vbeKDsxqz63OU2iOag3Pdh3h2PbCsw
XMprg2NVB/q6aN2R7tjDZ8OFbVAwVztg9dMNly7rXeMra4NK/SlWibduWLnr
8Kuvtg3K3hld8Cpyw0N74z4ceNQGttterMrohoJUH0pLZtsgfLWLROeKK7Kx
hp94LdYOa8bnWOMILlgneYDmw5F2yPSg3LHb44J6mvljMzLtoLsUbae55IxX
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
aVGLCg==
          "]]}, Annotation[#, "Charting`Private`Tag$28011#2"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {Automatic, Automatic}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 5.297606244548602}, 
     BaseStyle -> {FontFamily -> "Arial"}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox["\"Concentrations\"", TraditionalForm], None}, {
        FormBox["\"Time\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> Directive[
       GrayLevel[0], Bold, Medium], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {All, All}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{Automatic, Automatic}, {
       Automatic, Automatic}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"L2\"", "\"D2\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Arial", 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Arial", 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Arial", 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Arial", 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          Directive[
           GrayLevel[0], Bold, Medium], FontFamily -> "Arial"}, Background -> 
         Automatic, StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontFamily", "\[Rule]", "\"Arial\""}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontFamily", "\[Rule]", "\"Arial\""}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                   BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False], ",", 
                 "Bold", ",", "Medium"}], "]"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Print",
 CellChangeTimes->{{3.842708230399178*^9, 3.8427082780593*^9}, 
   3.8427111089564266`*^9, 3.8427114743046613`*^9, 3.8427128033049574`*^9},
 CellLabel->
  "Durante la evaluaci\[OAcute]n de \
In[152]:=",ExpressionUUID->"93a29a25-4ac2-45a6-82d8-06d8fab52418"]
}, Open  ]]
}, Open  ]],

Cell[TextData[{
 StyleBox["SACNA also allows to export a simulation results to ChemKinLator \
simulator files with the function ", "Item",
  FontColor->GrayLevel[0]],
 Cell[BoxData[
 "ExportToChemKinLator"], "MCode",ExpressionUUID->
  "468001d6-09cf-4916-85df-9b61526d94de"],
 "."
}], "Text",
 CellChangeTimes->{{3.842708090631228*^9, 3.8427081374229755`*^9}, {
   3.8427113506698723`*^9, 3.8427113612934127`*^9}, {3.842711405228603*^9, 
   3.8427114641694775`*^9}, 
   3.8427115561177526`*^9},ExpressionUUID->"5416d73d-2b6d-4625-8c2e-\
a1f6ab03ad7c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"content", "=", 
   RowBox[{"ExportToChemKinLator", "[", 
    RowBox[{"reactions", ",", "rates", ",", " ", 
     RowBox[{"samplesList", "[", 
      RowBox[{"[", "sampleNumber", "]"}], "]"}], ",", 
     FractionBox["1", "1000000000000000"], ",", 
     FractionBox["1", "1000000000000000"], ",", "0", ",", "simulationTimeMax",
      ",", "1000"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.842711495809909*^9, 3.8427115446165595`*^9}},
 CellLabel->
  "In[155]:=",ExpressionUUID->"db045762-f2ec-4088-94df-ac4ab2ac6914"],

Cell[BoxData[
 TemplateBox[{
  "Export","chtype",
   "\"First argument \\!\\(\\*RowBox[{\\\"$Canceled\\\"}]\\) is not a valid \
file specification.\"",2,155,34,26655503798046685306,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8407294479557*^9, 3.8407349728558693`*^9, 
  3.842708041719866*^9, 3.842708310200575*^9, 3.842711553105604*^9, 
  3.8427128094550514`*^9},
 CellLabel->
  "Durante la evaluaci\[OAcute]n de \
In[155]:=",ExpressionUUID->"0980b79a-f51a-4b9a-9edb-6b204ad2ab07"]
}, Open  ]],

Cell["\<\
We can do the same analysis with the second Routh-Hurwitz condition.\
\>", "Text",
 CellChangeTimes->{{3.8427115926446533`*^9, 
  3.842711617454268*^9}},ExpressionUUID->"0578a8b0-652d-4a16-89f1-\
44806199d510"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"cadSolutions", "=", 
  RowBox[{"RunSemiAlgebraicAnalysis", "[", 
   RowBox[{"reactions", ",", "rates", ",", "time"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"numberOfSamples", "=", "10"}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{"feel", " ", "free", " ", "to", " ", "change"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"samplesList", "=", 
   RowBox[{"FindInstance", "[", 
    RowBox[{"cadSolutions", ",", 
     RowBox[{"DeleteCases", "[", 
      RowBox[{
       RowBox[{"DeleteDuplicates", "@", 
        RowBox[{"Cases", "[", 
         RowBox[{"cadSolutions", ",", "_Symbol", ",", "Infinity"}], "]"}]}], 
       ",", " ", 
       RowBox[{"Alternatives", "@@", 
        RowBox[{"{", 
         RowBox[{
         "GreaterEqual", ",", "Greater", ",", "Less", ",", "LessEqual"}], 
         "}"}]}]}], "]"}], ",", "numberOfSamples"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"sampleNumber", "=", "8"}], ";"}], "   ", 
  RowBox[{"(*", 
   RowBox[{"feel", " ", "free", " ", "to", " ", "change"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"samplesList", "[", 
  RowBox[{"[", "sampleNumber", "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"simulationTimeMin", "=", "0"}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"simulationTimeMax", "=", "0.2"}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{"feel", " ", "free", " ", "to", " ", "change"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"graficss", "=", 
   RowBox[{"ReactionSystemSimulator", "[", 
    RowBox[{"reactions", ",", "rates", ",", " ", 
     RowBox[{"samplesList", "[", 
      RowBox[{"[", "sampleNumber", "]"}], "]"}], ",", "0.00001", ",", "t", 
     ",", "simulationTimeMin", ",", "simulationTimeMax"}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.8427116599584613`*^9, 3.842711674486776*^9}},
 CellLabel->
  "In[156]:=",ExpressionUUID->"1e398066-e8da-45cb-898b-f2b1ee2115c1"],

Cell[BoxData[
 RowBox[{
  RowBox[{"D1", ">", "0"}], "&&", 
  RowBox[{"D2", ">", "0"}], "&&", 
  RowBox[{"k1", ">", "0"}], "&&", 
  RowBox[{"k2", ">", "0"}], "&&", 
  RowBox[{"k3", ">", "0"}], "&&", 
  RowBox[{"k4", ">", 
   FractionBox["k3", "D1"]}], "&&", 
  RowBox[{"0", "<", "k5", "<", 
   FractionBox[
    RowBox[{
     RowBox[{"-", "k3"}], "+", 
     RowBox[{"D1", " ", "k4"}]}], 
    RowBox[{"2", " ", "D2"}]]}], "&&", 
  RowBox[{"0", "<", "k6", "<", 
   FractionBox[
    RowBox[{
     RowBox[{
      RowBox[{"-", "k1"}], " ", "k3"}], "+", 
     RowBox[{"D1", " ", "k1", " ", "k4"}], "-", 
     RowBox[{"2", " ", "D2", " ", "k1", " ", "k5"}]}], 
    RowBox[{
     RowBox[{"D1", " ", "k1"}], "+", 
     RowBox[{"D1", " ", "k2"}], "+", 
     RowBox[{"D2", " ", "k3"}], "+", 
     RowBox[{"2", " ", 
      SuperscriptBox["D2", "2"], " ", "k5"}]}]]}], "&&", 
  RowBox[{"k7", "\[Equal]", 
   FractionBox[
    RowBox[{
     RowBox[{"D1", " ", "k2"}], "-", 
     RowBox[{"D2", " ", "k3"}], "+", 
     RowBox[{"D1", " ", "D2", " ", "k4"}], "-", 
     RowBox[{
      SuperscriptBox["D2", "2"], " ", "k5"}], "+", 
     RowBox[{"D1", " ", "D2", " ", "k6"}]}], 
    SuperscriptBox["D2", "2"]]}]}]], "Output",
 CellChangeTimes->{3.8427116433936834`*^9, 3.8427116847790823`*^9, 
  3.8427128161181765`*^9},
 CellLabel->
  "Out[156]=",ExpressionUUID->"83bfed1a-3d58-4f06-9ace-c9ca00386274"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"D1", "\[Rule]", "769"}], ",", 
   RowBox[{"D2", "\[Rule]", "62"}], ",", 
   RowBox[{"k1", "\[Rule]", "24"}], ",", 
   RowBox[{"k2", "\[Rule]", "74"}], ",", 
   RowBox[{"k3", "\[Rule]", "63"}], ",", 
   RowBox[{"k4", "\[Rule]", "11"}], ",", 
   RowBox[{"k5", "\[Rule]", "29"}], ",", 
   RowBox[{"k6", "\[Rule]", 
    FractionBox["2", "53"]}], ",", 
   RowBox[{"k7", "\[Rule]", 
    FractionBox["12396201", "101866"]}]}], "}"}]], "Output",
 CellChangeTimes->{3.8427116433936834`*^9, 3.8427116847790823`*^9, 
  3.8427128161236615`*^9},
 CellLabel->
  "Out[160]=",ExpressionUUID->"4651b173-6215-4f09-a2d8-265ca76fef69"],

Cell[CellGroupData[{

Cell[BoxData["\<\"Species Concentrations Graphic\"\>"], "Print",
 CellChangeTimes->{3.8427116848701267`*^9, 3.842712816132186*^9},
 CellLabel->
  "Durante la evaluaci\[OAcute]n de \
In[156]:=",ExpressionUUID->"2e2c61ce-3d6f-4699-ab48-cf1abd4c6606"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0], 
          Thickness[Large]], 
         LineBox[CompressedData["
1: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
          "]]}, Annotation[#, "Charting`Private`Tag$28330#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1], 
          Thickness[Large]], 
         LineBox[CompressedData["
1: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
          "]]}, Annotation[#, "Charting`Private`Tag$28330#2"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {Automatic, Automatic}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 610.2652384748711}, 
     BaseStyle -> {FontFamily -> "Arial"}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox["\"Concentrations\"", TraditionalForm], None}, {
        FormBox["\"Time\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> Directive[
       GrayLevel[0], Bold, Medium], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {All, All}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{Automatic, Automatic}, {
       Automatic, Automatic}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"L1\"", "\"D1\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Arial", 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Arial", 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Arial", 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Arial", 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          Directive[
           GrayLevel[0], Bold, Medium], FontFamily -> "Arial"}, Background -> 
         Automatic, StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontFamily", "\[Rule]", "\"Arial\""}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontFamily", "\[Rule]", "\"Arial\""}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                   BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False], ",", 
                 "Bold", ",", "Medium"}], "]"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Print",
 CellChangeTimes->{3.8427116848701267`*^9, 3.8427128163798423`*^9},
 CellLabel->
  "Durante la evaluaci\[OAcute]n de \
In[156]:=",ExpressionUUID->"ac964224-4c59-4ef7-bdc8-2407fc527245"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0], 
          Thickness[Large]], 
         LineBox[CompressedData["
1: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
          "]]}, Annotation[#, "Charting`Private`Tag$28395#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1], 
          Thickness[Large]], 
         LineBox[CompressedData["
1:eJwd1nc4V28UAHBEMq4IGdm7MkOl4lwrKyLZklCEMiKhlIYShUJGJDN7z+yv
HRGiVJJRUaRkFPJ7399f9/k8973vPec859z7Cjt4HDtNQ0VF1UVNRYWvqTPV
Pj23FdRChs0Qj5KuNJyNJRysQL1WOr6xYUQucQcURXAIwQAbpQ27smiaqk1A
CvjL9udgH0rPkwrikAdK1OodbD7PSeN4HiVI3y1uj71+kM+/TGA/7Cp6IY09
Sn/8aa/oIRBsP/btH/LH6VYnXw4SUszLH2H39X5aoeHSgM/jzdLYjeXr4ZE8
WnBcPy99HbkokUdYgO8wzM1HLq0hpwQrl+cK6ILlfTpu7EhnEz0VYX1wLXj+
5y9ysOG5D22iR+AAR3L4H2RvxVCv4xJGUDYdVLmMXBzeT+PFYQyWO6VOLSLn
XB3rruQ0gehvpqd+Iad6z8X+234MBEz2hs8hJ5xes9fmNoWTdemZ08gPLBl3
h/McB49CE4cJ5LsG3Iv9vGaws/KS1Tvk62oSDTx85pBpl835CjlAQSnUnt8C
FkNmf1FwPGIaplkClnC0tFGkFNmVy5h/TtAKil9sT0pCdmC0+6IkbA0bj014
riNbr7sVB4rYgKiM04Qdsum8f2CzqC3QLQ+8VkA+MnFbm0H8BNyl/q208s+I
1BqK2WosYQe1Zbn+BciHOtPexkqehKnDpqLGyLyjb16d57CHTz8HLw6vG5Gx
wx/3bouxB1I+nU8Vedurz4nlnKdgwehDit+aEXm/a5bKKvYUFOW8Xw1YNSIZ
W36fXtvuAMV2dh37/hqRIXWrXU8eOcD4Eq11wooRSVNJI6/J7QhXekyDQ5eM
yKAihpjPcY6ws5HcNLVgRP7NZv0byuMEHzPFSm/MG5EX07hOyiQ4gfLlsHn5
70bkr8cCLX28p0Fi/pNv9mcj8nys+E6fxNMgF+Jp/OijETkTIX2fi+8MZDRq
F4cPGZFnQhUXah6fAbo9XxLWu4zI8esHLO34nQHePlXZV2tE2l1Wr6NOdoZP
w0ydZtlG5DtfXZEMARegt/lmui/KiLT0OHpb94kLZD55IujmbUQOuph//yZ4
FmKXo2X5DYxIY4cTJhEpZ6H8ylDeOrcR2W3jVLFH2BX03/A4Cr81JHXN3HYM
PXWFLUOVkh9vG5ItRt7X/EXcYDPPVGCGkCFJ6vpP8aW5wXBvgX9v0hGyVv2a
fqOoO+SEsCwHrBiQ+w/eLnRMdwc+HdNsdykDskzpPge9+DkwfrJjkltMn5SX
jfHPyTgHZ6wjk5bGdMk8ycejhhLnQfTqB3mH4zqklHCa5s/M8+AUUSPr46tN
pvPmPIuW9ADJbMNEPVKTFOIoJvY/84CA9qtz9M9J8uVm2+pzHJ7QzjaV+3b5
IFlLp35OytoTxnjVJXdPKpPZtBLCE088gbskhTFEU56M3cT0OmnKE9Zo+p3O
GEuSN2nm71ju9gKi8P2T1moh0ov69SF2Ly/QCdFYyJXgIe2oauZ7Kryg6N/0
xxfOHOSRjeT0O2teMGxvzaY+xEaq/LthqanhDbTeRyab/FhJiXUX5n+3vWHF
MoPo9t1KcqwZNlb1eMMHpztebzJYSOrVPT4X2C8AOXxda1iehZz7wyUla3UB
Zu+78L2eJcj3K2vvviZfgFJTl0PzbQTZufwpIm3yAiTcq34vUESQFUttmna7
fIA2QOd4fCpBpi/mLnN7+kDuX/n+KwkE+eB3ZO5AuQ98WHRnvRdDkFcXfE/e
X/WBIxvhY34PCNL9lzW7nrovOITIiQREEqT1T2jfdNsXjjRr9glFEKTuvFhg
fbcvWMydsZW6T5DKPxjk/LddhADFzSxn7xGkyNzcuKLlRVC2fHf7RThBss4O
xM4lXQQNyiMWDeR/36r0sycugq1FbGhLGEF+m0n657jTD6iz36kYIbd9dT7z
tswP3AdTJM7dJcjAyVXllheXYEnNJKPuDkG6TIxNB7H5w1kdpQhTZPPx1iQV
C3+g36yyNH2bIOXHIugKx/3hMkWQnRv58zvR1/F/AqDc7wOL/y2CPDZg4OMh
eQVEvJ5yGV4nSI5Phlb3mq6B7BmB1AOXUb7b/Q7uGL8GMUsmReOBBPnEIIU/
myYY6Hq3MoUh76r49alFMxjmC9gy3gcQJBn2yHWtNRh8a2863vAnSDflT4Fu
XdfhDe+ZvtGLBNkc6pOsN3ATrKbT0194EaTXnsQJuqk7MKj/psvDBdVT2N9g
njYUxkwV3HYhC7FalI6IhcLwKe/DU84E+XJ2241Cp1DglK3Ns0HelX1XxGoy
FIK/HVY0OEOQk4IBp/Im7kJn/9o/JSdUD8Lq47HxcOBdOaa2x54gBXzCZns9
IqFctUi905Igt3f3nxIMjgQLS5uz4ciEGO/Q+QeRoBs623EUeW3gWT1RHgmJ
W5Zlhy0IckSxLcLgbyQ8vDgb+dWcIGMWqPa034wCZsOWIE4zgmS+cPFiffwD
KNgknxNrQpB/vU5t5FGiYcPyAbW0AUG+FWupHByIhq/5E6P/9AmyaljCc20i
GtZ7esdfIfuqfh8zoI2BTV4LJy4hz2/xa57RioFfBq387XoE+eVJ+C2pthhw
WqrMcNMlyMGeSqb0jliIy+/426tNkAU7WbgTe+LgoH01zwZJkNyqnaz8H+PA
olvn8TDyDeObDE/m44DN8bhmEbKl39+/qezxwGV4+t8p5E2tnz/kWMWDe22/
WDug+/YNaTVT8aBtrL49To0gaR55yo2sJ0BIBG2W6SGCtKAdOMwjmwQf7v18
sWs/Qd71cbmuB0nAwe+xhRm5fnK9zt84CWoT++xn9xGkWKuU8oh3EkjkjjgV
If+6FSSaWJkE7d/1Kvch36ffRcWvngz3X4Z5GOxF/c8YXC10/Amc8pO/GqJE
kIl3uLZz1KVAkM4c/2EFgpSa+2HG3ZoCLAesVeWQK0w7Yvh6UsBYgcuTG7lP
wJ9T/EMKXGjU3PpNniA3l49w7F1PgR2O6XuikL0/JbFbqj6FqQ63jTE5gtQ7
IMb2uO4pbNR5kPdlCXL5mzyzWH0qOCh/EueTJsiuYGX3122pwOT6lG0LcjLX
ge6Q3lTwfV2z9fdugtTS1AyfHkuFxvxijW7kBwlmzIWb0uDOfHXwFWRpvQDm
A3ppINaSZjaxiyAdMinMxoNpML2+NvN8J+pve3Pi8kw6ZMjP+CVJEiRnuktE
/K90UHGWuH8f2fZLAFvl33Q40M5XfBV55twTzl+MGRCxQPA7IG8O/MrvsjsD
uu69C5NEhpgA2ePuGVCoP/+8TIIgizqTj0rPZcDNZUe+N+IEGbXnS9T7n5nw
LP5nKilGoPPdGeVXfzKh50PdgBLyV87Pb1qps0DhohvLTmS1P5OChWxZ8NlJ
7ykb8veG8fxghSxwvC55aEIUza/haKeEVxZcpZKEO8hULq+pveazYESejnwr
QpCeSRQvuh/PYHrC7HaMMMofPJSzlp8BRSlZJAzZ9BPvH12qbEh3PtZ+DXmv
uPe1cLZs2P11RNodeTVPKIJdKRsYb11w1kQOqb2SJ+yfDbRlaw8WhAgy6d2+
L6qbcqAp+3qoNXIXT57tRa5cYHuw/5i6IEHKnT2tcVMwFzr30D9SQY6uEpB6
IJkL01RW4wrIdhZRC/n7cmGlzzNcBHkh+uLdKYtcyCaoZWmR+VjVq47H5YJ7
zJ7UDgGCPLd5iF2RJw+2vPmyyxyZdWGj6wdvPhz0MHhynZ8gn3tP9eWI5sMb
653DgchnfnUNnZbOh8+Tqpy+yLU/Y8bfqeZDQc3vNGdkl/ndf9vt88Gz+h+j
IXLjrMXOlMx8qHcu+MuN7Pm18LbxngKIzepVKecjyFcfTmoV6xVC9pvbrP92
EORYWImb5rFCOB1p1rqCPK9C9/C1dSGEyX4OWkBmic359MetENxC1aimkY8Y
LQZp3C+EmmfGBweRO+rvVg/0F0IPvUhELt6v15prVaYIRHNiIk4gDxfdCuev
LILZAzQiL3kJMm5UuZjveRHo16TJdyFbM39+vaOhCB4ERGm0IY86HxbkbS+C
Pc3anvXIkwL0JduHi0A2ou5XAfJ8+J3hrctFwGD0PCoSmfFsmAjNvmLYJfpE
whz5kHBU1eeKYvC2KRWY4UH/A2eLc4eeF4O5uWTWZ2S6fH6RBw3FYObXtGcC
+eX+nDDVjmLo1z1h+h7Z3phiF/22GOSWPle/RL55dZFWY60YTnwY4ylD7v5g
ZZKkXgK0i6e2BSOfSBCZMe0ugV19P41FkdcqfhSe7CsB3WyGOiHkhIFaX7fB
EnCgPbZbAHmI2YL6xvsS+PrOnYUH2fhqGHfJ9xJoP/pojgVZ0+n3YVaiFGR1
hDlXuQlyp2xbWrdhKWRb8MwNIi82nT2h3VsKkgKvzt/nxueVI6VZA6VAJqVL
hyNf2i3PwPimFN5vD/8eivw3eqns5Vgp3FCM8L7FjefrBrPlr1LoyZJ7dBmZ
kSXpuStnGVyRkFB3Qxay7uOJtCkDAx9jRn1kg197h0a+lMHrq1+2Echq9X21
Ut/LYMva56NMyHvuuqZdnC8DgeAr9xmQeUWSPbf9KQO5xLOsm5G/mtAx6TOW
QxCFXXKDC9WzeACqpcuhPvRE8k/kWk/P7Ede5XD0VnXOMLLsj+zLx1fLYZG2
aTEL+X2Uvo/lRjkYEusZmcihSt/cbDdVgB6vqUUG8qS/tI0TUwWQanp1qcjx
tIUqPjsqIOOBemwSMi1v2dLDgxWw7fL1wIfII1r1ngOBFaA40UFcQw5J6Hc6
tlYBLmkXxGyRzc1Cv+dRVUKxfdq6NbIkK+lDT1cJ3MMfh62QO27l36glKuFM
Y0CEBTKD151UCcFKYFLdwWSKHK6jNvZXvRKOLosq6iNH/c62SbtdCRuC3KQK
8mOj4GO/t1UB78YKHy+yxJjaN1quKjjxqlSdB7nIa+0G544qWCKknLmRW6P9
yveKVsECm3rZduS5kXPc/opVQPtN3IIdGZytR9dNq8C2dH8DM/L4VUVX+pgq
SNvtxUGFLFU8FczLVQ135VNLvm5H9Xprlbt9RzWE1u+mw35K83Jwm2A1iC9p
W35B5j1eIckkWQ0BCruoPiMzLYf0rO6tBu8bqeYTyHOHpHg+mFdD9bMP/KPI
5R2uRU9iqyFxPXzbILLG2I9Rse01oCEjdaUJWUQ4IM6PtwZkSh0nG5Gp0SB0
CdQAzQ2pI9iNE9ytHpI14DBkwN+ArPpFPbdmfw18EZ9prUXeP/fQz9imBuT2
MctXIcuu7WO9nFIDB/IWnAqRebivqQ/seg6J8TLwBLlEjo35vexziD7/sCcZ
+YhO6tDknucwVmNlix10scVt6cBzGNXbHJiEPD64JZbH4DmYKr2uTUTOi4qa
Oen2HHT6/5jEIZNMaQ+/5z6H0PfvG6KQnf+1TtHJ1ALNj00Jt5DFZM+RpxVq
IdDPbC/22AmOxBblWiC1aQZuIlvWORjfUKuF1FPuBLbu5Y0aKuNacPHxD7mO
vOvv/shV71rYUSkTehV5djH3wM+qWlizKnvpj3xhNirivVYdpO2Y0fNAdij7
ESCpVwfuL3jWziMbBxqe8TasA63yiAJsaQYG1S3mdRCpYMiB/Vns2oyicx1U
Z9BPuCNb257XDgutQ/Gp33PF+b3QX1V5WQf3nq1vO4PMnL3J+ZFFPWjaXBg6
gVx22MUxzqYe6IouP8a2new+GX+yHlSHKxyw8wVjLROd6+HlSu0PW2SjWCn9
J371kM/IzIwdecNQJutRPXAERhlaI7PbPVqoGK4HdT7eBXPcb+y7rw1ZNMDr
+0YNxshTHRnMsrYNMJNpE45dFCQUf8u+ASiHHllh68xwliidbYA1iP99FNmn
iWryQUADbN/fIo3d4zGkczSpAazCHmQYIl/rDt7aMd4AIU8XK/WRFzTce9/v
bYSRrDVzbeS9DDLJE/sbgesknwL2pd5Z95kDjaDZbcOE/c/Gg3FFrRF6tVQa
tZC3+Hprs+s0wkNOt93YfFmXnutZNMLZhAx6TWQtpltZFX6NYPyDfZhEjh5I
uhpZ1QjM0obdh5A9p6q336tphGAlkwJsg+XX+aG1jWCrfT4Sm2YHy/vrjY1Q
LbRwHNvLIWi/b0cj7BQW/3gQ1/en3U+rN40weopz5QCOZ6uQo+hKI3jmXD2o
gnxZP/Vwxb4mKJfwp92LfNalU3xUpQkGKAwzysjmIfO0mw81gYVUSS+2fLMa
xYxsgpFpvUTsKZV3sKjbBI/rHyhiG+3kUFGyboJuGV8XJWShLSG7Sy43wUPu
t+N7kCmtZ1kLmpogoZbklEdmOcqxUkRpAjXhW9TYlm/qP5a2NoFP68isHPL3
GfbC6s4muBBX3YbNwVpv2PqqCYpWNf2xnay3hb3/1ASVRtc+ySLT/qihY6Jp
hsqJg/UyyNrczKvOGs2gUTiZsRs5Jb9pV6xWM2T610djr2n4WbccbobDpc9u
YJeeG68WMmiGDoWCU9jClKpLb02bof1uoAD2+rnTS/qnm2H8N3PiLvw9o9T/
lLnTDD4ldsk7kcU9vL4u9DTDTRu1TknkUY8cofXeZviytL8WO9ZzwnJzfzN4
lRwqxN7sbdbJPdQM2lYnY7C/+qjkqI42wx9WVgfsvABq99tzzbB+jWNdAnlP
SNQP3q0UmJE4roI9E9IlKcZGgVA5GxnstNub7GXYKZDZf1YYmyPUtw+4KKAj
9HEL9lKYVbGTIAUGuZ4NiiNXRwlfKJCjwKtner7YZFLxkroxBdTeHXshhvxg
WnuZPEaBZ9rQhD2hPLIMxynAKK9QiR3ykuaPqiUFWKil07C7N0xXVewpcP3V
lUBsS4elDQVPClROP5bB9pI8yCASieKNHnwkipxa3LKDpo8C5zq0rosg0zE6
OUn3U4Cg2PljuzhsyjcfROvLrnpiy7JrqOW+ocDRtiE77BqfBvvjnyiQnPfu
IHb/vpqMzF8UqGg0XhbG81FfKGfA2QIektw+2I5dCZrR1i2Q9CH7mhD+39yv
i463bQEdrhV/7HGTsalkuxYQzjpyAdvhrfidbIcWeP1jy5n//bWou961BdT2
9Br8783tZtMBLeh8kMCNfUpjwVktsQUE1xwrBJFP1hiEf33XAvY1Rf8E8Pzc
9RfnGW2B71N9K9g01ln1emMovpvLv7DT/9D8zJlE6y0tv2DP7K8xOzfbAtws
rn3YFyulBH/9awERjXdp2OFldCWrwq3QIbvPCNvupqKBtFgr8Pqt6mLLHT81
aSvRCpkFFE3s/oXa7fW7WuGNuL0KNreiT+A1xVYI6OkSw04rHtei026FrI4L
a/y4vgUNwywurfA5I6AQW6xLV0XZtRXCCuZysCOmXiXYuLeCjJZLJrYT3+SJ
Z56tkG/onoTNcnfLpLp/K4TYVodhO5w2mfe52woerRpnsZn4Jra8y2sFs7Pa
kti2oZsPZP1sBbl5uQI+/D5W9vRnC63Ad+19Dva3WEGWnMVWcBgLy8IOSN8/
nvenFZbpFlKw4xpc75ZQt4FZ1PhD7IHFlyN1bG1gwqAVgK3v8ChwUKENkoNX
dbG3TadNvVZsA3/DNW3stx5FR4eV2+B56IYGtsuVTtERlTa4qEOoYofErb74
qN4Gb29oK2A3vzzJ982kDersJXixVQ5K1VF7t4FU0tPZHXj/l+Ah69MGg4cr
ZrBn7C2EbS62wYGbL79gPw4JuVUW0AZWSQzj2FT9k4bON9qgIih7CLvD5elo
d3Qb1OeFNmKbx/JSxVW2gbd0fCy2z09mTdn1Nlg+Z6+PnfMja115ow2yjHV0
scdmNapUqdtBtkHuMPaRmUsyhnTtoCVFp4EtOjHJ5U60A2tIkwp2/2Dt92z+
dlA5ErgTW67KPVZcDT0/0cmA7VRBbyJDtsPi6BA9dkJZKpOyRjvE5EzSYW8u
fnNN63A7TMTT0GCPZmu5ORq1w14lnb+8uF8T+cindu0gTEv/DXsmqHua72o7
RJdLvcSu7mh25w1uhw1T327sO9uqf3DdaAfVEUoXtkRmxuK22+2gFH6mHduh
J4iaIaIdmLc0N2K/3aHAs5jcDrc9ekqxO6pidHvq28E3aHsidtYvu6wr/9qh
KNX33P/769p7Z1J1QL7Mqhu2S/Ip1V6aDriUFuyKLaXvNCBE3wF++6OcsXOe
nt2gbO2AA841p7ALjH0sGIU7IKlPzhy7vCCU/pFmB/S4XANsimuZc9GdDhhK
yeHEppJWOVh2twMI6xAObLXZOpaq8A6YZXVkx67yaC9viOyAADdBtv/39xnZ
1BvXAdFBaczYcUFUKbPPOoDhwtAm7PMPjrzZ1dkBRjr9v3iQeWsmdTMYOuFS
SXk/9voVWt4ppk4I+JLxCntMXeybGEsnrKg+6sPO7HS8l76tE+x1rrzEVnw7
/iptRycUPjTvwj6yMmadKtMJ/caHmrGv7P3g/sSkEwxN2kqwter5tgqad8K0
0tcibMbDtsXJ1p0QHUMUYseavVtMcuyEj/cccnn+z+dt0GPfTuiLU0zH9lnj
FuYL6ITTaR6p2AduWlISgzohKacgBbv94TB94u1OqDuvnIR9fwdXDm94J9xl
upKIfTzN/EhCZCdQnNrj/89/d+wcT0wn2LhyxP2fb8nryPj4TtBkdorF/g8b
gCk/
          "]]}, Annotation[#, "Charting`Private`Tag$28395#2"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {Automatic, Automatic}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     BaseStyle -> {FontFamily -> "Arial"}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox["\"Concentrations\"", TraditionalForm], None}, {
        FormBox["\"Time\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> Directive[
       GrayLevel[0], Bold, Medium], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {All, All}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{Automatic, Automatic}, {
       Automatic, Automatic}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"L2\"", "\"D2\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Arial", 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Arial", 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Arial", 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Arial", 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          Directive[
           GrayLevel[0], Bold, Medium], FontFamily -> "Arial"}, Background -> 
         Automatic, StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontFamily", "\[Rule]", "\"Arial\""}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontFamily", "\[Rule]", "\"Arial\""}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                   BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False], ",", 
                 "Bold", ",", "Medium"}], "]"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Print",
 CellChangeTimes->{3.8427116848701267`*^9, 3.8427128165574703`*^9},
 CellLabel->
  "Durante la evaluaci\[OAcute]n de \
In[156]:=",ExpressionUUID->"7554d987-c477-4ab2-b54d-637b4387ca08"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1366, 685},
WindowMargins->{{-8, Automatic}, {Automatic, -8}},
Magnification:>1.7 Inherited,
FrontEndVersion->"12.0 para Microsoft Windows (64-bit) (April 8, 2019)",
StyleDefinitions->FrontEnd`FileName[{"Report"}, "StandardReport.nb", 
  CharacterEncoding -> "UTF-8"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 339, 5, 267, "Title",ExpressionUUID->"f14da9e3-cd3b-4f0b-a9f0-2cf4c418e796"],
Cell[922, 29, 518, 11, 96, "Text",ExpressionUUID->"602b73d6-e6b7-4f08-864c-6a109a3d117e"],
Cell[1443, 42, 1387, 29, 314, "Input",ExpressionUUID->"7de15c4f-cdca-4f45-a8e1-cc488242b23f",
 InitializationCell->True],
Cell[2833, 73, 473, 9, 134, "Text",ExpressionUUID->"b017b4c6-5f91-434b-9965-0c6a9a34a1ec"],
Cell[3309, 84, 1589, 32, 201, "Input",ExpressionUUID->"4aff2120-9760-4b40-93b4-726cb68aaa90",
 InitializationCell->True],
Cell[4901, 118, 991, 17, 248, "Text",ExpressionUUID->"185a94e5-ebf5-42dc-b449-2866cefbf384"],
Cell[CellGroupData[{
Cell[5917, 139, 1394, 24, 168, "Input",ExpressionUUID->"a3c6f401-14c6-4ff2-942f-f481510d0a40"],
Cell[7314, 165, 1536, 44, 207, "Output",ExpressionUUID->"c8ad9389-f6cd-4523-9147-2295520664a8"]
}, Open  ]],
Cell[8865, 212, 640, 13, 134, "Text",ExpressionUUID->"9027ee9e-8e30-48cb-9f7d-a99d8dfffa5b"],
Cell[CellGroupData[{
Cell[9530, 229, 1740, 40, 321, "Input",ExpressionUUID->"4f55b2f8-f8ac-442a-8467-2f344bd413af"],
Cell[11273, 271, 635, 16, 110, "Output",ExpressionUUID->"9c2ff3cb-4c08-4bda-83f8-5a5f9816e362"]
}, Open  ]],
Cell[11923, 290, 367, 10, 57, "Text",ExpressionUUID->"783a2c8e-d5ba-45de-9e16-1889345b6d79"],
Cell[CellGroupData[{
Cell[12315, 304, 876, 23, 168, "Input",ExpressionUUID->"05a70f9b-cd41-46dd-931f-3e0ccf159a7f"],
Cell[CellGroupData[{
Cell[13216, 331, 320, 5, 37, "Print",ExpressionUUID->"a9b7e8c1-2a33-4602-b289-44aa77ad71fd"],
Cell[13539, 338, 91654, 1565, 406, "Print",ExpressionUUID->"47c40fe7-0e69-48f9-ae5e-cbead1e7af39"],
Cell[105196, 1905, 78399, 1348, 413, "Print",ExpressionUUID->"93a29a25-4ac2-45a6-82d8-06d8fab52418"]
}, Open  ]]
}, Open  ]],
Cell[183622, 3257, 551, 13, 96, "Text",ExpressionUUID->"5416d73d-2b6d-4625-8c2e-a1f6ab03ad7c"],
Cell[CellGroupData[{
Cell[184198, 3274, 556, 12, 145, "Input",ExpressionUUID->"db045762-f2ec-4088-94df-ac4ab2ac6914"],
Cell[184757, 3288, 509, 11, 39, "Message",ExpressionUUID->"0980b79a-f51a-4b9a-9edb-6b204ad2ab07"]
}, Open  ]],
Cell[185281, 3302, 220, 5, 57, "Text",ExpressionUUID->"0578a8b0-652d-4a16-89f1-44806199d510"],
Cell[CellGroupData[{
Cell[185526, 3311, 2017, 55, 486, "Input",ExpressionUUID->"1e398066-e8da-45cb-898b-f2b1ee2115c1"],
Cell[187546, 3368, 1380, 41, 175, "Output",ExpressionUUID->"83bfed1a-3d58-4f06-9ace-c9ca00386274"],
Cell[188929, 3411, 667, 17, 110, "Output",ExpressionUUID->"4651b173-6215-4f09-a2d8-265ca76fef69"],
Cell[CellGroupData[{
Cell[189621, 3432, 248, 4, 37, "Print",ExpressionUUID->"2e2c61ce-3d6f-4699-ab48-cf1abd4c6606"],
Cell[189872, 3438, 31807, 583, 413, "Print",ExpressionUUID->"ac964224-4c59-4ef7-bdc8-2407fc527245"],
Cell[221682, 4023, 32174, 590, 413, "Print",ExpressionUUID->"7554d987-c477-4ab2-b54d-637b4387ca08"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

