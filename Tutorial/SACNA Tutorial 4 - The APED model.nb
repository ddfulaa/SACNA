(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    208309,       3917]
NotebookOptionsPosition[    204682,       3852]
NotebookOutlinePosition[    205127,       3869]
CellTagsIndexPosition[    205084,       3866]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Using the SACNA package - APED model", "Title",
 CellChangeTimes->{{3.8427089804948845`*^9, 3.8427090295265875`*^9}, {
  3.8427124704454412`*^9, 3.8427124835003734`*^9}, {3.8427125201800275`*^9, 
  3.842712524604207*^9}, {3.842712584012227*^9, 3.842712587756327*^9}, {
  3.842716609057553*^9, 
  3.842716609523698*^9}},ExpressionUUID->"f14da9e3-cd3b-4f0b-a9f0-\
2cf4c418e796"],

Cell["\<\
The purpose of this document is to give a short tutorial for the SACNA \
package. 
Let\[CloseCurlyQuote]s start by bringing the package functions to this \
notebook. \
\>", "Text",
 CellChangeTimes->{{3.8427090940384088`*^9, 3.842709143198292*^9}, {
  3.84270917461474*^9, 3.842709175014347*^9}, {3.842709234782617*^9, 
  3.8427092854783845`*^9}, {3.842709323126561*^9, 3.8427094019120207`*^9}, {
  3.8427097349980364`*^9, 
  3.8427097355261126`*^9}},ExpressionUUID->"602b73d6-e6b7-4f08-864c-\
6a109a3d117e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Quiet", "[", 
   RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{" ", 
  RowBox[{
   RowBox[{"Quiet", "[", 
    RowBox[{"Remove", "[", "\"\<Global`*\>\"", "]"}], "]"}], 
   ";"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SetDirectory", "[", 
    RowBox[{"NotebookDirectory", "[", "]"}], "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Quiet", "[", 
  RowBox[{"Get", "[", "\"\<../SACNA.wl\>\"", "]"}], "]"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.829920780934763*^9, 3.829920833287795*^9}, {
   3.8299208636854086`*^9, 3.829920876961373*^9}, {3.829922063595199*^9, 
   3.8299220699542017`*^9}, {3.8299228854502554`*^9, 3.8299228919647746`*^9}, 
   3.8299231995739794`*^9, {3.8299232541125665`*^9, 3.8299232669128857`*^9}, {
   3.829925391036563*^9, 3.829925396478142*^9}, {3.8299255175481253`*^9, 
   3.829925518116885*^9}, {3.82992555759075*^9, 3.829925560670066*^9}, {
   3.840724447360667*^9, 3.8407244479747877`*^9}, {3.8427065329074345`*^9, 
   3.842706566196204*^9}, 3.842709417793969*^9, {3.8427096240014725`*^9, 
   3.8427096706682377`*^9}, 3.8427097141447287`*^9, {3.842709938742461*^9, 
   3.8427099438321295`*^9}, 3.8427166654771967`*^9},
 CellLabel->
  "In[243]:=",ExpressionUUID->"7de15c4f-cdca-4f45-a8e1-cc488242b23f"],

Cell["\<\
Now let\[CloseCurlyQuote]s input the reactions and rates lists of this model. \
If we input the rates list as an empty list, SACNA will assign rates by \
default in the order of the list (the first reaction has constant k1 and so \
on). Reactions must be in terms of D-species, L-species, Z-species (achiral \
species), and the empty specie N1.\
\>", "Text",
 CellChangeTimes->{{3.8427097456059995`*^9, 3.842709857877953*^9}, {
  3.8427112324453096`*^9, 3.842711321629273*^9}, {3.8427169233629885`*^9, 
  3.842716953402181*^9}},ExpressionUUID->"b017b4c6-5f91-434b-9965-\
0c6a9a34a1ec"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"reactions", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
    "\"\<L1->L2\>\"", ",", "\"\<L2->L1\>\"", ",", "\"\<L2+L1->L3\>\"", ",", 
     "\"\<D2+L1->D4\>\"", ",", "\"\<L3->2L1\>\"", ",", "\"\<L4->L1+D1\>\"", 
     ",", "\"\<L4->D3\>\"", ",", "\"\<D3->L4\>\""}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rates", "=", 
   RowBox[{"{", "}"}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.8299802087543697`*^9, 3.829980210527068*^9}, {
   3.8299802452946463`*^9, 3.8299802475258884`*^9}, 3.8300323485873623`*^9, {
   3.8300323930454693`*^9, 3.8300323975875793`*^9}, {3.8300324350051165`*^9, 
   3.8300324418441353`*^9}, {3.8323369366694775`*^9, 
   3.8323370468387628`*^9}, {3.8323370881981716`*^9, 
   3.8323371093764877`*^9}, {3.832338190731743*^9, 3.8323382153086376`*^9}, {
   3.832338285147352*^9, 3.8323383224186974`*^9}, {3.832338491223477*^9, 
   3.832338515498742*^9}, {3.83233856647456*^9, 3.832338629236281*^9}, {
   3.8323541640908356`*^9, 3.8323541744500914`*^9}, {3.8427098616239605`*^9, 
   3.842709885111328*^9}, {3.842712544794824*^9, 3.842712551332883*^9}, {
   3.84271665057981*^9, 3.842716653138283*^9}},
 CellLabel->
  "In[247]:=",ExpressionUUID->"4aff2120-9760-4b40-93b4-726cb68aaa90"],

Cell[TextData[{
 "Note that we are not writing all the reactions, only it is left the dual \
reactions. If we use the function ",
 Cell[BoxData[
 "ClausuraDual"], "MCode",ExpressionUUID->
  "b4dff757-df7a-44cb-a684-eb7efcc4d351"],
 ", we can get all the reactions. This is done by default in the ",
 Cell[BoxData[
 "RunSemiAlgebraicAnalysis"], "MCode",ExpressionUUID->
  "2dac29e8-a853-402c-b326-7a84ee84b6b2"],
 " function."
}], "Text",
 CellChangeTimes->{{3.8427166832815638`*^9, 3.8427167267783475`*^9}, {
  3.842716772884984*^9, 
  3.8427168751690893`*^9}},ExpressionUUID->"7e36ca04-46f8-4458-8f62-\
d4bab08a03a8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Quiet", "[", 
  RowBox[{"ClausuraDual", "[", "reactions", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.842716789803565*^9, 3.8427167944176445`*^9}},
 CellLabel->
  "In[249]:=",ExpressionUUID->"2d30350e-b7ae-47af-b723-c307350c9d0f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"L1->L2\"\>", ",", "\<\"L2->L1\"\>", ",", "\<\"L1+L2->L3\"\>", 
   ",", "\<\"D2+L1->D4\"\>", ",", "\<\"L3->2L1\"\>", ",", "\<\"L4->D1+L1\"\>",
    ",", "\<\"L4->D3\"\>", ",", "\<\"D3->L4\"\>", ",", "\<\"D1->D2\"\>", 
   ",", "\<\"D2->D1\"\>", ",", "\<\"D1+D2->D3\"\>", ",", "\<\"D1+L2->L4\"\>", 
   ",", "\<\"D3->2D1\"\>", ",", "\<\"D4->D1+L1\"\>", ",", "\<\"D4->L3\"\>", 
   ",", "\<\"L3->D4\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.8427167960094633`*^9, 3.842717829715605*^9, 
  3.8427179242428904`*^9},
 CellLabel->
  "Out[249]=",ExpressionUUID->"94f86176-fcde-45b0-8f8c-d2ecb3200a88"]
}, Open  ]],

Cell[TextData[{
 "Now we can run the semialgebraic analysis of the model by using the ",
 Cell[BoxData[
 "RunSemiAlgebraicAnalysis"], "MCode",ExpressionUUID->
  "44b0ebc9-ae61-49d8-8504-00883738b73a"],
 " function. The first parameter corresponds to the reactions\
\[CloseCurlyQuote] list, the second parameter corresponds to the rates\
\[CloseCurlyQuote] list, and the last parameter corresponds to time in \
seconds (the Collins\[CloseCurlyQuote] algorithm may take so much time to \
find a solution). The function will ask for the Routh-Hurwitz condition \
number. Considering the first and last numbers will be faster, because this \
conditions are shorter than the others.  This example give us 4 Routh-Hurwitz \
conditions. Let\[CloseCurlyQuote]s begin with the first condition."
}], "Text",
 CellChangeTimes->{{3.8427099676939907`*^9, 3.8427100059258976`*^9}, {
  3.8427101192537117`*^9, 3.8427102665183506`*^9}, {3.8427103005748997`*^9, 
  3.842710465061907*^9}, {3.8427171235625453`*^9, 
  3.84271715327422*^9}},ExpressionUUID->"185a94e5-ebf5-42dc-b449-\
2866cefbf384"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"time", "=", "60"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"cadSolutions", "=", 
  RowBox[{"RunSemiAlgebraicAnalysis", "[", 
   RowBox[{"reactions", ",", "rates", ",", "time"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.829924896228572*^9, 3.829924948156794*^9}, 
   3.8299251270983305`*^9, {3.8299251806157093`*^9, 3.8299252075494227`*^9}, {
   3.829925634381386*^9, 3.829925641493581*^9}, 3.8299257355361433`*^9, 
   3.8299262231689196`*^9, {3.8299263467902403`*^9, 3.8299263509659896`*^9}, {
   3.829926596348615*^9, 3.8299266009083385`*^9}, {3.829926747692322*^9, 
   3.8299267633781567`*^9}, {3.8299274292024574`*^9, 3.829927434721895*^9}, {
   3.8299275674929686`*^9, 3.829927568186384*^9}, {3.8299276038419466`*^9, 
   3.829927607041765*^9}, {3.8299314273027153`*^9, 3.82993143282679*^9}, {
   3.829931467432212*^9, 3.8299314820846653`*^9}, {3.829931535315168*^9, 
   3.829931599571806*^9}, 3.829932117315387*^9, 3.8299321652901945`*^9, 
   3.829941723804149*^9, {3.829980164454916*^9, 3.8299801667501907`*^9}, {
   3.8300323678168736`*^9, 3.8300323745906825`*^9}, 3.830032468888297*^9, 
   3.840724473751862*^9, 3.842707793002324*^9, {3.84270987565723*^9, 
   3.842709889782691*^9}, {3.8427179310990334`*^9, 
   3.842717932330598*^9}},ExpressionUUID->"a3c6f401-14c6-4ff2-942f-\
f481510d0a40"],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{
  3.8427077961327925`*^9, 3.842708026619934*^9, 3.8427082554088497`*^9, {
   3.842710271946938*^9, 3.842710322124141*^9}, 3.8427104715523586`*^9, {
   3.8427169766207647`*^9, 3.8427169821673446`*^9}, 3.842717457446833*^9, 
   3.8427178345496826`*^9, {3.84271791587529*^9, 3.842717929348466*^9}},
 CellLabel->
  "Out[251]=",ExpressionUUID->"ffdc18dc-8fb1-43ae-bfc1-618d2cce9850"]
}, Open  ]],

Cell["\<\
The first condition cannot be satisfied. As mentioned before, let\
\[CloseCurlyQuote]s try with the last condition (in this case, the fourth \
one).\
\>", "Text",
 CellChangeTimes->{{3.842717940953575*^9, 
  3.8427180265282917`*^9}},ExpressionUUID->"46ae1494-6492-48c7-9c93-\
daef48011d4a"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"time", "=", "60"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"cadSolutions", "=", 
  RowBox[{"RunSemiAlgebraicAnalysis", "[", 
   RowBox[{"reactions", ",", "rates", ",", "time"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.8427178394512043`*^9, 3.842717862101259*^9}, {
  3.842718031860697*^9, 3.8427180370576963`*^9}},
 CellLabel->
  "In[252]:=",ExpressionUUID->"c74a82c3-c997-417f-a626-6c6c339d8135"],

Cell[BoxData[
 RowBox[{
  RowBox[{"D1", ">", "0"}], "&&", 
  RowBox[{"D2", ">", "0"}], "&&", 
  RowBox[{"D3", ">", "0"}], "&&", 
  RowBox[{"D4", ">", "0"}], "&&", 
  RowBox[{"k1", ">", "0"}], "&&", 
  RowBox[{"0", "<", "k2", "<", 
   FractionBox[
    RowBox[{"D1", " ", "k1"}], "D2"]}], "&&", 
  RowBox[{
   FractionBox[
    RowBox[{
     RowBox[{"D1", " ", "k1"}], "-", 
     RowBox[{"D2", " ", "k2"}]}], 
    RowBox[{"2", " ", "D1", " ", "D2"}]], "<", "k3", "<", 
   FractionBox[
    RowBox[{
     RowBox[{"D1", " ", "k1"}], "-", 
     RowBox[{"D2", " ", "k2"}]}], 
    RowBox[{"D1", " ", "D2"}]]}], "&&", 
  RowBox[{"k4", "\[Equal]", 
   FractionBox[
    RowBox[{
     RowBox[{"D1", " ", "k1"}], "-", 
     RowBox[{"D2", " ", "k2"}], "-", 
     RowBox[{"D1", " ", "D2", " ", "k3"}]}], 
    RowBox[{"D1", " ", "D2"}]]}], "&&", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       FractionBox[
        RowBox[{"D1", " ", "D2", " ", "k3"}], "D3"], "<", "k5", "<", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SuperscriptBox["D1", "2"], " ", 
           SuperscriptBox["k1", "2"], " ", "k3"}], "-", 
          RowBox[{
           SuperscriptBox["D2", "2"], " ", 
           SuperscriptBox["k2", "2"], " ", "k3"}], "+", 
          RowBox[{
           SuperscriptBox["D1", "2"], " ", "D2", " ", "k1", " ", 
           SuperscriptBox["k3", "2"]}], "+", 
          RowBox[{"D1", " ", 
           SuperscriptBox["D2", "2"], " ", "k2", " ", 
           SuperscriptBox["k3", "2"]}], "+", 
          RowBox[{"3", " ", 
           SuperscriptBox["D1", "2"], " ", "D2", " ", "k1", " ", "k3", " ", 
           "k4"}], "-", 
          RowBox[{"D1", " ", 
           SuperscriptBox["D2", "2"], " ", "k2", " ", "k3", " ", "k4"}], "+", 
          RowBox[{"2", " ", 
           SuperscriptBox["D1", "2"], " ", 
           SuperscriptBox["D2", "2"], " ", 
           SuperscriptBox["k3", "2"], " ", "k4"}], "+", 
          RowBox[{"2", " ", 
           SuperscriptBox["D1", "2"], " ", 
           SuperscriptBox["D2", "2"], " ", "k3", " ", 
           SuperscriptBox["k4", "2"]}]}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", "D1", " ", "D3", " ", "k1", " ", "k3"}], "+", 
          RowBox[{"2", " ", "D2", " ", "D3", " ", "k2", " ", "k3"}], "-", 
          RowBox[{"2", " ", "D1", " ", "D3", " ", "k1", " ", "k4"}], "+", 
          RowBox[{"2", " ", "D2", " ", "D3", " ", "k2", " ", "k4"}], "+", 
          RowBox[{
          "8", " ", "D1", " ", "D2", " ", "D3", " ", "k3", " ", "k4"}]}], 
         ")"}]}]}], "&&", 
      RowBox[{"k6", "\[Equal]", 
       FractionBox[
        RowBox[{
         RowBox[{"D1", " ", "k1"}], "-", 
         RowBox[{"D2", " ", "k2"}], "+", 
         RowBox[{"D1", " ", "D2", " ", "k3"}], "+", 
         RowBox[{"D1", " ", "D2", " ", "k4"}], "-", 
         RowBox[{"2", " ", "D3", " ", "k5"}]}], 
        RowBox[{"2", " ", "D4"}]]}], "&&", 
      RowBox[{
       FractionBox[
        RowBox[{
         RowBox[{
          RowBox[{"-", "D1"}], " ", "D2", " ", "k3"}], "+", 
         RowBox[{"D3", " ", "k5"}]}], "D4"], "<", "k7", "<", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            SuperscriptBox["D1", "2"]}], " ", "D2", " ", "k1", " ", 
           SuperscriptBox["k3", "2"], " ", "k6"}], "-", 
          RowBox[{"D1", " ", 
           SuperscriptBox["D2", "2"], " ", "k2", " ", 
           SuperscriptBox["k3", "2"], " ", "k6"}], "-", 
          RowBox[{"2", " ", 
           SuperscriptBox["D1", "2"], " ", 
           SuperscriptBox["D2", "2"], " ", 
           SuperscriptBox["k3", "2"], " ", "k4", " ", "k6"}], "+", 
          RowBox[{
          "D1", " ", "D3", " ", "k1", " ", "k3", " ", "k5", " ", "k6"}], "+", 
          RowBox[{
          "D2", " ", "D3", " ", "k2", " ", "k3", " ", "k5", " ", "k6"}], "+", 
          RowBox[{
          "2", " ", "D1", " ", "D2", " ", "D3", " ", "k3", " ", "k4", " ", 
           "k5", " ", "k6"}]}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"D1", " ", "D3", " ", "k1", " ", "k4", " ", "k5"}], "-", 
          RowBox[{"D2", " ", "D3", " ", "k2", " ", "k4", " ", "k5"}], "-", 
          RowBox[{
          "2", " ", "D1", " ", "D2", " ", "D3", " ", "k3", " ", "k4", " ", 
           "k5"}], "+", 
          RowBox[{"D1", " ", "D4", " ", "k1", " ", "k3", " ", "k6"}], "+", 
          RowBox[{"D2", " ", "D4", " ", "k2", " ", "k3", " ", "k6"}], "+", 
          RowBox[{
          "2", " ", "D1", " ", "D2", " ", "D4", " ", "k3", " ", "k4", " ", 
           "k6"}]}], ")"}]}]}], "&&", 
      RowBox[{"k8", "\[Equal]", 
       FractionBox[
        RowBox[{
         RowBox[{"D1", " ", "D2", " ", "k3"}], "-", 
         RowBox[{"D3", " ", "k5"}], "+", 
         RowBox[{"D4", " ", "k7"}]}], "D3"]}]}], ")"}], "||", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SuperscriptBox["D1", "2"], " ", 
           SuperscriptBox["k1", "2"], " ", "k3"}], "-", 
          RowBox[{
           SuperscriptBox["D2", "2"], " ", 
           SuperscriptBox["k2", "2"], " ", "k3"}], "+", 
          RowBox[{
           SuperscriptBox["D1", "2"], " ", "D2", " ", "k1", " ", 
           SuperscriptBox["k3", "2"]}], "+", 
          RowBox[{"D1", " ", 
           SuperscriptBox["D2", "2"], " ", "k2", " ", 
           SuperscriptBox["k3", "2"]}], "+", 
          RowBox[{"3", " ", 
           SuperscriptBox["D1", "2"], " ", "D2", " ", "k1", " ", "k3", " ", 
           "k4"}], "-", 
          RowBox[{"D1", " ", 
           SuperscriptBox["D2", "2"], " ", "k2", " ", "k3", " ", "k4"}], "+", 
          RowBox[{"2", " ", 
           SuperscriptBox["D1", "2"], " ", 
           SuperscriptBox["D2", "2"], " ", 
           SuperscriptBox["k3", "2"], " ", "k4"}], "+", 
          RowBox[{"2", " ", 
           SuperscriptBox["D1", "2"], " ", 
           SuperscriptBox["D2", "2"], " ", "k3", " ", 
           SuperscriptBox["k4", "2"]}]}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", "D1", " ", "D3", " ", "k1", " ", "k3"}], "+", 
          RowBox[{"2", " ", "D2", " ", "D3", " ", "k2", " ", "k3"}], "-", 
          RowBox[{"2", " ", "D1", " ", "D3", " ", "k1", " ", "k4"}], "+", 
          RowBox[{"2", " ", "D2", " ", "D3", " ", "k2", " ", "k4"}], "+", 
          RowBox[{
          "8", " ", "D1", " ", "D2", " ", "D3", " ", "k3", " ", "k4"}]}], 
         ")"}]}], "\[LessEqual]", "k5", "<", 
       FractionBox[
        RowBox[{
         RowBox[{"D1", " ", "k1"}], "-", 
         RowBox[{"D2", " ", "k2"}], "+", 
         RowBox[{"D1", " ", "D2", " ", "k3"}], "+", 
         RowBox[{"D1", " ", "D2", " ", "k4"}]}], 
        RowBox[{"2", " ", "D3"}]]}], "&&", 
      RowBox[{"k6", "\[Equal]", 
       FractionBox[
        RowBox[{
         RowBox[{"D1", " ", "k1"}], "-", 
         RowBox[{"D2", " ", "k2"}], "+", 
         RowBox[{"D1", " ", "D2", " ", "k3"}], "+", 
         RowBox[{"D1", " ", "D2", " ", "k4"}], "-", 
         RowBox[{"2", " ", "D3", " ", "k5"}]}], 
        RowBox[{"2", " ", "D4"}]]}], "&&", 
      RowBox[{"k7", ">", 
       FractionBox[
        RowBox[{
         RowBox[{
          RowBox[{"-", "D1"}], " ", "D2", " ", "k3"}], "+", 
         RowBox[{"D3", " ", "k5"}]}], "D4"]}], "&&", 
      RowBox[{"k8", "\[Equal]", 
       FractionBox[
        RowBox[{
         RowBox[{"D1", " ", "D2", " ", "k3"}], "-", 
         RowBox[{"D3", " ", "k5"}], "+", 
         RowBox[{"D4", " ", "k7"}]}], "D3"]}]}], ")"}]}], ")"}]}]], "Output",
 CellChangeTimes->{{3.8427178533385897`*^9, 3.8427178642055984`*^9}, 
   3.84271804232607*^9},
 CellLabel->
  "Out[253]=",ExpressionUUID->"8dc56d5e-4422-47e8-9d98-654819231a86"]
}, Open  ]],

Cell[TextData[{
 "As the algorithm found a solution, let\[CloseCurlyQuote]s find some \
particular solutions by using the ",
 Cell[BoxData[
 "FindInstance"], "MCode",ExpressionUUID->
  "5cb2cb71-0ef2-43a7-804c-1eb9cb5d36fb"],
 " command.  Note that the solution doesn\[CloseCurlyQuote]t contain an \
expression for the L-species. It\[CloseCurlyQuote]s because we are assuming \
the racemic condition."
}], "Text",
 CellChangeTimes->{{3.842710645653183*^9, 3.8427107090373435`*^9}, {
  3.8427108227193108`*^9, 3.842710841829531*^9}, {3.842710892917077*^9, 
  3.8427109526453695`*^9}},ExpressionUUID->"9027ee9e-8e30-48cb-9f7d-\
a99d8dfffa5b"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"numberOfSamples", "=", "10"}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{"feel", " ", "free", " ", "to", " ", "change"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"samplesList", "=", 
   RowBox[{"FindInstance", "[", 
    RowBox[{"cadSolutions", ",", 
     RowBox[{"DeleteCases", "[", 
      RowBox[{
       RowBox[{"DeleteDuplicates", "@", 
        RowBox[{"Cases", "[", 
         RowBox[{"cadSolutions", ",", "_Symbol", ",", "Infinity"}], "]"}]}], 
       ",", " ", 
       RowBox[{"Alternatives", "@@", 
        RowBox[{"{", 
         RowBox[{
         "GreaterEqual", ",", "Greater", ",", "Less", ",", "LessEqual"}], 
         "}"}]}]}], "]"}], ",", "numberOfSamples"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"sampleNumber", "=", "8"}], ";"}], "   ", 
  RowBox[{"(*", 
   RowBox[{"feel", " ", "free", " ", "to", " ", "change"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"samplesList", "[", 
  RowBox[{"[", "sampleNumber", "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.840724507394494*^9, 3.84072455111475*^9}, {
   3.8407250398693333`*^9, 3.8407250403346524`*^9}, {3.8407250768225856`*^9, 
   3.840725207479194*^9}, {3.840725662333973*^9, 3.8407256625833783`*^9}, {
   3.840725704152712*^9, 3.8407257062224274`*^9}, 3.842708082251777*^9, {
   3.8427082119922514`*^9, 3.842708226144125*^9}, {3.8427082669463587`*^9, 
   3.842708276002417*^9}, {3.8427105181855545`*^9, 3.8427106209749403`*^9}, {
   3.8427107252626486`*^9, 3.8427108124470725`*^9}, {3.8427108741740217`*^9, 
   3.842710884001808*^9}, {3.842711087729061*^9, 3.8427110881659307`*^9}},
 CellLabel->
  "In[254]:=",ExpressionUUID->"4f55b2f8-f8ac-442a-8467-2f344bd413af"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"D1", "\[Rule]", "516"}], ",", 
   RowBox[{"D2", "\[Rule]", "24"}], ",", 
   RowBox[{"D3", "\[Rule]", "77"}], ",", 
   RowBox[{"D4", "\[Rule]", "95"}], ",", 
   RowBox[{"k1", "\[Rule]", "89"}], ",", 
   RowBox[{"k2", "\[Rule]", "32"}], ",", 
   RowBox[{"k3", "\[Rule]", 
    FractionBox["179", "56"]}], ",", 
   RowBox[{"k4", "\[Rule]", 
    FractionBox["1625", "3612"]}], ",", 
   RowBox[{"k5", "\[Rule]", 
    FractionBox["3197952300132", "5904530219"]}], ",", 
   RowBox[{"k6", "\[Rule]", 
    FractionBox["582361127400", "16026582023"]}], ",", 
   RowBox[{"k7", "\[Rule]", "72"}], ",", 
   RowBox[{"k8", "\[Rule]", 
    FractionBox["27872957793960", "454648826863"]}]}], "}"}]], "Output",
 CellChangeTimes->{3.84271088748347*^9, 3.8427180528305826`*^9},
 CellLabel->
  "Out[257]=",ExpressionUUID->"f58bdb4d-6e1e-4fa4-a7df-1de5ff798ca4"]
}, Open  ]],

Cell[TextData[{
 "Now we are ready to using the SACNA\[CloseCurlyQuote]s system simulator \
with the  ",
 Cell[BoxData[
 "ReactionSystemSimulator"], "MCode",ExpressionUUID->
  "82254784-73a1-403a-a01d-ca05aaac2eb3"],
 " function. The simulation time depends on the sample. The user has to set \
it up."
}], "Text",
 CellChangeTimes->{{3.842710988453456*^9, 3.842711072565322*^9}, {
  3.8427180694664383`*^9, 
  3.8427181369383316`*^9}},ExpressionUUID->"783a2c8e-d5ba-45de-9e16-\
1889345b6d79"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"simulationTimeMin", "=", "0"}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"simulationTimeMax", "=", "20"}], ";", " ", 
  RowBox[{"(*", 
   RowBox[{"feel", " ", "free", " ", "to", " ", "change"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"graficss", "=", 
   RowBox[{"ReactionSystemSimulator", "[", 
    RowBox[{"reactions", ",", "rates", ",", " ", 
     RowBox[{"samplesList", "[", 
      RowBox[{"[", "sampleNumber", "]"}], "]"}], ",", "0.000001", ",", "t", 
     ",", "simulationTimeMin", ",", "simulationTimeMax"}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{
  3.8427108316645966`*^9, {3.8427110916691713`*^9, 3.8427110950940933`*^9}, {
   3.842711472086096*^9, 3.842711472181134*^9}, {3.84271814167794*^9, 
   3.8427181833152056`*^9}},
 CellLabel->
  "In[273]:=",ExpressionUUID->"05a70f9b-cd41-46dd-931f-3e0ccf159a7f"],

Cell[CellGroupData[{

Cell[BoxData["\<\"Species Concentrations Graphic\"\>"], "Print",
 CellChangeTimes->{{3.842708230399178*^9, 3.8427082780593*^9}, 
   3.8427111089564266`*^9, 3.8427114743046613`*^9, 3.84271805668147*^9, {
   3.842718143452933*^9, 3.8427181853721924`*^9}},
 CellLabel->
  "Durante la evaluaci\[OAcute]n de \
In[273]:=",ExpressionUUID->"cb4759b8-36ed-4266-b0aa-cdfafd2cf040"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0], 
          Thickness[Large]], 
         LineBox[CompressedData["
1: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
ww74eoquK4xmssCUS7oz5tXlzResRVhh0YR8CrOitOvGhiIrtM29Po15v9H7
iDcarGBSpu2J+Wm8QxqHBSsct7H3xmyt9qjycygriBqUXMB83X7xgGccK8gY
nbj0/3pn3CP+kBU+O3Bdxut13cTc+UJW2C9yJADfHw9NCeV5VtjVrB+KuTPm
RkbnP1YQYeC4iZnlQ7vqLR42yPnRdwvvV6xXdw+S2WBHVWYk3m8fl3kmurAB
r+6zeLxefLf9wlzHBiPlfBn4+UgePOvbxQZ7WQ88w5x72EuqfxT9vuteJl6f
usMuFzKyg81+zTeYMzoLtXx12GHy56P/8Pp4f8+PPiN2+LTAVYB56WBbrLk1
OwwnBH/EbNwxM0M+yw4apYnFmEe/yWX2PWaHYM4jtXi+JLyxN89hh4u2ag2Y
te30WQs/sUOgBncz5rA2G9eETnZgdxtux/tT6y0pc14OyOEQGsL7Q9N0bMFl
DhBdVfiLWSD2Mo0cxgGJxmEMjMiFlmw/797lAJLmAjNm7kbZfT7ZHBCT2s+F
+XW9NSt5hAPW+2+KY/5Zk3/5rhUnfBJt18N8L9KYwuTCCRenZXZi3rm3pd37
DCc65+cNMcdUT2ntu8UJ7R679mFWr5L5yVjECVPeh50x+1bccPUmc0GU6vAN
zDLDJmwrWlwwJ9wdgbmWifNlAHBBB9/gbcxEiJ6POIR8UO4B5q7ChKCMKC44
WW2fhXlXzrO0rlkuqM4z+47Pt8HD8OgfLtDz0hnEnDyjNDrKwQ1bbu8cw7ys
lL1lSZ4bSKb3FjG/ePqhiNeWG1ivOWxiQuZPrurenc8Nn7NvG2H+XBB5vaac
G8RrivdhPtNprnCgmRvOPGO1wVwh3HzKZRL9fmb2GObLsV2r/lI8oNiqG4x5
8OakSFYQD9jWjpZjvp3xunBrNA9MulfWYzYo83L5+IAHUvg/tWNOYFh8WpXL
A8OWw+OYza6ubx0a5oFX50p5mZHf+vDYiJltgpj9Cccw1yUJXn5jvwnkmf3O
Yh4tl3hoeGITlGf4XcYsIU6d8gzcBCqHOuMw3ygxDi3J2wQjUsRyzPYCge9O
K/BCKOmoBguyz/ZbXRtqvLCZNEzDHHkyeuPuDl5Y/fJgP+Yvhcn7vjjwAsv5
JE/MlOP5Q4IxvPDn/cpLzL/fzQt+WueFGckyDVasXvWt6llzboazO5/vxqzK
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
QO6+R014okEGlh6xhP3IRt1c0v+2koG8pXCXJbL4sXqVdwZkmBhzCbdCLvWy
Npc2I4P6pVfN1sgquVptl8zJ4HPpl70N8r1lIacWS7QeG48OzGcCOs6E2ZNB
qvNijS1y+5f8xcFDZFBN9dthhwzMSVe3O5NhYcjqNWahSKeo+eNovYKS1+2R
r9fvEDR3J8OVcYtBzON8ssnPTpPhFHEEDiJ/Shx86ehLhi/3WpYxn3x6sqbi
OhlMr0roH0JuGt9jLReCxu+ZC8Wsr0LtvnKTDB8Oi9di3vxuakKNToaEBw0H
DiNfWanzjYwhwxP2yDjMw3pZa8PxyHuWGjDnF/twJj1A8b9A3e2IrMBiHbeU
QoaLgTJXMNP3aIlbppPh5B2RbMzHGpYpLM/JsDnHRdAJmavniqnXezLcPb/6
FbP2pRebYj6Q4cSY0gzmYwKdLdmFZAj7IiTgjI1nus15vhjt39dtDpiHh44r
CJSTYSrw2mXMmwPjxzQryfDY9vEDzCfzZn3P15Mh/ujrdszxVjI6CU1o/2Sf
LWL+NGX+J68VmevZZhcs3govb/3qIkOZ1aAR5pLbJ5KvjJLBfWQiA/M09c7R
5AkyeDeNFmIWqyghFk2TweUWoQmz17pMzt8FMgzmBK9iTrpncUFmhQxn2nK4
jyBXaATo09bI0PtopwxmKY+u8qANMgxw++/CbMrMEfmIiQL9HVusMfulaVuW
slKgRuuAK+aatjtdzDwUUJX+FYTZf9f+n7fEKODocDgfc0ZPwLvnkhQoVd5c
gbnx0iv/KhkK0HNsmzGTsjiYuYgUUDB/NI75gJlOlRKFAt3yOYuYA4bdovcp
U6CedOQf5laJMtFoDQoYbH8jcBT5X958z5utFPAdsZHCrHRA7nGDDgU2qM+J
mIPCrqnw7aRA6qijDmbVJZ1dd/ZSYE/V3oOYD8ecZHtvQYGlqRQXzDeVEmrb
rChg8i7HDXPP0QU7kYMUeNWo6IeZ44+cpM5hNJ7jzcuYtRItBw46U+DmRFYg
5sj616cfHKcAFVyjMP/n8V2t8CQFAhXmYjEPMnMtd5+iQK7+/nuYdfXdA6V8
KJBHC03HPPJM/u7DAAo0vxvPxTx9Y3CNOYgCRroXP2BecH10xCOUAs48nR8x
M8jKK2tEUuBGilw5Zra/A7EJ0RQQs+Ouwrzpe/rKWiwFHOxbajFLJMqVliZS
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
x+d/bGDGDQ==
          "]]}, Annotation[#, "Charting`Private`Tag$44329#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1], 
          Thickness[Large]], 
         LineBox[CompressedData["
1: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
          "]]}, Annotation[#, "Charting`Private`Tag$44329#2"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {Automatic, Automatic}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 148.64080965772789`}, 
     BaseStyle -> {FontFamily -> "Arial"}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox["\"Concentrations\"", TraditionalForm], None}, {
        FormBox["\"Time\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> Directive[
       GrayLevel[0], Bold, Medium], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {All, All}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{Automatic, Automatic}, {
       Automatic, Automatic}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"L1\"", "\"D1\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Arial", 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Arial", 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Arial", 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Arial", 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          Directive[
           GrayLevel[0], Bold, Medium], FontFamily -> "Arial"}, Background -> 
         Automatic, StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontFamily", "\[Rule]", "\"Arial\""}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontFamily", "\[Rule]", "\"Arial\""}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                   BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False], ",", 
                 "Bold", ",", "Medium"}], "]"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Print",
 CellChangeTimes->{{3.842708230399178*^9, 3.8427082780593*^9}, 
   3.8427111089564266`*^9, 3.8427114743046613`*^9, 3.84271805668147*^9, {
   3.842718143452933*^9, 3.842718185784487*^9}},
 CellLabel->
  "Durante la evaluaci\[OAcute]n de \
In[273]:=",ExpressionUUID->"75d266bf-2200-4633-8fce-16d09eac06bf"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0], 
          Thickness[Large]], 
         LineBox[CompressedData["
1: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
T1L+Li/rgyp9xf8D66DRwA==
          "]]}, Annotation[#, "Charting`Private`Tag$44394#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1], 
          Thickness[Large]], 
         LineBox[CompressedData["
1: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
DJHnor0DRibI0LDQIqaHXC2vF54yRwYxlx0/6cgGDhJSi4tkMObw8KUhpzya
SbJaIUP0TVUtMrKPWm4GHxcF1iVdmFdCVjTaWHtGjAI37xNaxZFD/JT210lS
oLVaYbco8mQhyw+aLAV+Wtz+LoRcseXT2A8CBZ5d+ryBH1nnRqrPGiL6vs/M
Kl7khOprS3cpFAgJOTXJhey1d/sqUw0KdFzVmGZDbr9Hi36kTYFxJ5IoK/Lm
dj6FZT0KsGS/hpWndJA5UkN/s44CVNq/ukXkEk9LMwVTClzy/Jk2jUzP0m0+
Z0aBV+fOb5xCvjctbtu4mwKDBLW+SWR3/xb34P0UOHq9Yd8f5G8fc/52H6QA
pbNCcRwZ2OP81ttRwHGp4+8YsvhN21sTThTIPqtfOIJ8qWaDmNkxCozZF2YN
I/8SVop/7EaBd6Wsr4eQP9zvfnbImwJX1TS/DCIfTTtaWXaJAp95Wu37kOt/
bbMkXKEAB7X4fi/yWjqt/cI1CmhO9rT0IAu9GRnSDKXAIWL6iW7kCzPV3jfD
KTC9UFv0E7lvTcZ8XyQFZHwN5LBzirx442IpoBLU1/0DWYXD8s5UAgUSknPN
sUO36crsTqFAWcBo4XfkI7XTVI4naH1eRWV2IvN1XtjumU1BeXRHdTuywbmn
q8LfU0Dsn4kL9hHR1sZXeRQ4Rslkxc7Zrm83UYTGfzlocxseT6+TimgpBbpy
SoZb8fgDIgd1KihQUykRhX307bj3mRoKLOwPHm9BjrRQNIyup8DmQo8H2B9G
zP69baJAbtusFba4yrPrs20U2GETXP4Nufi2c/yFATTfZ1mfviKP0u46xA9R
QKPxeAi2dFkxqWCUAt1GKruxPRcVM5cmKfA82rinGTnunrmP4gwFrvsEZmCX
afuvZcxTYErByx9b3rWtNHCFAnZv3BSwt7Pz3HzARoVSGZs/Tcinkwx2l3BS
QWXbt1Lsyua7bewCVNggbngK23fTrt/Xpakg4finsxE5tdP/zRM5KrzcmZmH
XXfuue9nRSrwz8XFYpMzeNj5SFRonaiwwd5javhZjUqFxyPT67H9+1zCdq6m
wgILmYDdJPtJKkybCr+/OQ01IC+/neh8qUcF6cd2ddhqewgPaw2pMFpg9A47
MPgiXXgjFbxu+F3H1pgy3HR3BxX6oxy1sG3Cj3Jlm1PBUTpNHvuaWnRVswUV
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
          "]]}, Annotation[#, "Charting`Private`Tag$44394#2"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {Automatic, Automatic}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 14.331656711586133`}, 
     BaseStyle -> {FontFamily -> "Arial"}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox["\"Concentrations\"", TraditionalForm], None}, {
        FormBox["\"Time\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> Directive[
       GrayLevel[0], Bold, Medium], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {All, All}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{Automatic, Automatic}, {
       Automatic, Automatic}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"L2\"", "\"D2\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Arial", 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Arial", 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Arial", 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Arial", 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          Directive[
           GrayLevel[0], Bold, Medium], FontFamily -> "Arial"}, Background -> 
         Automatic, StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontFamily", "\[Rule]", "\"Arial\""}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontFamily", "\[Rule]", "\"Arial\""}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                   BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False], ",", 
                 "Bold", ",", "Medium"}], "]"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Print",
 CellChangeTimes->{{3.842708230399178*^9, 3.8427082780593*^9}, 
   3.8427111089564266`*^9, 3.8427114743046613`*^9, 3.84271805668147*^9, {
   3.842718143452933*^9, 3.842718185949105*^9}},
 CellLabel->
  "Durante la evaluaci\[OAcute]n de \
In[273]:=",ExpressionUUID->"f0adaeed-519c-4304-8a59-c21d1f37b380"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0], 
          Thickness[Large]], 
         LineBox[CompressedData["
1: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
FwcXww8bZrB6VFyxm/UWh9v6R9V/Y/l2c5ovKUQc7vXBlkVsnre9OF6bLA5u
3dn9bFvRfXM+x573oTgo/cqdVkC+vHXD4bdPxKG7f+i5MvK+1N706k60PuuM
JgryMJG9w+aNOMjMCHdoIr+wCd10cVYcjrzdFwfIj25bEtRVJCDfeOipN3LU
ypfNa+slYLnu1wU/ZMMdcU4v9CVAEO4cC0Sufd+QGWYqAYf6eQPCkcsFKOyP
PCQgmoOXnIqcc4j52+4cCTDfYS92H9m24SKHYpEEtNbK8DUhC7MbKM+WSoBx
WrTEU+S0i4GuOTUSsFNF/lA/8umukd6xHgk4aCUkM4UcTLt3J5hNEm5P3OhQ
NkbzJ2zvc2NeSRhoOKmuivy9aWpKVFgS+Le/KtdG9nFUJjcoSIKVl/rsVmS3
xIxc5k2S8PC4f6snssXEwejMEEn4IM7Zcg15e7RypUm4JIyb+jyqRjYWGx1e
iJGEnnjDoXrkjaa7DFzOSoL5Va6ALmSVq5qzytclwaFnQOg3Mu/+Od+7o5Kg
5ljWaLoN3U9XKnMOfJIEt5l1A1bIbNn7n0p9k4TGJxJCrsj/WgeVY/5IQugk
22oo8hSx4d12YSngLG2+dRm5ezza9o2ZFJhlGM9zm6B+HqUXl7xbCmKK+q5K
ILeKztzebCcFztblp0nIjSYeAiUMKWgrv9S3Fbmy1LjTL1oKyAJnq6KQU705
YblGCgTOxSv/Q07+9zjwZoMUdCff4Vpnit4Xs8IL9zVJQSrJmCKPHNM6+fdJ
D1pPa7zIVuRAYvfds1+l4Njupw+TkHePZ6jKy0uD7XQ+H2U7Wq/q+IArURqu
RahEb0TeeVg/pkBFGvI5ZVR3I5uzvHsuqS8NZr9+bT2KbExQPSpiJQ2POCNC
O5B1XduauE5JA1+sdk6UGcqvK5IHzc5IQ+2hm0ZZyNrf/UUS0qRhs8nf9ZXI
GseFfVgLpOFLSs3SKDI1dx/v6h1pyLm/SdfY3AZkB5bsZiekwZmlfoPsDjRv
ZHataU1Jwy+ngn8GyFJexWXBv6WB/+FOgj2y+O/tyz9WpYFZ9HHUOWRBwazi
rxIywBSXXMlngd4XLDW+v90hA9MuD36J7UT1ev5klqyVDASKtS4aIDONDGxx
sZeB5bDzga7I//wiM94wZOAf41VFKfJC4jPdl5EyIL4albnR0ga+PWGceHZT
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
6f/4PJolL62tbYCJbf8//w/sf/Kg
          "]]}, Annotation[#, "Charting`Private`Tag$44459#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1], 
          Thickness[Large]], 
         LineBox[CompressedData["
1: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
cYjpTakSQb589Malpw7iUJjj1y6IrUfFNds5Z3EosBnu4cfqLecXX5i/ODBl
khs4sf28vuNSfrg4sMwuaK2YoPPmQpId71tk5+3iX5EfbtM5M1grDo6o8Qwg
H49sjX7ZJA7qF51Me5H78ezvrXvFYa3on3E7cof1aeP7c+LA/mfkWiVyxWtz
nJqKBOi/mTVJRQ5cG9uyoSmB8jvhk4hsuCfkcIe+BOSf2hIVi5z/tSQuwEwC
8tJ4U0KRszeR2CtOSIDbbcevp5GTvJknLJIkYCPk228zZJuS+xyK6RIQFGew
QkMWZjdQnsuSgJDFuRlD5Kj7PvZJeRKgqBmTooZ848Pn1qEWCTh/FzctguxH
KXzjxyYJAQoVtIGtaP8JsGrfzisJixzCA93Ik1VTU6LCkiDrMunQgux6SJlY
oiAJ3NWz4hXIx0JjkpmNJWF455Wd6ch7R05difOXhAHR6r2HkXdeUX5hekES
WMyyLCyRt4sN9C8GScJHKTHdXchGZvsNjkZIgoZrV6YusspjjTnlJ5JQFGiw
xo/M6zLvXjAgCW8m1WxLt6Dz6dqLJLdhSfhUQzV5icyW4PJOakIS6HLhzFnI
q3U9ykF/JaG2+YxYJPIUvuTLTmEpeCZ62/kYcvOPKza9u6Rg5c5u/KIx6ueB
eiHhFlIw5W1z9idynejM6y22UhCQJ57Yj1xuemJTpqMU3GlzM69AfpG1vcnj
ihT87DTxC0GOdOaElTwp2HmjipkNOXy10ienRApMrl2WmzNC98X4C2nHq6Qg
gzCw8Q05qG78X22LFOy7Ei5WieyDby6I+CkFzaJXfc8hW/yIUZWXl4Zdj8JU
+gzReFV/dNvjpUG0wrSsHnnfGf2gVBVpOL32n0Ae8m6WL+2S+tJwvC3qXxjy
dpzqORFLaXjk/7tND3mzfX0V13VpeOrzpzjEANXXI8lTu25LA8/RkyJeyNqT
niK3oqQh9R6Psg2y+iVhV9ZUaXC3cXZQRiYnH+ddfyMN3nnpqhX61iDbvWw7
NyINHV0B237oof1GZv+G1pQ0kO3cLjcgSzllPPX7Iw0ZYWlHspHF/+xcmV6X
BolBdTZfZEHB+IyfEjKQoX3029xmdF8wV58c3CMDsTRa6YQuWq93r8XLWsoA
1073ogZkps/dW4/ayYBa8IhZFvKqx+WYXkcZIFZHC9kjL4Y2bu66LAMC03Im
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
oLbWguH/AdhUKW8=
          "]]}, Annotation[#, "Charting`Private`Tag$44459#2"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {Automatic, Automatic}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 14.24229884686947}, 
     BaseStyle -> {FontFamily -> "Arial"}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox["\"Concentrations\"", TraditionalForm], None}, {
        FormBox["\"Time\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> Directive[
       GrayLevel[0], Bold, Medium], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {All, All}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{Automatic, Automatic}, {
       Automatic, Automatic}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"L3\"", "\"D3\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Arial", 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Arial", 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Arial", 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Arial", 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          Directive[
           GrayLevel[0], Bold, Medium], FontFamily -> "Arial"}, Background -> 
         Automatic, StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontFamily", "\[Rule]", "\"Arial\""}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontFamily", "\[Rule]", "\"Arial\""}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                   BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False], ",", 
                 "Bold", ",", "Medium"}], "]"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Print",
 CellChangeTimes->{{3.842708230399178*^9, 3.8427082780593*^9}, 
   3.8427111089564266`*^9, 3.8427114743046613`*^9, 3.84271805668147*^9, {
   3.842718143452933*^9, 3.842718186120224*^9}},
 CellLabel->
  "Durante la evaluaci\[OAcute]n de \
In[273]:=",ExpressionUUID->"a1b6eb5a-d420-4b3d-9270-8833ab423e6b"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0], 
          Thickness[Large]], 
         LineBox[CompressedData["
1:eJwl13c8ld8fAHCb7L3HxZ2SWVxU90O00JBZouxSQl9FRJtkZ28hVCijrGSW
TZIkqawiUhnZfue5v7/u6/16nnuecz7ncz7nHHmHC2bOTAwMDMrMDAzYb1qg
A5u6U8pu6fkcZoY6K2h6hzOxwvnRigbmmDBvvq69icPdpX14aU03b8zzp5wD
MTRcrQjdaXXhcqy4JFpg/hoj5s+86RtrHx7QFhxX6D63y+f8P7kCmtWNDboN
O6MJix9KaP2R/3//3apb7G+5Slpw9P+f+z7hqvz7oYH2HxMDvX32TyOkGblW
Gknm/+0JprYw/fnQS/N++5burLYMr59yH2lf30fQTd11SPdu8BCNQdWJ7p7i
NSbS7BeazoA23duj3zs7PP5Gs1nlojuoTfmguv0oTa1hhAFzG/MtFQahcdo9
y1q6RXd9Eux+PUGTy42m2+GSxr+0Kz9o6dWmdBcV3/10TmWKdix8dXPzlRVk
7uTKGl2eojUN9dId0xrmcrz5J422XED3LUte5bdR07S57ut0XxqN/LPPdobG
d+gE3W6eAi9qSb9oi1badB9fjwnYMfeLdsOPm26TUGGDJ7WztJ07+jYwZ3C1
3xQw+k37lh1F95DH1h2zl3/T2Pe60y3ee2+i49FvmsrwHrqjE00OhPD/oX1b
m13HfJPQxbv56Q/t7EE9ul1pb5OmvedotYMDq5gTWaSH2nLmaPF2z+huaXWR
Leifo7WxBNNNNl974Kw7TxPcrkq3tcS+8T3n5mmJqcx0hwxHkxTS52kRM30r
mH+4kZ4MMy7Q5MkX6RZX8f5Vo7lAm2g2oHv/XI1aivMCTceDl+6Cq2blVq0L
tOTEpGXMZ2Ou1vZELdKEqlOXMCdbtTAUNyzSgrLt6W6TFtoTPr9IM9bE0b01
L//NAet/tC1RUf8wT1e/62mQW6Lx6h5bxCx9XVYo6+gS7Z0FK90me89YBN1c
okV+r1jAXNiz8VHvO/IXIbo9ximjZUXLtMP3E+Ywf7X7yFHfukxrE7Wn+9hA
iErn2DKt2pdAN7X9u9+45ArtzETRX8zMz3L5RYNXaE2dZX/o8Q2Q333ZfpU2
/zdyFjPnYo/jzSurtJ88++i+euHa3cg49BzWf2F2cPjSl9e+Sstdd6FbeX+a
+4D2Gu2QltoM5nohiSQd/nUatKdOYd4e3lJrtHWd5i62j+6HbL5jR/eu0/aU
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
m5rgL/H/+fwfNYJGJA==
          "]]}, Annotation[#, "Charting`Private`Tag$44524#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1], 
          Thickness[Large]], 
         LineBox[CompressedData["
1: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
ZXo1PsVTlIWVlbWgwL16/X8Xzevm
          "]]}, Annotation[#, "Charting`Private`Tag$44524#2"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {Automatic, Automatic}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 24.68978145501686}, 
     BaseStyle -> {FontFamily -> "Arial"}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox["\"Concentrations\"", TraditionalForm], None}, {
        FormBox["\"Time\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> Directive[
       GrayLevel[0], Bold, Medium], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {All, All}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{Automatic, Automatic}, {
       Automatic, Automatic}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"L4\"", "\"D4\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Arial", 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Arial", 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Arial", 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Arial", 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          Directive[
           GrayLevel[0], Bold, Medium], FontFamily -> "Arial"}, Background -> 
         Automatic, StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontFamily", "\[Rule]", "\"Arial\""}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontFamily", "\[Rule]", "\"Arial\""}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                   BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False], ",", 
                 "Bold", ",", "Medium"}], "]"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Print",
 CellChangeTimes->{{3.842708230399178*^9, 3.8427082780593*^9}, 
   3.8427111089564266`*^9, 3.8427114743046613`*^9, 3.84271805668147*^9, {
   3.842718143452933*^9, 3.842718186294868*^9}},
 CellLabel->
  "Durante la evaluaci\[OAcute]n de \
In[273]:=",ExpressionUUID->"64973e30-648b-4504-8715-2b65a8f572d5"]
}, Open  ]]
}, Open  ]],

Cell[TextData[{
 StyleBox["SACNA also allows to export a simulation results to ChemKinLator \
simulator files with the function ", "Item",
  FontColor->GrayLevel[0]],
 Cell[BoxData[
 "ExportToChemKinLator"], "MCode",ExpressionUUID->
  "468001d6-09cf-4916-85df-9b61526d94de"],
 "."
}], "Text",
 CellChangeTimes->{{3.842708090631228*^9, 3.8427081374229755`*^9}, {
   3.8427113506698723`*^9, 3.8427113612934127`*^9}, {3.842711405228603*^9, 
   3.8427114641694775`*^9}, 
   3.8427115561177526`*^9},ExpressionUUID->"5416d73d-2b6d-4625-8c2e-\
a1f6ab03ad7c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"content", "=", 
   RowBox[{"ExportToChemKinLator", "[", 
    RowBox[{"reactions", ",", "rates", ",", " ", 
     RowBox[{"samplesList", "[", 
      RowBox[{"[", "sampleNumber", "]"}], "]"}], ",", 
     FractionBox["1", "1000000000000000"], ",", 
     FractionBox["1", "1000000000000000"], ",", "0", ",", "simulationTimeMax",
      ",", "1000"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.842711495809909*^9, 3.8427115446165595`*^9}},
 CellLabel->
  "In[127]:=",ExpressionUUID->"db045762-f2ec-4088-94df-ac4ab2ac6914"],

Cell[BoxData[
 TemplateBox[{
  "Export","chtype",
   "\"First argument \\!\\(\\*RowBox[{\\\"$Canceled\\\"}]\\) is not a valid \
file specification.\"",2,127,33,26655503798046685306,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8407294479557*^9, 3.8407349728558693`*^9, 
  3.842708041719866*^9, 3.842708310200575*^9, 3.842711553105604*^9},
 CellLabel->
  "Durante la evaluaci\[OAcute]n de \
In[127]:=",ExpressionUUID->"dd9b2d30-b74a-40ec-9123-15a1e0c8f507"]
}, Open  ]],

Cell["\<\
We could try to do the same with the second and third Routh-Hurwitz \
condition, but in this case it could take a lot of time.\
\>", "Text",
 CellChangeTimes->{{3.8427115926446533`*^9, 3.842711617454268*^9}, {
   3.8427182156080904`*^9, 3.8427182557123823`*^9}, 
   3.84271835501675*^9},ExpressionUUID->"0578a8b0-652d-4a16-89f1-\
44806199d510"],

Cell[TextData[{
 "The user would like to know which rate constant corresponds to some \
reactions. It can be done with the function ",
 Cell[BoxData[
 "GetReactionsAndRates"], "MCode",ExpressionUUID->
  "f333a558-5ed1-462c-ae5b-773be26da77c"],
 "."
}], "Text",
 CellChangeTimes->{{3.8427183109215865`*^9, 3.842718368841477*^9}, {
  3.842718407032591*^9, 
  3.8427184158279696`*^9}},ExpressionUUID->"7bfa7d2f-10db-4599-9490-\
8190cea03be3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"GetReactionsAndRates", "[", 
   RowBox[{"reactions", ",", "rates"}], "]"}], " ", "//", 
  "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.8427183723715334`*^9, 3.8427183923927455`*^9}},
 CellLabel->
  "In[276]:=",ExpressionUUID->"b1daf149-d5d4-4170-9fb4-030d14b26962"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"\<\"L1->L2\"\>", "k1"},
     {"\<\"L2->L1\"\>", "k2"},
     {"\<\"L1+L2->L3\"\>", "k3"},
     {"\<\"D2+L1->D4\"\>", "k4"},
     {"\<\"L3->2L1\"\>", "k5"},
     {"\<\"L4->D1+L1\"\>", "k6"},
     {"\<\"L4->D3\"\>", "k7"},
     {"\<\"D3->L4\"\>", "k8"},
     {"\<\"D1->D2\"\>", "k1"},
     {"\<\"D2->D1\"\>", "k2"},
     {"\<\"D1+D2->D3\"\>", "k3"},
     {"\<\"D1+L2->L4\"\>", "k4"},
     {"\<\"D3->2D1\"\>", "k5"},
     {"\<\"D4->D1+L1\"\>", "k6"},
     {"\<\"D4->L3\"\>", "k7"},
     {"\<\"L3->D4\"\>", "k8"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.842718388096994*^9, 3.842718395903763*^9}},
 CellLabel->
  "Out[276]//MatrixForm=",ExpressionUUID->"c1743cee-b156-4ba2-804c-\
2842dd55c7aa"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1366, 685},
WindowMargins->{{-8, Automatic}, {Automatic, -8}},
Magnification:>1.7 Inherited,
FrontEndVersion->"12.0 para Microsoft Windows (64-bit) (April 8, 2019)",
StyleDefinitions->FrontEnd`FileName[{"Report"}, "StandardReport.nb", 
  CharacterEncoding -> "UTF-8"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 382, 6, 163, "Title",ExpressionUUID->"f14da9e3-cd3b-4f0b-a9f0-2cf4c418e796"],
Cell[965, 30, 518, 11, 96, "Text",ExpressionUUID->"602b73d6-e6b7-4f08-864c-6a109a3d117e"],
Cell[1486, 43, 1389, 29, 314, "Input",ExpressionUUID->"7de15c4f-cdca-4f45-a8e1-cc488242b23f",
 InitializationCell->True],
Cell[2878, 74, 595, 10, 134, "Text",ExpressionUUID->"b017b4c6-5f91-434b-9965-0c6a9a34a1ec"],
Cell[3476, 86, 1289, 25, 135, "Input",ExpressionUUID->"4aff2120-9760-4b40-93b4-726cb68aaa90",
 InitializationCell->True],
Cell[4768, 113, 618, 15, 134, "Text",ExpressionUUID->"7e36ca04-46f8-4458-8f62-d4bab08a03a8"],
Cell[CellGroupData[{
Cell[5411, 132, 256, 5, 95, "Input",ExpressionUUID->"2d30350e-b7ae-47af-b723-c307350c9d0f"],
Cell[5670, 139, 637, 11, 123, "Output",ExpressionUUID->"94f86176-fcde-45b0-8f8c-d2ecb3200a88"]
}, Open  ]],
Cell[6322, 153, 1078, 18, 248, "Text",ExpressionUUID->"185a94e5-ebf5-42dc-b449-2866cefbf384"],
Cell[CellGroupData[{
Cell[7425, 175, 1337, 21, 102, "Input",ExpressionUUID->"a3c6f401-14c6-4ff2-942f-f481510d0a40"],
Cell[8765, 198, 431, 7, 89, "Output",ExpressionUUID->"ffdc18dc-8fb1-43ae-bfc1-618d2cce9850"]
}, Open  ]],
Cell[9211, 208, 300, 7, 96, "Text",ExpressionUUID->"46ae1494-6492-48c7-9c93-daef48011d4a"],
Cell[CellGroupData[{
Cell[9536, 219, 436, 9, 102, "Input",ExpressionUUID->"c74a82c3-c997-417f-a626-6c6c339d8135"],
Cell[9975, 230, 7791, 197, 693, "Output",ExpressionUUID->"8dc56d5e-4422-47e8-9d98-654819231a86"]
}, Open  ]],
Cell[17781, 430, 640, 13, 134, "Text",ExpressionUUID->"9027ee9e-8e30-48cb-9f7d-a99d8dfffa5b"],
Cell[CellGroupData[{
Cell[18446, 447, 1740, 40, 321, "Input",ExpressionUUID->"4f55b2f8-f8ac-442a-8467-2f344bd413af"],
Cell[20189, 489, 891, 22, 164, "Output",ExpressionUUID->"f58bdb4d-6e1e-4fa4-a7df-1de5ff798ca4"]
}, Open  ]],
Cell[21095, 514, 493, 12, 96, "Text",ExpressionUUID->"783a2c8e-d5ba-45de-9e16-1889345b6d79"],
Cell[CellGroupData[{
Cell[21613, 530, 900, 22, 168, "Input",ExpressionUUID->"05a70f9b-cd41-46dd-931f-3e0ccf159a7f"],
Cell[CellGroupData[{
Cell[22538, 556, 371, 6, 37, "Print",ExpressionUUID->"cb4759b8-36ed-4266-b0aa-cdfafd2cf040"],
Cell[22912, 564, 46288, 821, 415, "Print",ExpressionUUID->"75d266bf-2200-4633-8fce-16d09eac06bf"],
Cell[69203, 1387, 41908, 749, 422, "Print",ExpressionUUID->"f0adaeed-519c-4304-8a59-c21d1f37b380"],
Cell[111114, 2138, 45054, 801, 415, "Print",ExpressionUUID->"a1b6eb5a-d420-4b3d-9270-8833ab423e6b"],
Cell[156171, 2941, 44570, 793, 415, "Print",ExpressionUUID->"64973e30-648b-4504-8715-2b65a8f572d5"]
}, Open  ]]
}, Open  ]],
Cell[200768, 3738, 551, 13, 96, "Text",ExpressionUUID->"5416d73d-2b6d-4625-8c2e-a1f6ab03ad7c"],
Cell[CellGroupData[{
Cell[201344, 3755, 556, 12, 145, "Input",ExpressionUUID->"db045762-f2ec-4088-94df-ac4ab2ac6914"],
Cell[201903, 3769, 482, 10, 39, "Message",ExpressionUUID->"dd9b2d30-b74a-40ec-9123-15a1e0c8f507"]
}, Open  ]],
Cell[202400, 3782, 354, 7, 96, "Text",ExpressionUUID->"0578a8b0-652d-4a16-89f1-44806199d510"],
Cell[202757, 3791, 439, 11, 96, "Text",ExpressionUUID->"7bfa7d2f-10db-4599-9490-8190cea03be3"],
Cell[CellGroupData[{
Cell[203221, 3806, 303, 7, 95, "Input",ExpressionUUID->"b1daf149-d5d4-4170-9fb4-030d14b26962"],
Cell[203527, 3815, 1127, 33, 504, "Output",ExpressionUUID->"c1743cee-b156-4ba2-804c-2842dd55c7aa"]
}, Open  ]]
}, Open  ]]
}
]
*)

